Last login: Wed Oct 30 19:51:59 on ttys002
➜  EGG git:(master) ✗ sh start_signal_game.sh 
Traceback (most recent call last):
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/zoo/signal_game/train.py", line 98, in <module>
    import context
ModuleNotFoundError: No module named 'context'
➜  EGG git:(master) ✗ sh start_signal_game.sh
Traceback (most recent call last):
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/zoo/signal_game/train.py", line 144, in <module>
    train_loader = OneHotLoader(n_features=opts.n_features, batch_size=opts.batch_size,
AttributeError: 'Namespace' object has no attribute 'n_features'
➜  EGG git:(master) ✗ sh start_signal_game.sh
Traceback (most recent call last):
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/zoo/signal_game/train.py", line 147, in <module>
    test_loader = OneHotLoader(n_features=opts.n_features, batch_size=opts.batch_size,
AttributeError: 'Namespace' object has no attribute 'n_features'
➜  EGG git:(master) ✗ sh start_signal_game.sh




----------------train
train data: <class 'egg.zoo.signal_game.sgdata.OneHotLoader'>
batch: <class 'list'>
batch:  dim2
wrapper: tensor([[1., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 1., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 1., 0., 0.],
        [0., 0., 0., 0., 0., 0., 1., 0.],
        [1., 0., 0., 0., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0., 0., 0.],
        [0., 1., 0., 0., 0., 0., 0., 0.],
        [0., 1., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 1., 0., 0.],
        [1., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 1., 0., 0.],
        [0., 0., 0., 0., 0., 0., 1., 0.],
        [0., 0., 0., 0., 1., 0., 0., 0.],
        [0., 0., 0., 0., 0., 1., 0., 0.],
        [0., 1., 0., 0., 0., 0., 0., 0.],
        [0., 1., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 1., 0.],
        [0., 0., 0., 0., 0., 1., 0., 0.],
        [0., 0., 0., 1., 0., 0., 0., 0.],
        [0., 1., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 1., 0.],
        [1., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 1.],
        [0., 0., 0., 1., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 1., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 1.],
        [0., 0., 0., 0., 1., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 1.],
        [0., 0., 0., 0., 1., 0., 0., 0.],
        [0., 0., 0., 0., 1., 0., 0., 0.],
        [0., 0., 0., 0., 0., 1., 0., 0.]])
game size: 2
shape of tensor  torch.Size([8])
Tensor: tensor([1., 0., 0., 0., 0., 0., 0., 0.])
Traceback (most recent call last):
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/zoo/signal_game/train.py", line 162, in <module>
    trainer.train(n_epochs=opts.n_epochs)  # default is 10
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/core/trainers.py", line 158, in train
    train_loss, train_rest = self.train_epoch()
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/core/trainers.py", line 138, in train_epoch
    optimized_loss, rest = self.game(*batch)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/torch/nn/modules/module.py", line 547, in __call__
    result = self.forward(*input, **kwargs)
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/core/reinforce_wrappers.py", line 113, in forward
    message, sender_log_prob, sender_entropy = self.sender(sender_input)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/torch/nn/modules/module.py", line 547, in __call__
    result = self.forward(*input, **kwargs)
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/core/reinforce_wrappers.py", line 42, in forward
    logits = self.agent(*args, **kwargs)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/torch/nn/modules/module.py", line 547, in __call__
    result = self.forward(*input, **kwargs)
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/zoo/signal_game/archs.py", line 31, in forward
    emb = self.return_embeddings(x)
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/zoo/signal_game/archs.py", line 65, in return_embeddings
    h_i = self.lin1(h)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/torch/nn/modules/module.py", line 547, in __call__
    result = self.forward(*input, **kwargs)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/torch/nn/modules/linear.py", line 87, in forward
    return F.linear(input, self.weight, self.bias)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/torch/nn/functional.py", line 1371, in linear
    output = input.matmul(weight.t())
RuntimeError: size mismatch, m1: [1 x 8], m2: [4096 x 50] at ../aten/src/TH/generic/THTensorMath.cpp:752
➜  EGG git:(master) ✗ sh start_signal_game.sh




----------------train
train data: <class 'egg.zoo.signal_game.sgdata.OneHotLoader'>
batch: <class 'list'>
batch:  dim2
wrapper: tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]])
game size: 2
shape of tensor  torch.Size([4096])
Tensor: tensor([0., 0., 0.,  ..., 0., 0., 0.])
game size: 2
shape of tensor  torch.Size([4096])
Tensor: tensor([0., 0., 0.,  ..., 0., 0., 0.])
Traceback (most recent call last):
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/zoo/signal_game/train.py", line 162, in <module>
    trainer.train(n_epochs=opts.n_epochs)  # default is 10
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/core/trainers.py", line 158, in train
    train_loss, train_rest = self.train_epoch()
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/core/trainers.py", line 138, in train_epoch
    optimized_loss, rest = self.game(*batch)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/torch/nn/modules/module.py", line 547, in __call__
    result = self.forward(*input, **kwargs)
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/core/reinforce_wrappers.py", line 113, in forward
    message, sender_log_prob, sender_entropy = self.sender(sender_input)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/torch/nn/modules/module.py", line 547, in __call__
    result = self.forward(*input, **kwargs)
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/core/reinforce_wrappers.py", line 42, in forward
    logits = self.agent(*args, **kwargs)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/torch/nn/modules/module.py", line 547, in __call__
    result = self.forward(*input, **kwargs)
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/zoo/signal_game/archs.py", line 35, in forward
    h = self.conv2(emb)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/torch/nn/modules/module.py", line 547, in __call__
    result = self.forward(*input, **kwargs)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/torch/nn/modules/conv.py", line 343, in forward
    return self.conv2d_forward(input, self.weight)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/torch/nn/modules/conv.py", line 340, in conv2d_forward
    self.padding, self.dilation, self.groups)
RuntimeError: Expected 4-dimensional input for 4-dimensional weight 20 1 2, but got 3-dimensional input of size [50, 1, 2] instead
➜  EGG git:(master) ✗ sh start_signal_game.sh




----------------train
train data: <class 'egg.zoo.signal_game.sgdata.OneHotLoader'>
batch: <class 'list'>
batch:  dim2
wrapper: tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]])
game size: 2
shape of tensor  torch.Size([4096])
Tensor: tensor([0., 0., 0.,  ..., 0., 0., 0.])
game size: 2
shape of tensor  torch.Size([4096])
Tensor: tensor([0., 0., 0.,  ..., 0., 0., 0.])
Traceback (most recent call last):
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/zoo/signal_game/train.py", line 162, in <module>
    trainer.train(n_epochs=opts.n_epochs)  # default is 10
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/core/trainers.py", line 158, in train
    train_loss, train_rest = self.train_epoch()
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/core/trainers.py", line 138, in train_epoch
    optimized_loss, rest = self.game(*batch)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/torch/nn/modules/module.py", line 547, in __call__
    result = self.forward(*input, **kwargs)
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/core/reinforce_wrappers.py", line 113, in forward
    message, sender_log_prob, sender_entropy = self.sender(sender_input)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/torch/nn/modules/module.py", line 547, in __call__
    result = self.forward(*input, **kwargs)
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/core/reinforce_wrappers.py", line 42, in forward
    logits = self.agent(*args, **kwargs)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/torch/nn/modules/module.py", line 547, in __call__
    result = self.forward(*input, **kwargs)
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/zoo/signal_game/archs.py", line 35, in forward
    h = self.conv2(emb)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/torch/nn/modules/module.py", line 547, in __call__
    result = self.forward(*input, **kwargs)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/torch/nn/modules/conv.py", line 343, in forward
    return self.conv2d_forward(input, self.weight)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/torch/nn/modules/conv.py", line 340, in conv2d_forward
    self.padding, self.dilation, self.groups)
RuntimeError: Expected 4-dimensional input for 4-dimensional weight 20 1 2, but got 3-dimensional input of size [50, 1, 2] instead
➜  EGG git:(master) ✗ sh start_signal_game.sh




----------------train
train data: <class 'egg.zoo.signal_game.sgdata.OneHotLoader'>
batch: <class 'list'>
batch:  dim2
wrapper: tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]])
game size: 2
shape of tensor  torch.Size([4096])
Tensor: tensor([0., 0., 0.,  ..., 0., 0., 0.])
game size: 2
shape of tensor  torch.Size([4096])
Tensor: tensor([0., 0., 0.,  ..., 0., 0., 0.])
Traceback (most recent call last):
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/zoo/signal_game/train.py", line 162, in <module>
    trainer.train(n_epochs=opts.n_epochs)  # default is 10
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/core/trainers.py", line 158, in train
    train_loss, train_rest = self.train_epoch()
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/core/trainers.py", line 138, in train_epoch
    optimized_loss, rest = self.game(*batch)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/torch/nn/modules/module.py", line 547, in __call__
    result = self.forward(*input, **kwargs)
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/core/reinforce_wrappers.py", line 113, in forward
    message, sender_log_prob, sender_entropy = self.sender(sender_input)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/torch/nn/modules/module.py", line 547, in __call__
    result = self.forward(*input, **kwargs)
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/core/reinforce_wrappers.py", line 42, in forward
    logits = self.agent(*args, **kwargs)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/torch/nn/modules/module.py", line 547, in __call__
    result = self.forward(*input, **kwargs)
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/zoo/signal_game/archs.py", line 35, in forward
    h = self.conv2(emb)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/torch/nn/modules/module.py", line 547, in __call__
    result = self.forward(*input, **kwargs)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/torch/nn/modules/conv.py", line 343, in forward
    return self.conv2d_forward(input, self.weight)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/torch/nn/modules/conv.py", line 340, in conv2d_forward
    self.padding, self.dilation, self.groups)
RuntimeError: Expected 4-dimensional input for 4-dimensional weight 20 1 2, but got 3-dimensional input of size [50, 1, 2] instead
➜  EGG git:(master) ✗ sh start_signal_game.sh




----------------train
train data: <class 'egg.zoo.signal_game.sgdata.OneHotLoader'>
batch: <class 'list'>
batch:  dim2
wrapper: tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]])
game size: 2
shape of tensor  torch.Size([4096])
Tensor: tensor([0., 0., 0.,  ..., 0., 0., 0.])
game size: 2
shape of tensor  torch.Size([4096])
Tensor: tensor([0., 0., 0.,  ..., 0., 0., 0.])
Traceback (most recent call last):
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/zoo/signal_game/train.py", line 162, in <module>
    trainer.train(n_epochs=opts.n_epochs)  # default is 10
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/core/trainers.py", line 158, in train
    train_loss, train_rest = self.train_epoch()
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/core/trainers.py", line 138, in train_epoch
    optimized_loss, rest = self.game(*batch)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/torch/nn/modules/module.py", line 547, in __call__
    result = self.forward(*input, **kwargs)
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/core/reinforce_wrappers.py", line 113, in forward
    message, sender_log_prob, sender_entropy = self.sender(sender_input)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/torch/nn/modules/module.py", line 547, in __call__
    result = self.forward(*input, **kwargs)
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/core/reinforce_wrappers.py", line 42, in forward
    logits = self.agent(*args, **kwargs)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/torch/nn/modules/module.py", line 547, in __call__
    result = self.forward(*input, **kwargs)
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/zoo/signal_game/archs.py", line 35, in forward
    h = self.conv2(emb)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/torch/nn/modules/module.py", line 547, in __call__
    result = self.forward(*input, **kwargs)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/torch/nn/modules/conv.py", line 343, in forward
    return self.conv2d_forward(input, self.weight)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/torch/nn/modules/conv.py", line 340, in conv2d_forward
    self.padding, self.dilation, self.groups)
RuntimeError: Expected 4-dimensional input for 4-dimensional weight 20 1 2, but got 3-dimensional input of size [50, 1, 2] instead
➜  EGG git:(master) ✗ sh start_signal_game.sh




----------------train
train data: <class 'egg.zoo.signal_game.sgdata.OneHotLoader'>
batch: <class 'list'>
batch:  dim2
wrapper: tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]])
game size: 2
shape of tensor  torch.Size([4096])
Tensor: tensor([0., 0., 0.,  ..., 0., 0., 0.])
game size: 2
shape of tensor  torch.Size([4096])
Tensor: tensor([0., 0., 0.,  ..., 0., 0., 0.])
Traceback (most recent call last):
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/zoo/signal_game/train.py", line 167, in <module>
    trainer.train(n_epochs=opts.n_epochs)  # default is 10
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/core/trainers.py", line 158, in train
    train_loss, train_rest = self.train_epoch()
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/core/trainers.py", line 138, in train_epoch
    optimized_loss, rest = self.game(*batch)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/torch/nn/modules/module.py", line 547, in __call__
    result = self.forward(*input, **kwargs)
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/core/reinforce_wrappers.py", line 113, in forward
    message, sender_log_prob, sender_entropy = self.sender(sender_input)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/torch/nn/modules/module.py", line 547, in __call__
    result = self.forward(*input, **kwargs)
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/core/reinforce_wrappers.py", line 42, in forward
    logits = self.agent(*args, **kwargs)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/torch/nn/modules/module.py", line 547, in __call__
    result = self.forward(*input, **kwargs)
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/zoo/signal_game/archs.py", line 35, in forward
    h = self.conv2(emb)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/torch/nn/modules/module.py", line 547, in __call__
    result = self.forward(*input, **kwargs)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/torch/nn/modules/conv.py", line 343, in forward
    return self.conv2d_forward(input, self.weight)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/torch/nn/modules/conv.py", line 340, in conv2d_forward
    self.padding, self.dilation, self.groups)
RuntimeError: Expected 4-dimensional input for 4-dimensional weight 20 1 2, but got 3-dimensional input of size [50, 1, 2] instead
➜  EGG git:(master) ✗ sh start_signal_game.sh




----------------train
train data: <class 'egg.zoo.signal_game.sgdata.OneHotLoader'>
Traceback (most recent call last):
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/zoo/signal_game/train.py", line 167, in <module>
    trainer.train(n_epochs=opts.n_epochs)  # default is 10
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/core/trainers.py", line 158, in train
    train_loss, train_rest = self.train_epoch()
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/core/trainers.py", line 132, in train_epoch
    for batch in self.train_data:
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/zoo/signal_game/sgdata.py", line 75, in __iter__
    seed = seed.flatten()
AttributeError: 'int' object has no attribute 'flatten'
➜  EGG git:(master) ✗ sh start_signal_game.sh




----------------train
train data: <class 'egg.zoo.signal_game.sgdata.OneHotLoader'>
[ 33   9  26 121 126 197 179   3 194   0  49  37  50 123 184 195 146 114
   4 162  47 169  15  75 167 178  74 102 193  24  14  83  11 113  48 191
  19  25  61 103  10  76  28  60 174 139 185  20  91  42  35  65 131 107
  22  64 106 101  58  63 176 108  54 157  70  84  81 144  73 188 116   6
  80   2 142 145   8 124  56 128 132 100  99  79 153  85 140  82 122  68
 180 175 148 135  52 186 168  78   7 136 156 181  31  51  21  59  57  86
 190  98 130  17 143 118  55  67  90 183  13  34 163 161 198  89 112 141
 110 160 129 150  44  62 125 154 192  94 158  45 137 155  46 196  96 164
 189  97 120  23  92  30 177 117  32 187 159 172  36  18  87  39  88  66
 165 171  38 147 152  95 182  72 104  40 170 127  77 115 134  29  12 149
 133 109   1 119 111 138  71   5  16  43  27  69  53 166 151 173  93  41
 105]
[112 127  92 123 147  68 113  21 141 102  76 155 153 166  97 152 138  67
  20   1  27  10   8 182 158  75  54 181  64  81  74  91 114  88  89  34
 108 143 125  17 183 142  66  18 163 115  14  55  87 177  70  42 150 165
 195 101 164 131 161 193  59 176 197   6 146 186 170  45 121  40  47  49
 169 160   3 157  82 179 185 119 109 156  16  56  72  28  65 148 175  94
 134  13 174 110  79  26  19  57  24 137  96 188  29 129 162 192  90 126
 149  83   9 139 194 140  73 145 154 133 168  23 172 118  32  84  15 187
  62  98  50  60  93  53  63 191  44 178  31  52  43  77   0 105  37  12
 159 184   5 124  22 196 180  48 132 136  99   4  39 103  71  95  78  58
 120  85  38 111 198 135  80  33  35 128  86  11 151   7  25 130  61 100
 144  36 104 171 189 173  51 106  46  30 107 167 190 122 116   2  41  69
 117]
[  0  70 145  30 111 196 178  81 167  75  34  89  80 193  24  76  64 156
 166   3 101 132  92 138  50 154 104   4  42  84 184 147 100  51 119 133
  83 160  74  54 175 181  88 173 162 159 187  18 194 121  90 172 107 116
 142  32 189  23 143  94 128 164 168  66  13 106   7 163 183  37 182  57
   9  44  61 148  21  12  41 103  82 136  20 126  28  52  58 191  62  68
 171 146  31 149 137 174  49 169  15  91   2  16  19 186  60 158 131  48
  98   8  69  53 139   5 190  26  59  72  67 127  56 153 150  71 125 155
  95  85 141 157  14  55 197 108  29 118 120  43 195  77 192  65 177   1
 188   6  25 135 185  38  11  93  47 198 134  79  17  27 105 102 180 140
 161 165 115 113 110  99  87 109 130  45 170  86 123 151 129  63 176  22
 144 117 124  10  73 179 112  97 122 114  33  36  39  46  78  40 152  35
  96]
[155 178 152 189 137 157 162 119  96  38  59  34  16   9  17   0  39  45
 180  21  60  79 153 114 104  63  94 184 115  97  82  29  65  83 133  25
   8 142  52 145 164 129 108 121  81 149 109 107  51 156  28  15 103 179
  43 111  20 174  61 131  27 146  13 148 140 197  74 122  72 110 185  18
  37 192 116   1 175 170  14  10 182  11  44 176 171 105  91 134 186 128
  87 172 100 159 194 117  24  88 154  12  90 198 139  56  50 168  22  58
 158  95  31  35 123 102  78  49 136 147   4 127  67 190  32 196  98 124
  77 120 118  57 195  47 177  89  66 130 132  46  73 187  75  30   7 163
  68  64   3 165 160 106 167 161 126 188  62 138  76  70  23  71 169 193
  33 113   6  26 112 183  41  19 191  92  54  85  42  55 143 151 150 181
  99  80 144  53   5 135  48   2 141  84 173  69  93  40 101  36  86 166
 125]
[ 74  76 148   5  60  98 193  17  58 122  53  77  94 160 188 110  75 162
   8  35   1 142  99 125 119 109 171  89  41  46  85 101  84 178 149 152
 195  12 159  25 139 196  82 191 183  65  11 150 128 161 192  86 170  70
 177  63 181 175  16  56 176 118 102  32 141 182 166 124  67  68  36 130
  72 187 129  27 106 165  83 116 189 172  96   3  48  92 194   9 112  31
 145  43  71  81 147  87  42 108  61 104  50  88  93  33  26   7  57 127
 103 146  39 169 137 132  51 190  15 100  59 151  66 198  78 117  13 163
 156  64  44  20 185 105 168  38  10 154   2 138 113 155  49 133  34 167
 107 180 174  95   6 131  37  14  30 186 115  19 121   0 158  29 143  91
  52 164 111  55 153 184 120   4  22  73  24 134  47  79 123 140 135  45
 126  69 197 179  97  18  28 173  90  62  80 157 144  21  23  40 114  54
 136]
[175   6  44 127 162  14  18  77  73 147 186  13  16 131  78 197 142 115
 132  80  70  56 129   1   3 159  76 165 105  58  64 130 194  29  36 180
  45 151  62  28  50 124 171 163  91  38 166  65 177 158 125  60 187 176
  59 196 168 145  23 134  61  87 141  11 164 143 109 183  17  68  51  95
 178  81 174 161 114  46  27 133 122 108   8  66  47 104 167  35 191  10
  71   5 149  53  39  74  31 119 153 157  86 154 128 148 111  54   0 172
  83 139  42  30  40 107 138 182  49 198 146 120 121 140 155  79  48 156
 184 193   7  37 160 118  52  34  15  99   9  57 192 185  21  69  67 136
  88 102 188  41 150   2  25 137 113  96  55 116 117  94 106  98  89  75
 110  12  93 189 101 100  26 112 173  97 126 195 123 135  20  24 181  90
  19  85 179  63  92 169  22 190  82  33  84 170  43   4 103  32 152 144
  72]
[ 13 102 103 154  14  42 109 171  48  68 153 181 118 185   1 124  11  56
  55  28  17 161  23 183  27 157 197  86 148  67 138  12  50 178  92  20
  82  98   0 188 122  85 107  61  52 156   2 108 167  99 173  24 166 146
 126 112  71  38 106 105  97 142 194  46  33  87  18  34   5 170  84 198
 120  64  63 196 104  95 158 141 191 129 160  53  10 135 162 174 175   9
 177  70 116   4  62 150  19  72  96 172 139  80  58   3 182  76 168 119
  69  79 193  16 115  89  60 155 110  54 121  45 169 123 132 151  22  41
  51  83 187   8  91  43  74 113  44 111  66 125  30 176  47  93   7  25
  15 163  81  40  73  29 100  32 131 137  35 179 101  78 133 184  94  77
 147 186 190  31 164  26 117  57 140 127 165  49 192 136  75 159 128 143
   6  88 144  39 195 130 152 189  59  90 134 180  21  36 145 149  37 114
  65]
[181 189 140  36 184  62  38   6 131 185 173   7  59 133 135 176  94  90
  84  21  22  32 193  63  99 190  19  56  17  85 158 102 162 132  12   5
  79   4  88   9 175  91  97 117 108 197  86 103 179 172 164 150 119 120
 191 155  50 118  96 166   8  42 165 137  13 112   1  33  82 116  24 171
 114 198 169 178 100  45 192 177  72 147  54  28  71  75  69  57  49  26
 129 107 142  61 145 183  11 111  73  18 157 144 148 110  41 194 138 126
  67  70  81 168 149 160  29 136  83 163  35  31 170 180  14 161  15 196
  51  48  98  76  93 101 141 188  27  37  34 127 104 151  66 152 195 153
 121  43  53  23  25 109  87  78  92  10  95 156  52 115 124  64 174  58
 146 130  47   0 186  16 139  30  89  74  77 113 105 123  46   2  60 159
 143 128 167  65 134  20  40   3  80 187 106 122  39  68 154  44 182  55
 125]
[ 70  28 191 109  73  58 166 173  93 154 134 180 127  37  77 184  17 165
 149 156 146 100  29 116 121  41   7  45  72 197  94  46  91 140 172  16
 135 164  52 152 119 142   2  83  36 185  78   5 159 174  26 124 139  20
  89 161 160 103 188  64  32  96 144 162  22  63  42 131  88 113 132  38
 183  66 129 108  15 151  44  23 107 137 148  74  71  82 112  43 102 143
 193  35   3 105 122  90   6  25  27  92  12  31 101  24 167 190 147 141
 126  84 168 110 189  59 114  69 145  75 150 123 181  18  62 195  87  51
 171 130  56 158 169 179  14 175 104  55 194 155  86 106  65 111  76  54
  99   8  50  95   9  49 196   1 176  30  19  47 117  39 177 128  98 153
 182 157  85  13  34 133  11   4 120   0 187  21  60 192 115  61  67 170
  33  57  79  68  80  48  81 178 163  40 118 198  10 125  97 138  53 186
 136]
[164  93 111 185  34 170 128  88  82 107 138 176   6  85 195  76  86 114
  95 190   2  17 153  44  65   8 146  87 103 119  39 150  50 109 101   7
 167  32 141 135  89  19  31 183  60   1 148  45  22  21  26 104 139 132
 142  56  77  29  78 181 194 143 162 120 115  63 102 144 116 106  30 161
  46  90  67  42  74  11 124  97 134 145  98 171  14 159 130  84 157  18
 175 168  51  57 166 110 131 154 155 197  35 186 137  37  75  38  68  92
  94   5  64 188  58 198 136 125 151  36 184  59  43  69 182 100 173 169
  99 172 108   4   9  23  24  55 121  62  61 133 113  13 149  28 177   0
 189 129  96 163 192  83  52 140  47  54 187  66  20  81  10  27 105 179
  49  33 193  80  79 147 118 126 152  70  40  16   3 117  72 160 156 180
  15  71  48  41  12 127 165 196 112  91 178  53 191 158 122 123  25 174
  73]
[ 89 143  84  48  81 192 150  99  88 167 170  86 140  34  41 109  77 168
 105 115 139 123 128  61  94  65 165 112  37   2  17 104 159   1  51 149
  71   9 172  46  60 157  10  90  98  53  21 195 161 180  85  82 162 118
 138 163  45 181  28  73 177 182  42  40  38  83 116 173 145 179 154 164
 196 152  96   4 155   0 169  78 114  32 135 117  13 134  14  55 142  15
  62 189 121  95  72  70 185  27  20 131 101 108   5  58 137  19  35 107
  69  79 176 136  93  26  11 174  25  91 198 132 151 102  44   8 129  30
  76  50 178 106 144 184 120 153  80 160 171 130 188 190 125 158 186  64
  49  52  67  12 119 197 133  63 191 183 147  68  36  87  92  29  18 100
  66  22 124 103  39 126 187 113 193 175  23   6  47 122   3  75   7  97
  56 141 166  54 111  33  24  16 194  59 110  43 148  57  31  74 146 127
 156]
[  3 145 144  85  77 168 112 142  69  46 187 173  99  65  44  16  60 152
  12  93 197 113 139 185  56 190 156 110  45   2   7  62 172 178 124  54
 104  26  25 194 180  66 177 106 135 102 101  32 114  73 128   4  33  29
 183 151 118 160  51 105  34  89 111 196 189  79  98 129  84  80  21 131
  57  97 140 108  72 149 182 107  10 154 100   6  49  40  94  82  92   8
  30  90 179  42 181  23 159 188 109 161 198  74 184 165  35 157 116  67
  71 136   0  43  15  64  31  27 146 115 125 148  50  96 155 186  68  95
 170 158  70 134 147  28  24  91 138  76  59 119 121 133  17 127  47 132
  41 122  19 169 162   1  22 191  13   5  87  37 150  63  52  58 193 126
 195  75 163 166 143  18 137  81 120  39 123 164  48  88 103 167  83 192
  14 130 153  61  86  20 175 171   9  11  36 174  53  78 117 176  38  55
 141]
[132  79  31  95  56  81 183 169  48  87  61  55  54  69 161 185  53 122
 140 154 181  24  47 167 109  94 197  96 175 143   6 188 193 107 195 145
 179 174 117  49  64   3  37  16 110  92 130 123  51 165  77  70   9 171
  40  78  71 159  10  38 105 149 158  83  98 156  60 133  36  80 191 125
 196  91  50 138 129 198  43   2 153  13 139 164 160  30 134 103  66  73
 131  14 147 112 178  52 127  28  12 190 137 168  42   7  39  26 150  11
  46 162 116 136  59 115 108 111  29   0 141  19 128  63  90 180 101  34
  67  18 113  17  88 184 102 163  15 192 142 187  57   8  74 119 182  27
 189  44  41 118 157   4 126 106  82  99 146  25  58  84  89 155 194 151
 121   1 114   5 144  45  68 176 135 177  65 120 152 172  76  85  35 170
 124  97 166 104  72 186  32  62 100  75  86  21  33  23 148  20 173  22
  93]
[ 84 133   7 173 195  35 106  97  57  90  18   4  94 135   5  85 125  98
 112 156 181   9 129  76  54 124  89 121   1 175  11  33  39 155  66 161
  13 150 193  12  74  19 134  26 188 152 185  64  45  70   0  32  79  63
 187  83 110  91 182 142 118 130  16 167  93  80  55 172  68  14 162  78
  41 139 138 117 165 128  72 197 163 164  56 102 141 109  44  21  87 113
  37  10  96  67 169  42  27  29   3  22  58 153  40 100 170  52  20  65
  43  24  34 116 147 140 198 171 120 144  95 114 111 149  23  61 105 131
  86 108 137 189 104 143 119  51  48  53 178  81 186 180 154  88 174 183
 190 159  49  38 151  62  73  59 136  71  69 179 194  99   8 191 168 196
 158  60 146  31 132  25  75   6 184 192  30 123  92  82  17 127  36  28
 103 101 176  47  15  50  46 107 160 126 115   2 166 145 177  77 157 148
 122]
[120  19 100  78  16 131 189   5 146  11 188 164 138 117 178 151  53  49
  56 190  87 122   8  15 169 153  71  50 145 168 158 123  97  95 118  99
 198  88  60 196 124 159 195 162  90  92 142  85 116 186 156   9  79  31
 165 149 134 119  34  18 143  39  26 139  62 103  98 121  44  32 180  42
  69  12 109 193  57  48  41 154  21  22  58 192  64  63 176 115 185 172
  94  96  29  86 112 182 181  61  24 171  77 167  89 126  73  36  93  74
  47   7  28 140 104  35  83   6  33  51 150 141 174 102  68  91  38 163
 155   0  55   4  81  66  45 197 177 166  75   1  82 135  14  46 127 111
 152 113  23  25 101 157  17  54 179   2  76 144 106 108  10   3  65 147
 173  84  67 105 187 133 184 132 194 191 137  59  70  30 129 175  37 130
  80 160  52 110 125  72 183  43  40  27  20 148 170 136 114 107 161  13
 128]
[133  33 109 176 129 170 142 138   5 114  40  10 195 162 116  13  97 111
 125 164  52  49 131 197  48 119  95  80 137 174 122 130 156 173 189 143
  67  19 108 153 177  79   8 155 171 104 118 184  98   4  18 102  53 136
 179 106 194 188 152  96  23  41   7  32 196 151  44 181  21 117 128 107
   1 144 113  69 115 175  59  16  94 127  76  15 149  29  20 110  31 121
 135  72  90  38 100  17  57  77 163 159   0 140  88 101   3  22  65  84
  34  75   9 169 158 141 160 154  37 178 165   2  50 134  93  81  86  63
  82  26 103 182  42  78  27  89 148 161  66  45  47 105 190  64 126 186
 183  25 124  74  54  56 185 146 172 157  58  85 150  60  70  39 132  14
 180 193  35  92 192  30  62 198  43   6 123  71 112  61  51  28  12  46
  55  36 167  91  73  11  99 168 187  68 191 120  24 147 166 145 139  83
  87]
[ 47   1  97  85 120 151  68   2  69  44 194  31  27   6 103 106 186  53
 118 138 124 139  56 144   7 143  60  18 150  87 189   0  77  98 174 198
 169  32 172  41 102  35  99  54   9  93 147  45  24 181 190 193 107 148
  38  26  11 170  92 195  81 110   3  13  59 188 197  34  64 155 149  25
  22  51  33 133 161 117 152 116 168 111  10 115  37 129  14  88  21 146
 153 105  23  82  52 158 131 119  17 191 145  29  43  16 121  95  90  42
 166 183 160  86 182 171  20 167 127 179  65  67  75 157 135  30  19  76
 184 159  55  39 134  66 162  80 165 130  96 173  91  89  61 114  62 163
 178   5 122  36  49  63 123  50 187 101  46 100 156 108  70  40  28 125
   8  15 132 113  74 196 141 142  83 177 128 175  48  57 104  72 140  94
 136  84 126  71 137 164 176  73 185 154 109 192  78   4 112  58 180  12
  79]
[183  62 120 170 184 191 188 193 174  97  45 153  64 164 123  47 107  37
 185 157  81  98 161   0  35 105 141 108  52 162  63 114 181  10 197  55
 102  17   7  38  14  65  86 115 177 138  68 109 126 143 142  75 187 117
  56 180  69 149  43  48  57  20  39  29 106  80 192 140  76 172  60 173
 100 160 155 111 152  46  78  88 190  49  83 179   3 169 122 171  59 168
  12 133  22 125  91 186 118  77  96   2  93 130 104  25  26   4  23  51
  79 132 182  41   5  21   1 127 136  15 129  99  24  36   6 110  28 128
  66  42 139  34  44  50  87  53  72  27   8 131  67 150  31 148  13 121
 195  58  40 113  16 151 178 147  73 166 112 189 175 116 119  95 135  18
  70  33  30 156 137  89  85 158 163 176 154  61  32 194  82 159  11 103
 146  74 167  71  19 165  94 101  92 196  54 145  84  90   9 198 134 144
 124]
[179  87 139  75  96  71  62   1   0  64  24   2 149  21 126  11 156 145
 164 172 115  56  47 176 198  91   8 150 128 143 188  70 104  43 192  65
  41 191 166 123  23 162  59  54  85  49 187  86 141 111  38  72 130  97
  36  39  40 153 138  29  13 134   6 136 113  99 122  26 114 171  32   9
 109 177  15 105 180 146  42  82  84 186 133 147  83 110 154 181 101 174
 157 161 131  18 175  77  63 184  57  88 190 193  44  55 140 169  20  94
 152 148 173 151  76  92  34 137 118  52  73 160  10   4 158 194 103 120
 196 106  28 135  14 108  53  19 117 142  67  51  89  68  90 195  45 129
   3 116  66 167  81 185  31  30  95 165 183  78  22 155 144  16  17 178
  46 102 170 159  12   5 112  50  37 168  60 121  27  69 182 125  79  98
   7  35 197  93  74 127 107  33  80  25 132  58 100  48  61 124 119 189
 163]
[166  96  85  48 160  10  68  30 149 131  32   4  54  67  51 112  33  87
 144  80 119 163  86  70 170   1 111  71  94 174 184  63 125  11  38 142
 100   2 105 180  58  21  42 136 175  29 193  99  90   5 183 179 168  55
 159  19  53  82 186  89  18   0 188 194 164  50  14  26   9 148  65 124
   8 191 197 177  44 126  56  46 167 128 150   3  77  23  34  31 145 146
  81 104  64  13 138  22  59 171  97 151 169  41 102  60 114  83  24  20
 137 161 123 115 155   7 109 127  35  40 107 182 178 152  78 181 147  69
 103 140 129 101 132 187 176  52 121  92  75 117  27 196  12  93 116  98
 198 157  66   6 162 154  84 139 133  76 113  72 108 122 156 153 165 130
 158  45  36  47 118  37  43  15  79 172  49 106  61  91 190  17 141  74
  73  16 195 143  39  62  57 134 189 185 173  28 135  88 192 110  95 120
  25]
[ 67  20 146  83   0 143  75 154 168 171 184 128 108 113   4 193 122  79
 159 173 157 131  42 119 130 124  61 136 101 170 125 162 121 141  76 140
 120   2  71  49 175  18 106 153  59  89 164  70 138  95 142  69 194 174
 192  48 195  87 102 135 107 132  77 198  51  52  22 111  19 186  36 185
 114  12  84  45 197 103 149  98 112 156  34 191 179   6 187  74  40 181
 158  23  92  46 126 152 104 183 166  16  85  32  33 163  37   9 177 167
 139 105  66 144  11 137  91 116  15 147  99 160  94 148   5  44  53  90
 189  41 109  13 155 133 127 117 172  24  31   1   8  68  30  60   3 145
  56  54 123 100  28 190  93 110  72 115 129  17  64  57  50  65  58 165
 151  82  73 176 196  86  25  81  43  21   7  29  10 180  96  78 118  55
 169  39  63 150 161 182 134 188  26  35  47  97  88  14  80  38  62  27
 178]
[ 12  88  76 163 134 176  98  59 188  71 145  60 157   6  52  94  83  51
  23  65 116 121 104  54  84 169  31  44   8 181  68 107 113  19 112 137
 154  96 139 192 102  41 180 111  74  66  34 165  82   4  13  61  75 133
  63 159  32  55 167 161   9 135 189  91  30  93 101  81  85 129  67 147
  14  36   2  79 193 190   3 108  90 141 178 191  80 158   5  28 143 179
  69  78 187 184  35 164  95 196 124  10 151 148 126 136  39 144 140  87
  37   7  57 123 138 186 171  70 100  49  18 162  58 114  62 160 195 127
  11 197 106 174  56  99 119 194  97 175  26  47 105 182 183 168 125  92
 122 109 149 156 177  27  15  45 131  22  72  38  53  25  16 132 198 155
 152 166 146  46 172 173  17 120  64   1 142 118  86  42 150 153  50 128
 185 103  33  40   0 170 130  77  29  24 117  43  73  89  20 115  21  48
 110]
[170  26  94  99 108 129 137  33  21 142  66  58  76  43  51  60  93  22
 122  87 193   5  35  46   0  90 104  74 198 100 106 101 158  52  45  13
  16 118   3 157  78  24  73 111  70 139  81 154 116  47 103 133  68 175
  82  92  18 194  15 113 148  89  42 109  53  56 125 107 141 165  59  38
 159 179 196  86 161 168  40 185 146 162 126 138  39   4 188  61   2  63
  20  49 195 121  14  19  84 186 184 132 143  95  75 183 124  67 172   7
  80 187 182 135 197 192 147 169  88  65 128  27  57 123 178  97  37 164
 102 127  11  23 112 130 160  31 114  69  48  17  98   8   9  85 163 176
 136 181 131 151 134  28  50 119 189  29 117  12 190  91 152  41  64 191
 150 174  25  79 173  62  83  71  34   6 149 180  36 145 110  72 156 144
  44 171 153  96   1  55  30 120 115 155  10  54 167 140  77 105 166  32
 177]
[142 163  87 194 188  79  72  67   3 160 133 156   6 107 173 124 138 178
 140  34  64 166 130  94 157  91 169 112  77 145 175 118 149 187  16  60
  93 154  30  89  73 137  56  68  44  51  52 180  35  63  26  95  17 141
  66  11 165 126 172  31  90   1  70 122  37  49 114 123  48 189 153  54
  14 113 131 109 139 129 116  19 119  62 174  12 144  41  98   5  33  43
  21 117 171 120   8 190 143 106  61  15  36  81  82 170 193 127 183  22
   4 102 128 168  97  57 159  88 147 158  39  86  53 151  20  84 185  83
 103 176 197 181 161  78 111  23 155 104 177   7  69  46  96 150  18  92
  58   0 108 191 115 134 162  45 167  74 196  42  32  40 135  80 125 101
  59  29  65 192  71 186 132 164   2  27 179  50  25  76 146 182 184 121
 110  24  99  38 198  28 105  47  10 195 148 100 136  75   9 152  55  13
  85]
[  1  33  65  48 129 137  14 120  13  36   2 156  82 140 195 101  78  59
 139 158  19  27 145  15 108 152 123 122  92 130  49 197 131  99 138  21
 190 175  24 173 192  54 181 154  69  45  89 153   3  66  25  30 187  23
  55 126 151  90  34   8 116 107 125  58 117 184 174  62 128   0  38 124
 186  52 165 134  20  95  29 144 135  42 104 196  88 105 163  87  35  91
 183 110  77 121  10   4 115 166 132 171  22 148  63 146 112  83  56 176
 162 193 149  70  96  86  71 172 111  93  67  75  76 168 147  11  18 169
  81 127 179  50  68 118  73  26 170   7  53  85 150 182 180  74  98  43
  46  12   9 113 114 157 185  47 109 178 141  31  17 142  94  79 160  32
  37 100  44 189   6 133 103  57  97 164 143 198 188  41 177 106  16  51
  84 194 159  72 167  39  80  61  60  28   5  64  40 119 102 155 136 191
 161]
[ 55   6  40 103 133  21 195 197 153 186  98  97  64  79 125 188 130  94
  22  19  58  75  47  33  14 190 170 177  34  63   9  23  25 182  80 191
  61 148 193 124 100  62 116  73  59 178  88  20 144 160  48  51 187 181
 152  76 131 143  57  26 179 164  70 174  86 162 198 184   8  32  44 145
 154  85 126  77  56 120  71 150 141 169 196 183 147  84  74  38  28 167
  81  52  39 134 176  68 132  92  11 159 165  31 168  17 142 139 185  37
 166 192  30 146 111  82 194  54 106 112 122  60  35  65 108 163   7   0
 135  93 173 128 138  36  49  53  12 109  43  45  87  67 110 104   2  89
 172  41 140  95  90  69 114   4  78  83  72  15 171 136  66  18  42 129
  96 113   3 115  16 117 155   5  99   1 127 161 149  10  13 158 151 118
 102  46 123  29 157 180  24  27 107  91 121  50 101 156 175 105 189 137
 119]
[ 27  60 107  66 110 187 143 171  42  70 122  53 103  48  75  59 124 131
 169 159  84  96  31 193  83  23  30   9 109  52 155 195 114 130  62  95
   0  63  14  92 179   6  28 151 148  45  15 158 165  81  90 164 147 194
   2 196 100 198 172 156  13 181 135  49   4 116  91 144  80   8  87 152
 129  18   1  67 189  68 166  97  10 128 175  32 161 163  43 120 162  26
 112  16  65 146 173 119 177 188  57  76 182 117  36  40   3  46  64  74
  86 178 145 174  69 127 154 138 111  77 184  61  50 191 167  24 132  22
  29  34  72 102 125 141 157 106  37  93   7  19 192  88  12  44  99 197
 121 108  55  35  56  58  51 153  33  11 183  85 133   5  39 176 113 140
  25 126 137  54 180 149 105 123  98 168  78 170 160  82 139 190 185  21
  38 115  73  17 104 134  41  20  47 118 150 136 101  94 142  89  79 186
  71]
[  3 114 179 172  43  22  51  35  62 140 116 122  77 182 169 107 155 156
 108  18 115 141 185 160  59 167  83 177  36 196  50 152  82  46  95 180
  24  73 187   9  72 131   0  40  37  54 137  74 161  67  86  25 166  27
 119  84  12 183 138 154 188 111 171 106 151 163  58  33 174  88   2 148
  96 173  85 157  75  19  93 142  90  49 136  34  78 194 127  65 145 164
  48 134 168  47 175 129 146  41  76 191  42 165 190  60 128  64 120  26
  23  68 103 130  21 109  15  87  38  70 198 104 135 162  92   4  97 178
  52 153 139  20  98 149  53  45 133  44 193 121  14  91  57 197  63 110
 113  79 132  69  66 144  71 150 192 170  39 102 123  16  10  89   8 184
 117  81 159  55 105  29 125  17   5  99  28 186 124  11 112 176 181  30
   1 158  80  61  31  32 195  94   6  56  13 101 126 147   7 100 118 189
 143]
[153 140  40  17  69  73 145  63 143 126  86 144 182  41 164 107  46 179
 115 114 191 101  97 105  15 133  21 178 154  23 147 139 128  34 166  35
  49  77 110  31 112  20 121  27 171  30  37  48  36 129  79  38 176  51
 168 183 100 118 170 131 169 156  22  65 184 192  71  56 175 137  53 122
 157  24   2   0 188  84   4  50  80 172   1  54 190  28   6  83 173 193
 180  87   8  14 132 197  91   3  66 148  82  39 103 134  52  99 162  13
  16  96 113 135 196 111  89 123  68  12  47 106  76  11 104   9  61  59
  58  94 185 120  43 102  78 167  62  64  45 150 141 181 109 136 127  72
  18 194  67 130 186  57  42 108   5  74 159  70  60 189  55 138  95  33
  85 125  19 165 174  93 187  26  10  75 177  25 146  29 158 198 117  32
  92 116 152 160 163 195 149 142  90 161   7 124  98 119  88  81 151  44
 155]
[156 131  45  16 115   0 132 119  75  39  10 155  34  28 162 196 188 108
   4 191  61 120  50  90  30   2  12  80   6 134  20 159 143 112 127 176
 116  93  52  86  92  48  99   3   8  23  15   9  96 169  21  38  59 144
  71  18 118  62  29  81 106  88  53 109 136  74  56  73 148  87  35   7
 137 180  64 160 105  83  24 129  68  95  22  31 111 102  54 193   5  13
  97  77 195 126  78 123 141 114  65  40 103 177 139  32  14  67  60 147
  98 101 151 153  72 100 110 167 192 117 198 122 171 179  63 149  36 130
 184 152  51  91  82  11  46 175  69 157 190 142 181 158  49 178  41 107
  25 128  70 146 183  19  17  43 154 133 164 186 140 163 185  33 165  84
 161  37 150 187  27 166  66 145  47  94  76 124 113  58 125  85 182 121
 189  89 138 174  44  26 173   1 194  42 168  79 135 104  55 172  57 170
 197]
[ 92  75 114 113 117  14 142   7 158  72 103 135 161  66 193  74   6  55
  86 179 174   2  53 125 143  77 190  49  51  45  70  78 100  88 107 180
  46  69 151 162  29  41  37 128 132 163  90  58 176  31  71  76  60  22
  52  30 154 121  13  94 126 165 140   4  23  54 150  19  68  84 104 189
   1  39  48 166 130 164  98 124  82 145  42  91  67  16  65 136  57 116
 168  21 181 195 175  61 149 188  34 192 141  10 139 148 197 106 102   8
  47  44 185  17  64  56  38 198  93 127  25 170 137 177  24  97  43   5
  80  81 184 144  28   0 159  15 119 112 122  27 156  33  73 169 109 101
 196 111  85 147 167 173 108  35  18 110  20 153 146 129   9  96  83 123
 120 152  40 160 118  50  87 187 134 186  11 155 105  26 182 131 115 191
  36 133  79 138  62  95 172 183  32  99 178 157  59  63  12 194  89   3
 171]
[161 101  60 159  94  56  52 175  46  39 173  78 139 107   3  41  84 151
  13  70  11 140 105 124 133  68 185 153 152  72  37  58 198 102  23  45
  76  32 129 177 145 178 144 122 194  33  90 156  88 149  83 120  42  40
  96 162  64 135 104  10 169 126  71  34 157 125  85 137  15 113 112   6
   4  62  16   5  66 174  51  31  43  57  21 134  35  95 195 100  77 197
  49  93 193 183 110  53 142 109  74  29 166 116  14 186  59  36   0  97
 165 130 191 182  27  86   7  98  63 190  17 187 136 127  81  19 123 103
 121 180 196  55 115 119 176 155   1  22 128  18  44  87  65  12  30 164
  25 158 192 114  24  61 184 106 172  75 117  20 118 108  92 163  82 147
 131 188 189  91  79  80 111   2 170 181 141 150  47  28 138 132 167 154
 146  67  69  73  48 171 148  89 179   9  26   8 168 143  54 160  38  50
  99]
[162 142 106 157 121 166 193 154  50  41  13 141 182 172  82 110 123  27
 175 128  73 183 165  24  98  51  36 177  92  43 150 109 184 114   3  45
  20  88  46 104  84  57  95 117  91 181  37 167  22   0 151 160  15 101
 163  54 115 147 120 148 156 127  61 191  70  44 107  79   4  49 119  93
 196 173 169 125  35  83  12 189  30  81  90 197 187 139  96  11 174  18
  63  28  75 144   1 140  23  26  94 122  64 146  58 116  99 133 143   8
  47 185  31 198 112  48 113  80  72  52 178  16  19 105   5  78   2 195
 190   7 152  14 103 130 186  21  56 194  66  65 126 129   6 176  85 131
  33  71 192 164  59 158  76  74 180 161 155 124 171 138 145  62  69 137
 118 153  55 149  86 134   9  39  40  60 136  68 179 188 170 168 135  17
  10  42  32 132  87  89  97 100  38  53  29 111 159  34 102  67  25 108
  77]
[ 12 132 189 148 115  54   9  85 142 103  88 185  79 161  42  53 106  17
 160  32  81 124 171 156 154  58  23  47 174   4   5  69 144  40  71  31
  89   0   3  15 178 122   8  33 175 121 108 150  30 146  55 183  25 145
 104   1  86  91  75 149  36  97  35  84 151 138  14 180 152 129  28 123
 105 179  72 198 162 100 196  60 166 147 133 190  49  99  21 141  90 186
  93 197 188  24  41  76 165  19  94 167  92 111 110  87 176  74 109 184
  96 101  10 158 187  80  83  20 163  38  64  82 168  26  39  65 182 194
  61 139  48 116  11  27 125  18  52 177 173 136 117  98 181 113  51 140
 127  78 157  56 128 164  59 191   7 192 135   6  73 130 137 193 112  13
  46  66  68  29  37 134 153  77  16 107  70  63 126 159 143  50  34  62
  95 131  57 172 102 169 170 119 155 118 195  67 120  44 114   2  22  43
  45]
[ 15   4  14  49  69 115 143 181 158 160  58 151  94 139  80 122  52 111
  27 137  88  37  55 190 146 134 110  25  39 194 188  56 102   6  38  11
  96  90 166  85 106  93 117 197  16 173  32 125 101 193 168  31 159  42
   8  73  29  84  35 172  59 130 152 144  78 174  79  13  18 163  10 185
  36 148  62  48  47   7 198 186  76   5 133 161  40 103  43 149  46 126
  60 157  91  20  74  22 187 121 165 138  21  77 132 153 189  98 107 155
 182  41 170 180 164 119  75 167  23   0 175  68 140 171  83  67  70 129
 184 128  50 169  99 135  65 179 192  81 124 147 109  17 162 136  66  53
 196 127  64 142 154  26 150 114 176   2  95 112  24   3  30  12  44 100
 195 104  28 177   9  34 131  71 183  45 113  33  87 141  51 105  72 116
 156 108  57  82 123  89   1  97 178  54  63 118 191  92  61  86 120 145
  19]
[ 96  54  33 184 150  32 148  40 155 149  95 167  21  11  71  92  55 165
 169  31 142 173  75  56  58 109  28   7  68 115  29 120 164 130 133  44
  13 110  74 158 145 112 186  19 170 126   8  90 177  81  30  69  34  60
  27  52 195 153 192 183  49 134 194  50  42 111  80 131  88  12  79  41
  36  37 185 116  51 178 123  85   3   0 139 127 154  66 180  18 105   9
  70 190  48  25 188   6  76   1 132 136  14  93 104 114 128  46  97  57
 160 152 175  38 189  43 141  16  83 161  47  89  98 113 198 122 119  53
 156 107 144 191 143 197 159 168 171 146  45 157 103  87 140  82 187 196
  35  91 151  39 174 172  86  77 137  94 138 135 108 106  26  78 166 163
  22 125 129  61 101 193  65  15  67 147  62  17 102  72  10  59 118 162
   5   2 176 124 117 121   4 182  24  84  99  73  20 181  63 100 179  64
  23]
[ 11  54  13  72  83  60  50 182 129  74 156  65  55  23 165  36  20  87
 192 172 157  25 120   2 193 133 137  32 134 108  51  19  42  47  46  82
  53 190 146 115 117 127 176 174 110  68  57  29 103 181 145  64  96  58
 196 130  80  52  18 191  28  70 169 112 166 186   9  99  93   3  92 152
  14 195 167  33 188   7 179  31 153  78 160   1  73  10  44  77 149  56
  66 148 158 178   4 168  48 139 140  95 101 106 159  26  16  41  85 128
  43  69 154 189 184 141  71  45 155  84   8 109  40 161 171  94  76  91
  17  37 121 126 105 124  90  89 144 119  38 114  34 150   6  12  97 164
 175 163  30  67 107 116 135  62 180  49  81  39  63 170 187   5 131 102
  15 132 118 147  59 194 177 113  27 143 197  35  22 162  75 111  61 122
  21 183 136  98 123 185  88 104   0 151  24 173 198 100 125  79 138 142
  86]
[166  65  87   8  57  74 126  26 113   5  30  20 164 181 171   9 147 140
  45  76 185  18 141 123  32  95  90  81  69 119  85 183 136  48  17 115
  94  98 170 125   2 139  52  92 159 103  22 160  88  46  39 132  11  89
  37 162  82 168 175 150  40  25  36  42 186 104  75  54  60  96 145 143
 177 128 127 135  16  78  19 110 192 187  62 174  97  21 122 102  84 114
 198 172 149 154  27  53 176  77 120  47 195 121  83   3 105  29 189  59
 178 182  55 118 101 188 156  73  28  63 163   1 151 180 111 117 158   4
 107  49 133   6  23  41 142 197 131  24 130 190  34 148  14  79 179 173
  80  12  35 169  56 191  66 129 137 184 153  64  13 155  43 144   7 106
 146  15 134  50  67 138  61 109  38 100 108  58 194  70 152  91 165  44
  99 112   0 167 157  68 124  86  71  93  10 161  51  72  31 196 193 116
  33]
[ 83 101 130 170 162  43  44  60   2  21 160 109 168 150 105 114 131  27
 175  30 167  81  61 132  23 127 180 111 172  94 191   6  78 141 147 159
 153 124 113 112  77 157 196  42  14 118  35 185 137 154   0 146 195  40
  53 143  98  52  16  90 145   5  46 148  76 108  59   8 100   3 188 133
 135 122  38 117  47 125 134 176 142 155 165 110  88  84 197 151 152  87
 149 164  62  57 102  69 138 189 190  49  11 139  48  26 198 173 116  72
 179 156  66  20  12 183  65  63  17  96 187  99 103   1  18   4  54 121
  71 104 126 178  34  13 163  79  67 192 161 115 119  31 174  32 169  41
  91  19 144   9 136 107  29 128 177  73 184 166  75  64   7 186  58 140
 193  10  55  36  82  80 181  28  85  24 106  45  50  68  86  97 182  51
  39  33 171  22 194 129  92 120  93  70  15 123 158  37  56  74  95  89
  25]
[ 86 174 113  34  74 198   8  35   2 193  68  42 155  83 135  60  20  41
 140  55 133 138  85  30   1 127  15 125 128 157  49  84  10 122 191  39
 167  24   5 109 118 176 104 116 173  80 158 154  25 142  44 183 123 160
 137 115  26  23 188  88  94  91 124 139  69  37 179  99  43 195 156 101
  89 194  13 119  19  97 136 107  63  95  48 108 117  90  62 182 134 100
 130  33 146 129  79  40  21 120  98  17 141  75  46  92 159   6   0 180
 184  76  16  77 164  56 169  50 106  47  32  12  45 170 153 185  93 161
 110  64 112  65  96 163 177  70  73 187  57  22   9 171 105  82 149  54
 196  14   4 131  78 162 111  58 102  18  29  66 114 181 197 103 148  67
  61  87  53 145  36  28  31 152 151   3  72  38  27 168 121 186  81 150
  11 172 166  59 143 178 132  51   7 192 175 147 126 189 165 144  52 190
  71]
[ 32   7  65 127 178  56  19  20 104 137 158 189  43  18 180  22 192  35
 102   5 160  91 190  17 196 142 131 185 115  58  70 111  38 122  94 166
  92 139  42 135  61 174 188  80  86 136  76  14  72  62  78  16  96  97
 179 176  26  67 126   0  34 168  31 149 184 116  85  54  69 129  88 128
  60 133  79 108 112 100 123  52 124   9 134  87 169  49  99  75  82 163
  45 109 151 101  64  21 103 143 164 194  39  98  48  11  89 171 145 130
 121 155 154 113 118  55 162 156 161  51  23  53 183   3 120  93 153  95
 173 186 106 148 107  15  74 165  47  84 117 197  59   8  13  24  10  27
  50 114 132  12 175 177 125 144  71  73 119   1 191  44 150 182 187  81
  63  46  37  33   4  90  25  29   2 140 105  66 157 181  28 152 159  57
  77 172  41 195 110 141 170 167 198  83 146  68  40   6  36  30 193 138
 147]
[112  58 108  54 134  79  84 143 110  40 193  76 128 172  31  39  83  60
  94 189  34  11  57 141 147 176  59 164  38 104  16  99 140   7 167  26
 109  32 183 170  78  50 142  25 107 191 158 186 179 156 115  46  63 166
   3  21   1  91 198  55  81 120 188  49 161  42  14  77  71  19 157  43
  87  95 181 106  82 146   6  88  27 150  68  36  13 151 149  65 145 153
 139 144  97 192  52  98 177 178 133 111  37 173  74  22  56  53 162 185
 130  23  47  90  92  96  15 196  75 171 126 159 117 187  73  45 119 175
  66 180  62  61   0  33  93  30  35 197  24 125 114   8   5 129  18 155
 131  86 137   4  20  12 123 127  17  72 168  28  44 148 190 160 195  89
 124 102 103 122  41 152 105  48  67  80 101 184  51  29   2 165 100  69
 169 163  85 121 132 182 116 135 136 118   9 174  10  70 138 154 194 113
  64]
[ 11  76  48  21   4  41 198  87  94   3  33  64 170  54  53 144 109 192
  71  34  55  30 177 137  72 191 121   8  14 127 133  80 176 196 164  15
 153 134  68 189 165 185  37 182  50  85  13  42 115 167 100 195 173  90
 132 162  19  60  97 152  81  22 197 184  12 104  47  92 178  27  46  17
 159 102  78  28 101  96 117 187  69  18 123 120  75 126 125  65 107  63
  39  59   2 149  67  82 183  31 181  44  51  70 193 141 145 157 180  98
 130  32  49 194 118 142  10  29  84 105  73  38 143 150   0 129 146 155
 148 179 154 158 175 174 110 190 163  23  86   6 188  79 106 103 114 135
  91  95 122 113 119  35 168  83 166  56 171  77  89  16 131 140 169 128
  45 139 172  62  58 116  93 161  57   5 108 147  52   9 111  25  40 124
  24   7  61 156 160  20  74  99 138 112  43  88  36   1 136  26  66 186
 151]
[184 166  36  89  27 146  20  19  18 128 122 108 123   5  14  52 162 149
 189  40 164  48 178  95 102 140 147 182  15  88  67  80   2 188 150  86
 196  17  65 161 100  16 181 156 141  84 163  32  77  78 159 105  25  96
 197  63  22 167 107 148  58 158  37  87  44 103 111 130 170 135  85  50
 120 132  10  90  29 187  97   1 139 176  64  71  49 137  74  39  12 177
 114  41 143 186  33 152  24 193 109 198  68 160 118  54 180 121 129   8
  45  55  47  51 113 145 110  43 165  34 185  99  61 138 157 133 115 190
  92  28  75  62 106  70   3   7  73 168 117   4 153  38  35 183  60  30
 173  57 172  69  94  21  79 191  11  76  59   0  93  91  13  53 194 134
  42 144 112 131  82  31   9  46 151 127 155  26 174 116 195 192 171 126
 154   6 175 169 142  81 136 179 124 119  56 104 125 101  72  83  66  98
  23]
[  9  50 125  52  69 163  26 148   6 108 153 184 109  93 150 102   8 131
 185  22  99  24  81 155  73 164  44  55 171  77  61 111  49 158 101  46
 143 152 117 118 119 169 154  13  89  20  78  72  60  71  90  51  95 178
  32 190  64 146 147 103   4 198  57 193 176  43 134 188  30 139  54  53
  29 115  48 180 121 104  28  98 142   3 162 122 195  42  21 110  97 138
  23 149 182 160 128 124  38   2  62 141  12 135 168 133  36  11  34  86
 194 166 120 156  10   5 126   0 174  17 130 112  16 129 161  56 170  67
 187 173  94  39 186  79  41  18  37 136  63 106  33  84 165 189  66 114
   1  15  82  14  96  31 105 137  58 172  70  19  91  88 145  25 181 116
 140 183 196 192  45 191  80 159 167   7 132  40  74 107 100 151  87  59
  27  75 144  35 123  76 157 179 127  68 177  92 175  83 113  65  47  85
 197]
[193 131 105 137  41 150 146  27 161  25 145 113 124  96   4 198 154  65
  68 107  43 112  34 128 152 116  60 102 184  19 171 180 103  74  64  33
 134  94  24 108  15   8  90  35  92  53  70 147  81  28  22  29 121   3
 114 101  95  40 140 163 115  80  26 178 126 129  11  63 165 173  72  16
  14   5  30 182  10 197  17  51 185  31 189 142  46 181  89 191  66   6
 170 177 196  85 149  56  37 188 120  38  55  49  44 138 117  13  57  62
 157  76  79 133 135   9 162 190 136 195  32 155 132  45 110 169 148 179
 158  52 141  42  21  12 109 125  75  36  77 144 186  98  99 159 111  39
 176   0  86  71  97 168 156 166  59  23  69  83  54 151 118  48 119 187
 123 174 164  50  84   2  58 130  88 122 175  78  93 106  61  73 192   1
 160   7 104 100 183  18 127  82  91 139 167 194  87  47  20 153 143  67
 172]
[ 75 130   8  40 183  22 153 182 107  50 144 117 136 162   0  26 134 124
  65 167 164 116 119 194  10 187 158  29  74  72 165  21  73  14 166   1
  91  36  16  80  82  20  98 181  18 138 102   6 140 179 115  53  42 118
  55  31 154 193  67 120  24 161  15  25  64  56  77 173  68 184 191  11
  99 101  17 142 121 159 106  19  90  83 180 198 196  28  93  84 113  33
  38 175 185  49   5 123  97 137  23  94  13 171  57  66 104 146  46  86
   9 111  89  47 163 186  32  85 131 177 127  88 109  34 150  12  51 149
 148 197  69  39  35  45 174 108 125  70 169 110 156  61  44   4 176 157
 132  92  60 190 178 170  71  96  63  54 168 100 128 151 105 152  37  43
  95  30 195 122 135 160 126 133  52 155 112 145 189  79   7  62  58 129
  27  81  87  48  59 103 188  41 141  76 139 192 143   3   2 114 172  78
 147]
[173  98 125 161 119 163  69   5  92  29  74  83 181 108 136  34 195 120
 148 127 147 186  17 139 180  94  49 105   9  93  43 164  45   7 158 150
  33  30 155  64  15  28  31   3  60  44  82 188 112 114  13  16 175 118
 145  21  80  72  12  50  24  51 187 174  26 106  18  85 166  77 109 124
 160 154 101  19  65 116  35 113 151 190 142 191  81 176  86  66   8 185
  39  11  84 156 111 183   4  27 198 197 172   6  91  68 146  48  20  88
 167 135 122  87 138  40 129 196 102 182  57  52  96  58  53  37  67  59
 137 169  99 170  14  22  75 141  10   0 171 123 162 159  70 110 103 177
 149 157  41  54  73  71  63 128  56   2 134  38  79 100  47 189  42  46
  55 178   1 194 117 165 179 107  62 133  76 152  78 153 192 193  90  25
 131  23 132 143  89 121 104 184  97 144 140  36  61  32  95 126 168 115
 130]
[143  82 111 144  54  18  39  55  61 164  34 107 124 184  14  16 180  57
 128 191  52 127 103  27  80 135 175 138  93  15   0 177  90  25 130  73
  41 193  77 158 190  31  59 174  51 161  26 105  76 129  21 117  78  74
 197  13  71 119   5  19 114  75 122 148 159  42 189  87  83  22 198 133
 170  94 166  11   7  48 152 176 137  89  12  69 134 181  53 140  95 154
  63 149 121  97  30  91  28  32  79 116  98  65 131 165 167 132 147 110
   3 195  47  72 162 192 182 102   4 120  43 109 146 136  84 113 157 188
  45 194 115  62  20 150  86  88 141 108   6 183 100 155  23 123 106  33
 153  92 145  10  38  44  96 126   2 160 156  49 178 172 185 125  70   1
 104 196 112  56  17   9 169  29 186  35  85 142  67  68 163  50 118  36
 173 101 168  64  46 171  60 187  66  24 139 151  37 179  40  99   8  81
  58]
[153 180   4  31   5 148 109  26  40  79 100  98 183 172  50  55 161 154
  78 123 155  18  92  65 136  27  24  22 168 104 179  97  89  21 112  17
  23 181  58 170  64 190  16  93 150 149 122 169 119  80  75  54  19  73
 135  94 141 105 195 166 182  39  41  48 167 133 175 111 162  25  60  84
  20  82  88 128  12  72  56  33   0 146 145  51 163  99 118  36  30  71
 144 117  35  69  87  37   6 173 188 138 189  34 127 139 125  85 176  62
 115 116  53  74 130  52 126 165  11  10 124   9 196 103 134  81 113  91
 137  90 193 191 159  70  68  95  57 108 132  44 177 171 174 101   8 110
 102  28 164  76 120 178  29  43   7  59  47  38  96  63 140 197  61 107
 151  66  83   2  67 157 152 192 187 185 106  86   1 142  42  13 114 186
 121  15  49 147 194  45  32 160 156  77   3 129 131  14 143 198 184  46
 158]
[  2  96  55 135 113  89 158  91 126 130 178   3  33  56  29 125 171  51
  57 140 117 189  50 160 168 161  23 123 163 101  16  95  75 181  83 186
  92   6  12  68 145  47  70 106  99 176  62 148 142 191 193 179 136  10
 172  34   7  73  69  22 174  38 162 116 156  42 107 110  37 192  93 196
  45 133  17  20 122 100  77  53  31  88  72 150 115  52  40 183  65  25
 180  49 103 198 104 108  80  61 147  86  82  98 194  35  64 120  32 105
  26 152  15 195  30 109 153 182   5 143 167 128 137 144 134  36 184   1
  41 165  18 175  27 139  90  48 164   8  13 111  21 159  71  60 187 190
  67  87 112  84  43  66 146  59  63 141  14 127  94  58  74 151 185  78
   4  28 166 114  11 131 155  97  39  85 173  79  24 138 102   0 177  54
 132  19 149 121   9  81  76 129  46 169 119 124 157 197 118 154 188  44
 170]
[ 97 125 123 139  21 168  78 149  95 195 153  30 169   3  70  62 119  53
  16 121  11 179 129  76 170  48 124 100  14  47  42 157 115  55  50 133
  52 166  57  99  81  34 109  29  35 103 160 197 114  89 150 175   0 188
 178  43   7 165 108  61 161 159  92  94 163  13 147 145  18 107   6 191
  54 116   4 193 136  69   5 176 196  15 164  33 162 187 174 190 171  90
  10 105 177 198  20 118 154 194 189  65  45 137 140  84  24 111  77 110
  79 134 142 135  82 172  86 132  91 181 184 173  37 128 122  83  87  36
 186  67 130 126 143  31  58 185  96  38 113  63 180  73  26 131 148  41
   1 104  74  64 120  71 192 144  46  44  98  40  22 152  75 167  85   8
 138 158 155 141 106   2  17  32   9  23  27  28 182 127  19  56 102  59
  88  25 112  72 151 146 183  39 156 101  49 117  51  66  12  80  68  93
  60]
[172  13  32 107 112  92 161 150  55 153 191 186 196 156  41 140  72 194
 166  18 162  76  42 175 128  19  98 181 119  33 106  28  52 151 133 190
  73  54  63 148  68  61  53  16 104  24  51  87  39 169 160  80  78  97
 102  37 157   1 177 130 158  65 165 137 115  50 179 147  81  15  62  96
 146 182 120 135  94  40 168 171 114   7 105 108  71 185  45 138  95 121
  84 111  57  30 145  31 131  35 193  88 124 178 117  27  29 176 123 101
 163 129  10 164 183 187  86  66  20  38  90  74 126 167 142  47  23 141
   4 132  77 155 113  22  75 173  59   6  70   5  49 195 154 109  21  44
 134  69  12 116 143 149 189 188   0   2 110  48 170  58  67 159 197  11
  17  93 127  83 139  46  36  26  34  85 118 122 125  43  64  56  14 103
 192 100   9 198 174  25  91  82   3   8  99  79 144  89 184 136 152 180
  60]
[ 38  56  28  13 116 195  91  39 176 140 127  76 169 124  89 166  86  87
 168 193  31 105  59  84  85 135 131  58 167  17  30  83  35  12  99  61
 163  29  79 130  96  93 160 113 170  24  68 134 156 102 132  20 123 171
 107  65  57  82 128  46  15  95  25 121  74 152 172  40  45 114  71 177
 110 106 183  52 189 192 165 100  78  90 188  43  69  32 197  94 103  92
 138 126  67  62   5   0  55  34 162 159 144  75 164  44 174 154  50  73
 196 191  97   3 161  14 115 184  27  48 180  81  66  53  23 151  11 109
 104 129 112  60 118 137  26 178   4 108  21   1  16  98  22  36  80  72
 190 157   9  37 145  47 153 136 194 147  88 117 125 198 150 182  70 173
 101  49 120 141   6   8 158 133  18  64 181 119 143  33 149   7 175 186
 155  41 146 111 185 187  51  77  10 142 139   2  19  63  42 179  54 122
 148]
[102  63  36 129  71  16  32  50 127 190 168   5  97  12  78 172 109  98
  39  83  57 100 133  58  31 115  96 170 143 187 177 110  43 119  25 154
  89 196 122   3  53 103  92  65 113  48  64 185  99  84 164 116 180   2
  59  60 108  44 136 151 130 179 134  49  82 138 189  93   6  19 132   0
  23 118 114  76  46  20  40  35 181 101  21 176 140 147  94 194 174  10
 105 149 175  29 171  14  85  77  30 137 157 146  51 135 153  80 120  68
  79  87  90  74  38  45  54  91 186   1  73  28 162  75   9  55  41 188
 195 144 184  61  18 160 117  70 159  88 165 173  42 131 124 156  62  86
 142 183 152 150 191 193 198  22 139 197 145  17 169 167  15 158   7  67
 106 163 141  27   8  33 104 155  11 126  81  37   4  52  95  26 121 125
  24 166 161 148  69  34 182  47 192 107 128 112 123  56 111  72  66  13
 178]
[141  97  98  87 131 129  75 122 195 146 128 196  42 152 197 109 176 190
 130 193  53 134 145 112 120 184  33  78  28  71  91  99  44 135 115 103
 187 121  45   9 136  65 156  80 178  52 117  56 172  26  21 124  12  54
  89 166   1  32 191  20  59   7 181 183 148  64  47 138 126 100  77   0
  36   3 185 153 154 151 192  30  11  82  79 157 123 194  13 102 101   8
  73 161 188  86  31 182 143  49 170  63 198 169  72 189 119  90 177  62
 155 162 137 165  41  48  16  55 113  92  29  95 175 158  38 106  58  76
  50  24 116  69 149  84  51 107  88  70   5 160 179 180  17 164 118 133
 139  39  22  34  94 104  83  66 105  67 163  10  19  57 147  14  18  35
 108  25 114 110  74 125  60 174  93  68 159  96  43  27 127  15 168 167
 140   6  40  46 173 150 144  61 186  85 111   4  81   2 132 171  23 142
  37]
[191 171 128  31  40  52 103 101  33  35 156 144  55  93 147   3  96  36
 193   5 141  26  17 173 166  89 142 146  70 188 134 177  84  72  20  90
  66  13  11  50 161 189  16  62 129  22  82  86  73  44  57  80 107 196
 183 145  29 120 170  14 140 112  51  75 159  45  91  88  60  99  43  74
 109   2  58 178 167  21  61  71  47 172 180  12   8  56  39  85 123 126
  48 184 148  41  59 105 117  97  24 113 150  81 149 102  10 104   7   9
 139  94 181  92  18  98 155 151  25 176 165 100 119  37 164 138  83 179
  95 168 132 195   1 124 186  38  79  67 190  63 194 154 130  65 182  54
  30 198 135  34  87 137 175  64  76   6   0  19 110 169  32 162 122 197
 115 160 131 143 152  53 106  69 158   4  49 157  78 133  23 136 108 121
  28  68  15 118 127 114 153  46 192 116 185 111 174 125  42 187  27  77
 163]
[ 96  72   8  39  69 163  80  63   3  60  90  61  22  13 117 131  45  47
  51  19 184 145 107  10 140  27 109  14  58   1  38   0 104  86 143 116
 122 156 190  83 110 174  53  87  88  29 171 139  68  74 148 191   2 114
  33  40 119   9 151 172 187 186 192 183  73  59 175  91 177 108  18 168
 123 173  44 154 124 141 180  64 185  56  78  99 126  79  35 188  26 197
  30  98  81  20 106  48  46 136 196 161  85  62  89  57 169 170  67  71
  41  23   6 153 166 142 130 164  95 134  93 178  75 189 167  55  21 120
 193 100  24 155  36 146  31  11 152  43   5 158  12 176  32 162 159 125
 105  34 195  82 160 157 133 129 101  49   7  97  70  77 127 103 137 149
  17  66 179 181  16 182 121 113 165 115  15  84 150 194  65  37  42  92
 111 118 198 144  28 132 112  50  76 102 128  25 138 147   4 135  54  94
  52]
[147  65  91 104  13  43 191   7  81  88 197  99  44 155 134 103  84  26
 151 168 162   4 165  21 117 124 109  67 189 115 135 122 102  72 126 159
 188  24  97  93  46 100 156  39  71  78  30  11 145 136  42  77 128  79
  98  58 132 143   3 176  35 118  89  16  23 190  86  31 174 141  40 116
  32 177  76 127 195   9 179  53  37  94 173  12  22 153  47   2  74  29
  20 133 184 157  85   5  80 172 150  18 170 101  52 160  61 194 137 178
 142  34  38  51 140  87  27   1  41  92 192  69 183 113  19  66  25 120
 175 169  57  17 182 131 180 129 187 186 171 198   0 114  90  55  36 193
  45  63 196 105  82  54  50  56 138 123  96  62 161 149  70  33  83 152
  75  14 166  64  10 167   8  73  95  60  15 163 146 108 154 144 158 185
  68 119 164 125 107 121 139  28 130 148 111  48   6  59 106 112  49 181
 110]
[ 89  39 114  64 177 156  54  23  20 189  75 171  22 136  40 166 151  42
 112  70 198  71 132 169  48 110  28 197  83  16 133 188  66 117  53  85
  88  18 139 150  30  61   6 147  57  74 109  32 183   4   5 178 181  44
   8  19 104 159  17   2  76   7  35 102 194  62  13  95 182 135 157 140
 184   0 141  81 173 107 175  27  46 106 125 180 103  96 118  77  25  67
  33 116 174 138 154  78  38  45  58   3  29 105  84  37 142 179 185  10
 172  41  91 137 186 176  55  11  68  72 129 111 191  60  63  14 155 115
 170 192  51  43 128 119  93 131 123 161 124 126 113  36  47 165  99 108
 100  73 193 168 190 162 196  87  21 167  69 144 148  98  65  86 187   1
 143 163  92 127  56  49 153 130 121  50 160  82 149   9  24  59 120  31
  80 134 195 152 145  97  79 122  52  34  94  12  15  90 158 101 164 146
  26]
[119 169 126   4  19  18  52 110  13 143 144  15 176 131 142 164  94 122
  40 152 184 153 151 172  49 165  28 146  74 134   9 183  26  90 148  33
 113  27  79 166  93 159  89 103  17  48 185  78   2  61  30 109 150 106
  84 194 112 129 195 180   5 193 147   8  53 133  37  99 157  14  55 141
  60 162 158 101 125  35  83  67 189  12  51 124 178  16 173   7  77  64
 104  62 149 135 155  47  23  95 156 188  96 171  69  38 196  50 167 145
  34  11  65 187  91  80 174  70   0 111  45 154 123  68  58  85 128  10
  88 177 114 181  39  97  66 198 102  72 197  71 190  98 120  75  63 116
  42 115 130 108  76 139  86 121  73  41 186  57  31 105  54 138  24 117
   3 118 132  59 161  32 107  87 191  43  25   6  36  44  46  56  20   1
 192  22  29 100  81 140 170 127 160 163  92 179 137  21 175  82 182 136
 168]
[122 125  51  46  73 110  59   2 137 133 168  50  29 178   6 150  44   0
  75 187 138  10 190 181 182   3 179  60  70 119  90 130  99  55 113 192
 105 162  37 145  69 135 132 128  85  58  27  31 155  92  17  21  66  47
  86 194  53 160 100 124   9 196   4  95  34 188 156 184  84 141 189 144
  20 112 176 171  74 102  39  94 143  11  49 109 165 169  24   1 157   5
 123  36 186  65  52 118 131  41  88  91 193 174 164 121  12 101 108 154
 103 173 161  56  23  68 175 111 134 116  57  28 166  30  78 191  93  79
  83 129 146  77  42  89  35 170 195  67  64   8 172 142  16 107 139 185
 153  97 147  48 104  96  82 197  71  87  98  25  33  72 114 149   7 159
  54 152  19 115  22  81  38  62 106 198 183  76  80  14 126  32 117 163
 151 177  18  61  43 148 140 120  15  13 158 167 127  40  45 180  63 136
  26]
[ 78 118  34  43  18  93 115   6  58 167 181 120  92 173   2 160  66  70
  38 149 137  27  48 100 138 145 140 165 117 125 168  32  25  45  49 148
  12  89   9  39  81 111  60  57  88   0 139  79 153 169 135 123 119  63
  47  91 154  69  84 176  56  64  26 150 127 177  36 133 106  24  14 122
 104 147 164 193 184 192 129   3 141  65 186 172 170 157 131 155  28  41
 114 107  90  22 108 112  95 105  19  94 195  52 152 166 109   8  61  51
  13  76  42   4 183  20  53 174  86  80 175 101 158  62  82  87 194  71
 190  29 126  31 198 161  33 171  59 185 187 178  17  54 132 110 128  21
 136 103 162   5  98 102 130  35 189  30  68   1  44  83  50 191 179  97
  96 113 163   7  55 134 143  75 180 144  67 182  11  37  72  23 197 116
  40  74 146  99 121 159  16  10 142 196  77 124 151  85  73  15 156 188
  46]
[143  27 181 153 134  68  69 115   2 119  61 110  10  75 125 104 142   8
  99 127 105  19 114  64 188  29  46 172  80 156  88 196  54  95  25  72
 161 106 120  50  53 151 190   9 182 111  51  14  12  37  21   4   5 195
  87  31 178  20 123  36  11 160 184 191  55 152  92  58 132  74  17 109
   0  70 174 194 170  89  57 128 148 122  63  28  43 186  49 169 180  83
  32 192  73  94 166  84  71 159  15 193 130 198  85 121  66  44 167 141
 145 177  33  59 165 100 133 149   7  41 155 168 101  65  26  90  45  82
 112 102  86  30   3  96 189  79  23 129 187  47   1  62 197  24 176 144
  91 150 137  35 136 158 146 179 185 140  77 117  97 131  93 173  42 135
  13 139  81  52 103 154  48  16 183   6  76  18 171  40 157 164  39 113
 126 124  38  56  34 138 116  67  22 163 108  60 118  98  78 107 147 175
 162]
[131 196 164  33 120   9 106 142  66 123 124 150 149  89 178  10 151  93
  36  27   1  11 172  21  24 171  43   7 148  51 146  32  12  98  34 143
  38  29 157  63  57  28 177 176  17  74 137  45 103 194  35 144 127   0
 169  42  16 100  77 158 170  19  31 181 141 117  78 119  92 134 182 185
 115  84  47  88  90  91  69  82  26   8 122 184 125  70  52  37 118  25
  58  30  72  59   2  46 166 190  97 193 162 192 163  83 101 126  48  13
 135 189  95  49  55   4 155  53  99  64 109 188 154  61 129 107  79 165
 121 116 160  41 145 140 128  54 113  87 136  60 102   3  96  50  65 198
  22  15 132 186 105  86  40  81 161  85 112 114 168  62 153  18  76 187
  67 108 159 139 180  80   5  68  20  71 111 173   6 195 110  94  73 130
  23 197  39 104 183 133 152 179  44 147 156 175  75 138 167  56 191 174
  14]
[160  10  66 181 155 139  51  13  63 129 192 120 143  79 171 109  31  42
   0  36 101 114 151 107  55 131  87  23   7  89  35 174 173  41 195  57
  64 118  16 176  43  27 146 144  21 100  73 188 108  32  18 102  72  76
  93  17  69 191 141 182  50 180 172  26 127 194 134 148  40 133   9 119
 128 112 138 152  68  95 196 130  60  74  88 169 162 116 186  22 153  29
  81 106  78 159  80 137  98 164   2 157 142 197  65   8 170 122   4  47
  14 167  77 117  84  19 177  92  46  71  56 184  54  45 121  70 150 183
  25  37 187  28 189 124 126  11   6  75  59 175  85 185  62 140  20 179
  96 190 166  53  97 135  91   3  86 145  44 149  15 161 105  38 154  48
   5 123  49 111  82  58 132 103  39 113 158   1 178 104  52 115  67 147
  94  12  83 193 165  34 110  33 136 168  99 163 125  61 156  30 198  24
  90]
[ 92 108  19  61   4  38 143  22  83 148  85 128 174 185 141  82  56  63
 157 169 127 195 115 190  48 172 156  47 176 111 123 177  18 101 132 139
 151 118 129  80  87  20 138  57  36  98 180 165  60 102 168  41 171 150
  91 198  14 120 196  97 188 193  21  12 142  77 134 119 146  74  16   0
 155  13  78  25 137 116  40 170 117 186 112  94 163  86   8   5  71 152
  99  30  96  49  17 189  52 136 107 179 181 192  55 140 100  68  37 109
   3  58 167 191 175 194  84 161 121  10 183  70 164 154 187  39  35   2
 144  28  32 197  76 106  59 133  33  23  11 184 159  31  62  45   9  50
  46 103 162  44  89  26 113  64   6  72 166 122 104  67  34  75 149 105
 160  73 147 114  53 153 178  79 145  81  65  24 158 131 135  29   1 110
 125  93 173  88  54  15  66 130  27  42  95 182  90 126  43 124  69   7
  51]
[ 35  84  54  82 110  38 111 108  59 188 167  72 157 160 109 115 131   5
  52 182  27 172  42  97  61   6 112 186 138 120  49 133 191 128 169 168
 147 129  26  32 171 193   7 123  12   3  34  78  24  29 113 175  74 184
  99 101 114   2 134 124   8 126 127  23  66  10  22  85 178 119  30   0
  92 180  60  31  50 106  58 125  56  53 179 145 152  51  44 102  91  16
 136 165  87 170 137 161 187  64  13 190  94 122 181  46 176  37  90  21
 143 151  68 162  55 158  57 174 166  80  40  36  39 155 118  33 163 198
  95 150  96 159  75 183 195 103 130 194 189 149  11  48  73 105 164  69
 146 104  81  43  62 144 107 173  98 140 139  88 154 148 156 117 142 141
  15  76  65  14 196   4  41  28 192  77  67  70  71 185 132  17  19  45
 116   9 153  47  63  86 135  83  79 100  20  89  25 121 197  18  93 177
   1]
[143 116  43  41  19  31 115  45  57 141  26  85 154 109 186  69 111  79
   4  16  13 163 117 131  34  50  39  95 178 130 160  61 156 125 151  54
  62 183 161 123 182  12  70 124  75 189 142 173 169   5  96  28 168 107
 100  98 162 104 184  92  51  42 146  55 128  48 175  87  94  66  68 187
 176   3 113  59 150 119 101   7  76 144  74 129 138 137  83  64  78  65
   8  91 177 155 118 192 198  38  97 152 165 190 133  72   9 158 132 110
  47 172  93 139 188  58 148  52   1  88 167 135  14  46  18 136  89 147
  63 126   6 157  33  40  99 112  21 108 197 164 121 193  24 103  80  84
 105 194 106  67  25 196  23  30 191  20   0 153  60  27 145  10 171  73
 140  22 102  11  44  17 159  53  56 120   2 114  86 181 180  29 149 122
 174 134  81  37  15 170 127  35  77 166 195  49 185  90  36  82 179  32
  71]
[114  70 190  92 149 182 197   4  55  19  72 152 180  28 194  42  10  77
 195 141 116  85   8   7 187 133 104  78 111 176 155 153  44  49 102 147
  96 150  30  22  27 184  76  48  29 157  86  54  20  80  93 100  82  88
 129 127 110 168  45  52  35 135 113   3 193  71 158  61  32 109 146 145
  12 112 144  59 177  34  14 198  60 106 105 161  94 186 103 166   1 191
 196  68  57 189 148  87  25 143   2 108  43 172  50   5   9 178 154  84
 185  65  31 134  53 167  98  37 117  46   6 169  56  58 164 126  21 130
 122  69 138 136 120  63 183 124 125  13  38  75 115  39 151 142 140 118
 139 171  99  97 162  26 173  16  23  36  18  11 188  73  62 159 132 137
  67  91 107 175  51 170  17 165 123  40  79 163  41  24 160 128  47  33
  95 121  15  66  64   0 192 174 181  83 101 119  74  81  90  89 131 156
 179]
[ 63 171  79 101  36  42  80  62  50 179  33  15 193  40  71 185  59  66
  99 175  94 159  68 168  23 142 162 153 138 113  73 139   6  96 145  85
  45  16  53 140 108 148 102  90  12 196  48 100 129 173  70  72  17  14
 184 121  52 183 112  64  83 116  51  74  54  98 198 110 174  46 186  81
   5  44 165 126 178 141 170 150  39 131 181   7 106  56  18 147 115 191
 190  25 156  75 135  78  97  77  29 122 164 132 109 111  11 134 172  27
 137 143 169  47  10  49 114   3  86 188  69 160 103  82  21 130 194  30
  84 192   9 180  89   0  20   8 161   4  22  61  87  41 152  91  67  26
   2 163 118  92 136 182 158  76 157 189 127 155 144  60 149  35 195 117
 166  57  28   1  95  19 107 197 119  55  65 133 146 128 154  88  24 177
 176 125  32  13 105 120 123  38  37 104  34  58  93  31 124 151 167 187
  43]
[  5  10 197  44  62  24  31  30 161  90  93 134 132  16  17  48 190  40
  67 165  22 166 127  79  13 191  54  57  86 196 106  19  55 139 187 193
 142  35 120 143  34 121 111  75 112   8  77 150 118 152 179   6 162  29
 173 148 184 146 169 115  41  71 158  45 125 144  72  83 124 108 159  38
  70  14 109  59  89  37  88 128  43  49  32 188 114  73 153  21  58  87
 122  39  53 177 119 110 163  65 160 145  76 130 181  81  63 198 104   2
  12  61  82  18 140 116  92  47  91  11 123  74 135 174   1 175 172  80
 176  23   9 183  60  78  15 101 129 149  52  95 138 103   0 171  64 155
 107  99  97  33 147  69  42  28 131  27  68   3 192 170 102 185 186 180
  56   7 151 136 195  50  94  66 194  20 105 182 137   4  51  36  25  46
 168 141 117 164 178 113 100  26 154 156  84 126  85  98 157 133 167 189
  96]
[168  88  49  63  73 146 196 108  15 152  80 187  27   6 198 149  94  93
  19  11  83 118 139  68 148   9 133 125  57 145 173  70  96 167 101 197
 150  95 189 186  89  60  64  33  17  36 116 184  69 142   3 143  43 129
 121 134 147  52 160 131  87  46  77 157  32 159 132   5  37 158 176  14
   4  31 195 179 171  39  55 106 177  84 170 156  50 114 127  97 194   0
   1 163 161  53 105  29  59 130 123 128 155 188 140 135  58  61 162  23
 172  76 111 115  13  22  24 178 180  81  78  47  45  67  90  92  82 175
  79 103  18  86 174  16  98  20 122  99 110  48  26   7   8  74  30 166
  66 192 126 109 117  62 181  21 104 183  40 100  51 120 191  34 165  65
  54 113  35  71  75  25 137  10  85  72 185 102 138  56  12 190  44 107
 141  91   2 144  28 112 182 164 124 136 151 154  42  41 169 193 119 153
  38]
[105 120 160 189  93 168 164  51   9 191  63 198 159   0  37 155  16   4
 178  78 176  54 146 166   5  68 101 177  55  92 184  52 106  14  74 143
 180  41  69 148 183 172 158  58 147 103 116 193 187 107  83  76 154  66
  26 153  85 173 163  40  65  46 100  96  62 123 194  97 136  94   8 125
 104 110 169 151 192  81  34 186 129  80  21  57 133 162  75 165 126 141
 121 196 127  77  61 149  38  44  10 135  90 140 145   7 195  47  50  91
 102 119  59 122  88 139  79 181   1  42  49 134  15 114 171  35 179 112
  43  48 174 156 144 132  60  12  17 111  84  86  29  25 108  11 113 185
 118 109  13 115  45  95  56 157  18 128  24  36  73 152 130  70 188 161
  28   3 167 138   2  33  72 170  31  30  22 137   6  67  23  20  98  71
  32 197  82  87 124 117  27 142 131  99 150 190  53  19 175  64  39  89
 182]
[191  67 102  39 176  66  99 136 130  80  69 107 142 139 196  57  83  85
 153 105  29  75  72  33 116 120 180  54 167 128 156 171  56 172 126  20
  30 146  61 160 143 169  51  65  97 115  59 181 185   2 178 151 148  43
 118  88  44 161  62  52  93 135  78 134   1  48  95 166 162  21   6  53
 110  90   0  63   4 150  49 164  19  17 140  84  31  71 117 163 158 152
   8 198  47  89 145 137 144  11 131 138 122 182 186  74 124   3  45 197
  16 149  70  25 129  87  79 184   5 154  64  28 165 113  22  68 159 190
 141  55 101 174 194 106 108  86 119  34  91  77  13 168  42 173  46  41
  73  27 103 183 179  98 111 112  58  40 195 187 127  81  15  35 109 132
  23  18 123  50 133   9  92 177  82  96  60 193  38  12  76  14 192  26
 157 175 170 189  10 100  94 188   7 155 104 114  32 121  37  36 125  24
 147]
[ 52  55  50 155  27 125  61 156 153  95  25 188 163  28 143  58 131  63
 100 183 179 177 180 158 198  83 185  54  82  21 167  70  71  85  40  24
   5 102 173   2 104  44  74 111  11 101  59  64   6  84  57  13  18 124
 147  29 106 132  46 157 118  94  75 123  15  42  87 184 141 133  14 113
 149  43 178  38  68 115 128  37  73  91 189   9 108  97  53  23  76 171
  92 148  12 126 139  72   1 129   4  77 146 190 144 154 138   8 182  32
 120  51  96  80 160 114 161 105  33  49  99  22 110 166 117 172 191 119
 109 134  89  20  88 145 137 162  45  98 116  60 121  26  67  69 165  78
 168 181   7 136 193 176 103 112   3  90 194 107 175 169 130 150  39 127
 140  93 192  36  16  34  62  47 164  17 186 174  35  10 135 187  86 197
 195 122  48  65  81   0  66  31  19 142 152  41 196  79 170 151  30 159
  56]
[114  19  12   0 112  63 103  99 152 186  37 132   7 188  38 117 150  53
  22 157 100 119 154 146  70  32 136 155  97  88  64 164 197  71  48 145
 105 143  15  79 149   1 158 178 156 131 128  24 123  83 104  44 190  56
  72 168  81 184  76 101 121 196   2  18 153 171 193 165 142   4 167 170
  31  51   3  14  25 185  42   9  50  78  68 179 175  92 176 130 174 163
 113   6 102 127 115  10 107   8  80 173  20  59 147  87  60  84 181 125
  26  69  17 151  65  28  41  46  75  16  96  55 133  82 198 120  73 166
 110  23  27  89  74 134  66 192 109 187  29   5 126  40 182  57  62 118
  35 141 148 160 194  49  61  13 124  30  45 180  67 108 106  98 172 138
 161  21  54  43 162 169  77 135  91 122  52 159 144 137 195  58  90 183
  86 129  47  95 111 189  36 191 116 139 140  94  93 177  34  11  33  85
  39]
[107 194  28 170  76 166  24   4  67  38  57  75  96 153 105  91  20  78
 175  63 173  48 165  25 169 197  50 100  14  46 178 190  45 121   9  97
 174 188 159  31 157   7 136  29 137  32  43  65 180  15  54  11  53 143
 187  68 130  39 167 198  40 176  56   5  98  86 177  18 138 158  55 140
 103  21 189 172 148 160 161 111 127  70  69  62  30  66  35 114 112  37
 147  88 155 113  60  34  16 144  23 184 156 132 195  92 139 146  10  77
 168 185  33   1 141  85 118 150 120  42 117  61 193  52 128 171   3  17
 135  27 154 122 134  22   0 106  36 152 163  94  80  59  44 164  83 119
  74  13  51 133  87  72  93 181  99   2 151 192 115 182  49 125  89 109
  84  26 102 108 129 186  71 183 101  79   8  19  12 116 110 145  64 104
 123 126 124 142 131 162  82   6  81 191  47 179 149  58 196  90  95  73
  41]
[ 33 132  78  49  51  20 188  66 130 150 146  87  67 124 152 140 148 175
 109 104  14  94  39  93 172 168  15  12  58 155 161  36  61   4 158  18
  53  56 125 197  57  38  91 193 119  43  31 160 145  90 154  30 195 102
 149  65  34 191  99  54  79 179 162  11  75  64 143 185  69 173 110  59
 131  71 170 167  92 106  98  21  84  77   9  42   7 164 121   1   5  97
 163 101 183 136  72  13 137 134 141  74  27   2 114  17 184 100  50 147
 196 181  86 194  73 189 126 177 129 186 108 142  46  45 192  25 133 180
 122  55 182 127  32 117  48  89  85 123 153 116 187  19 128  28  68  26
  62 190 135  40  95   3  22 151 178 112 118  35  10  82 165  16   6  24
 171 174  23 139 138 107  37 169 176  83 105  41 113  96 144  44   0  63
 120 156  81  60 166  52 115  29   8 159  70 103  47 157  80  76 111 198
  88]
[134 190  76  42 138  16   1 195  87  70 170  40  48 131 105  85 177 191
 104  79  68 102  27 172 125  61  91 124  10  21 139 142  64 189 157  59
  35  26 153  60   7 192   8 194  15 156 112   3  52 197  50 149  36 109
 123 178 161 159  90  55 166 187 184 116 168  65 180 162   2  67 111  47
  33 135  37 155  32  66  81  58  22 115 113 175  46 183 108  88 133  82
 143  12  95   4 100 148 160 118  29 140  92 176   9 167 181 169 107 119
  18 173 165 141 121  57 129 137  20  73  83 106 193  19  25  45  69   0
  84 158 164  93   5  39  56 146  96 179 188 132 128 127  43 136 103 171
  14  34 147  54 154 117 145 198 150  24 110  38  11  51  77  74  71  49
 185  31  89 151  98  80  75  13 101 174 186  62 126 182 163  99 122  97
  94  44  23 120  78  63 152 130  41  17  30   6  28  72  53 144 114  86
 196]
[ 98 193  62  85 165 167 173  89  96  53 189 168 145 116  68  51   6 136
 142  65 195 141   2  10 160 149  20 138  39  88 191 143 155  72  87  43
 111 169 137  69 123 150  57 133 152  28 153 157  23  17 164 181 128  75
 161  50 176  99  25  93 112 180 197 186  19  18  30  33 188  26  52   5
 172 105 190   3  47 100  58  14  15 171 179 177  36  40  61  77  56  92
 166 109 146   1  22 196  44  49  64 113 156 119 159  78  67  91  21 194
 178 106 147 144   9  63 175  31  71 125 115 126  55  24 130 129  60  38
 158  37 104 148 122 151 154 110  48 117 134  54 170  59  79 124  86 192
   8 139  81 103  45 182  76  12 184   0  84  29  74 118 102  27  90  97
 114  95  41 135 121  82  13  46   7 108  70 174 163  73   4 107  42  32
 127 183 131  34 132 101  83  35 198  80 185  16 162  94 120  11 187 140
  66]
[ 76 169 128 142 192  41  64 194 110  63  87   4 165 178  71 152 185 138
  83  30 157  67  60  10  11   6 134 175 108  17  16  66  19 146  36  50
 148  15 180 183  51  79 190  69 181 126  22  86  33 149  75  80 133 102
  44   0  32 125 116  99   7  35  93  34  72 120 184 159 151 150 196  26
  96 171 118  52 112 191 135 161 140  18 119 156 197 122  56 176 104 132
 160 174  84 145  94   8  38  45 107  27 172 127 131 137  47  95  29 100
  98  55 101 162  46  61 167  58 193 117 130 166 198 179  21 113  39 115
  12   2  20   9 123   5  92  68  31  77 182 103 109 114  73  70  48 168
 189 129  54 154 136  14  23  62 139 144 121  25 105  88  43  40 147  28
  49  59 170   1 106  53 177 111 164 124  24  13  90 163 173  78   3 158
 195  85 188 186  42 187 153 155  74 141  37  91  89  65 143  57  81  97
  82]
[ 58 122 179 132  13 119 168 151  88 131 185 150  63 143  20   3   5 166
 139 137  64 117  56  27   4  75 111 173 194  87 170  40  72 167 118  60
 172 135  17 175 112 129  90  79 156  44 107 178 152  51  68 127 189 100
  14  57  92  50 171  34  42  46  30 193  28 148  98  16  12 101  24 154
  99  76 183   1 196 141  74  11  97  65  83 121 177 147 108  49  10 164
 192 181 102 197  78  86 198  39  91 155 106 113 142  94 161 184  38  53
 136 169  23  55  81 105 124 163 160  37 180   7 134  35 114 120 128  67
 116 165  52 104 162 130 182 190   6  73  48 115 103  61 149 138 195  18
   2  22  95  25 109 133 158  80  66  21 110   0  31 157 144  54 188 187
 145 191  47 140  77  96  45  41 123 159  84 146 176 174   8 126  82 153
  33  93 186  29  19  71  85  70  43  62  36  89   9  32  59  26  15  69
 125]
[ 85  77 122 152  74 113 139   0 172 178  50 185 190 182 186 121  27  25
  31  81 165  90  91 110  52 109  12 124 160 188  23 155  36 125  64 132
 128  67  72  57  13  69  51 143  54 154  49 184  37 193  42 120  80  35
 141 108 171  93 146 134 111  61 137  48 102 179  38 153  14  89  60 131
  86  16  18  11  45 192 133  96 194  84 148  26   4  10  78 135  46  55
  43  41  39  71 167 145 169 162 106  62  19 114  88  98 103 149  68  99
 112  33 164 197  17  56  76  83   7  44 140  97  95  22 101 142  21 196
 173  73 170 123 150  82   3  94 174  24 115  79  40 158  75  70   6 161
  47 100 147 130 195 187 183 129 144  28 181 107  15 175 151 189 156 116
 168 105  58  20  92 138 180  66 136  29   8 177  34 104 118 166 119 157
 198 191 127  63   5  59 126   2 159  53 176  87 163  65  32   1  30 117
   9]
[141 100   9 191 173 159  41  72 124  95 144  89 155  28 132 137  45   6
 165   1 146 189 194  50 113 170 166  78 187 151 160  97  71  27 105  57
 150 129  83  69 120 139  51 192 153  37 198  66 147 154  42  31 125   2
 142 185 130 179  11 122  35 157 167 168 106  55 197  73  38 101 171  74
  76 108 112  10 121 183  25  53  96  92 174  26  20 131  65  36 127   5
 148  33  98 193  44 107   7  52  12 162  14 182 145 190 133  34  46  16
 135 163  19  77 176  91 115 156  85   3 114  63 178  64 104 161  21  82
 119  59 181   0  24  79  39 111 117  18  54  43   8 149  99  87  13  56
  84  58 196  60  61  62 128 103  47  49 169   4  94 140  86  67 186 126
 143 152 184 195 180  70  15 138 123 116  88 110  32 164  75 158  22 134
  40 102 136 118  23 188  29  80  81  30 175  90  93  48 172 177 109  17
  68]
[150  46  95  59 138 135 153 116 193  78  45 155 113  65 106 114 176 127
 141 136 140  68 130  32 182  16 111 192  82  23 132 195  44  91 148  92
 115  97 178  12 166 162 165  34 174  76 128  52   4   9  20  26   3  86
 171 170 197  33  39   0 123 188  42 161 119  56 152 156 146  71  79  88
  41  18  14 181  30  85  17  60 147   8 160 149 179 187 100  50 196  64
 190  29 102  57 112 117 172 124  67 134  75  37  13  11 177   1  38 183
 129  93 133  10 118 151  43 142 145  90  58 157  89  96  61 125  73 189
 173 120  40 126 159  24 143  63 158  28  94 110  53 101 194 186  66 139
 131  35  51 167 184  47  70  81  21 191 168   7 154  74  54 103 175  87
 164  22   2  98  84  49  15 108  19 105 185   5  77 107  36  80 169  27
  25 104  99 137 198 109  55 121  69  48 180  31  83 163 122   6  62 144
  72]
[147  67  90 180 135 189 123  74  27  91 156  17 115  69  50  71 162 172
   7 118  83 196 178  63  82   0  35 146  22  93  32  42 101  11  88 197
 145 168  56  41 126  43  68  38 171  45  20  51   3 183 152 128  49  36
 110  37  60  99  77 188  16 119  62 106 117  78  59  40 149 113 102 142
  52 105  48  73 165 124  13  64 122  89 159  85 185 144   9 182  12 132
  84 160 151  96  55  44  34  65 153   2 161  72  57  80 130 127  81 154
  19 187  39  66  30 136 157 103 125  76 163  70 134  58 174   8 129  31
 193  15 138  46  24 191 131 108  61 148 133 169 198  10  94   5 116  54
  28 186 179   6  98  75  25  79 167 140 195 139 100 173   1 177  86  26
 104 137  29 150 170  23 143  21 166 158 141 155 164  18 190 111 114  97
 121 176 194  14 120 109 181  53  87  47 175  33   4 184  95  92 112 107
 192]
[ 97  30  86 169  13  47  92 157   4 173  93 181   6 121  37 109 168 111
  91  64 123  90 128  82  98  38 110 170 103  75  79  21 108 100  31  15
 191  96 129  14  81  18  35 132  61 126  52 158 189  77  32 134  70  17
 106 159 197 166 154 118  46 187  50 184 115  67 114 105   5  16 139   9
  57   2  43 122   0 151 188  83   7 143 138 162 130 180  26 192 102  24
  54 148  58  73  66  99 195  59 150 113  22  95   1 135  72 153 182 164
  80  42 145 185  25  62  74  60  53  76  51  55 175 117 183 160 163  94
  23  56 136  87  28  34   3  39 177  69  11 142  48 120 194 152 147  41
 141  71 140 112  27 119 171 174 116 165 149 156  65 179  49 131  40 137
 124 178  85 104 133  29  45  44  63 144 193 155  12 198 190  20 172 107
  68 161  78  36  19  89 186 127 176   8  84 167  88  33  10 196 146 101
 125]
[ 92  63  60  89  27 152 106 170 175 157 110 194  38 141  19  80  93 130
  62 126 143  67  97  49 158   9 124 132 123 177 137 190  90 135  29 121
 134 128 176  50  35  26  39  91 196 160 188 113  47 162 108  30  22  96
 102 198 155  17  69 191 144  58  73  57 192  10  28  48  53  84 103  54
 173  40   6  24  45 195  11  37  36  70 140  94 116  16  86 185  78  12
 129 133 164 186  77 187 146 125 189 149 105 179 115  55  88  15   4  20
 114   5 131 142  99  42  21 183  44   1 156 100  51 174 118 172  18  33
 138  83 120 184  68  61  82   7  32  79 127  34 145   3  43 107  64 117
 159 119 109  46 153   2  25  76  23 136 165 154 181 193   8  41  31  81
  59  56 167 139  85  98  52  14 101 150  74 182 151 163 171 122 112 161
  87 104 147 197  95  75  65 178 166 111 180  66   0 169  13  72 148 168
  71]
[ 25 162  12  60  91   2 190 155  17  32  83 174  82  47  70  36   6  46
 115 141   5 167  89  55 111 127  90 113 119  87 182 137  74 128  48 117
  34  44  19  79   0 181 163 107 149  61 192 109  27  66  63 147  37  18
 153  13 136  71  67 123 116 185  35 126 124  96 110  45 100 114 121 175
  86 164 106  20  99 180  41  85 148 134 138 103  54  14 108   9  15 101
  42  43 165  21  93 183  92   7 135 194  50 152 145 146 142  56 132  76
  72 140 125 178 189 198  57  39 130  94 170 177   4  51  23 188 193  38
 176 112  69 160  98  78 133  30  75  77 159 168  81 105 195 151 129  52
  40 154  33  53  59  95 104  24 102  88  10   1 158 150 166  80  73  26
  28 179 144 118  58 120 131  29 161  22 173  16 172 143 156 122  84   8
  65  31  62  68 196 171 197 169  11 191  64   3  97 139  49 157 187 184
 186]
[ 19  49  61  94  96  22  73  67  92 124  39 113 125  71  17 188   3 193
   9 106 160  45  18 150 115 184  40  43 108  41 167 197  90 110 102  30
  35  37  32 181 177  13 138 162 109 180  56 136 187  75 157  15  57 129
 143 118  20  83 155  23  28  51  44 179  55   1 107 126 195 139  60 127
 173 156 151  68  48 170 190  91 175  87 178 183  97 132 134  88 128  69
  98  16 158  62  84 111 101  27 192  77  33  80  89  78  31 185 186 137
  72 121  95  74 119 159  54 112  58 117 166 168   5  64   7 104  85 146
 165  11 147 120  46 100  24 169  34 172  52  47 149 189   6  14 194  21
  82  25  70  50  93  76 182 148 191 145  42 103 176   0 198 164  66 135
  79  26 163  99 154 131 153  81 105  36 133  65  10  63  38   4  53 130
 196 114 116  12 140 142   8  86 144 152 122 171 123   2 141 174 161  29
  59]
[182  77  86 165  25  91  69   9  42 128 156   2 117  81 115 116 113 133
 184 140 143 169  68 158 144  65  21 172  15  78 190   6 136 150  45  20
  58  90  64  12  79 120 196   4  28  27 162  98  26 191 163 103  63 197
  41  48  97 114 198 139 101  70  53  43 154  89 145  62  37 149 111  31
 168 126  35  23  22  17 179  52  95 159  60  66 195  13  73 142 193 167
   3 146  54   0 147  44  88  61 155 166  85 194  96 134 104 153  83 127
 148 125 183  99 185  38 122  14 129 189  29 118 151 106 121  80 170 177
  84 171  67 188 173 174  75 135 137 160  24 178   8 175 110 109  33  39
  57  49  30  16 157 161  71 164 119  34 141 180  51   1  55  10  46  18
 107  74  11   7  93 138 192 124 123 100  72  50  19  36 108  87 131 105
  82 176   5  56  32  94 187 130 152 132 112 186  76  40  47  92 102  59
 181]
[100  31 160 184 104 123  64  45 196  75  94 148 142 190  42 105 188  81
  62  18  92  49  90  20 140 182   7  54  86 153  39 139  27  56 167 170
 187 103 124   4 118 198  99  17 138   5  46 131 197  13  14 108  82  15
  88  41  55 136 191  35  37 163 186 151  19 106 174 111  74  52 143 146
 112 119 159  97  11 166  25  80   3  28 171  59  57   6 180  22 156 157
 110  83  85  76 181 150 130  60  63  43 194 113  93  12  29 176 120  23
 122 172 127 173  44 168 169  33  48  21 101 107  70  69 175 195 137 152
  36 114  66   9   2  73  77 185 132 125  84  65  96 162  26 121 117  79
  61  53  58 115  32  50 128   1 116   8 135  91  95 164   0 129 183  98
 145  10  16  38 192  40 141 147 178 133 126  30  68  51  87 177  34  89
 189 165 149  67 102 134 155 154  78  24  47 144  72 158  71 161 109 193
 179]
[ 25 116  18 174 172  53 192   3  68  60  56   0   7 178  99  87  51 165
  75  47  21  42 113  57 161 150  32 183 120  98 189 193  88 107  13 101
   6 105  74  15  44  92  39  67 168 191 196 176  29 115 169 125  62  20
  89  24 142 128  77 133  59 135 198  12  43  22 138  94  70 119 126 123
  73  93 171  17 145 156  91  83  27 155  81  71 118 109 114 108 106   1
 134  35 175   8  65 186  63 121 147 130  82  49 159  10  95  14  23  40
  85 129  45  36  55  34  69 146  90 136 194  46 152 157   9  66  86  50
 185 153 140   2  61 110  19 141 127  80 181 148 166 149 100 182  28 160
   5 197 163  30 111 102  58  11   4  72  37 187 158 143 144  41  33 162
 154  31 137 173  78 190  54 124 117 103 104 122 112 179  97  84 177 151
  16  64  26 167 170  52  96 188 131  79 180 132 164 184 195 139  76  48
  38]
[161  54 196 168 138 129 118 152 124 185 147  75  34   7   8  37  62  22
  67  74  21  57  41 100 134  87 154 105 153  88   3 198 167 159 186 174
  28 121 175  32 157  50  99   2  79 142 116  17 113 137 164 140  61 106
  71 131  63 120  49 136  91  92 143 110  31 107 111  65 156  24 187 144
  93 130 101 104 119   6  40  69  45 182  53 165  11  64  33  10   1 170
 193  39 108  38  14 176  82  12 150 139 125  84 149 148 158  90 189  51
 115 117  42 172  36 155  27  72 183 184 173  98 132 192 141  44  15 178
 109 166  30 103 190  43  46  86  73  80  78 133  25 145  60 194  83 146
 160  68 195  59 180  77  58  13  76  48  16  89  85 114 169 163 122  18
   9  95   4 177 123  52 171  29  47   0  81  97   5 181 179 127  56 162
 112 102 188  20  23 197  55  35 135 126  66  26  96  19 151  94 191 128
  70]
[132 114  26 173 103 130 165  75  72   1 186 144  84  96  86 175 192 124
 178  24  47 101 143 179  44  73  76  83 157  82   7  92  52  30 145 110
  11  22 122  64 172  70  71 190  81 154  91  77  43  85  48  18  99  19
  16  55  58  93  20  95   5 134 182 188 162 170  31 180 139  49 116 138
 151   2 156 128 169  23   0  29  39  88  38  33 187  89 181 176  90 102
 160 111  17 119 108 195  61 164  56 191  98  53 163  97 123  15 126 171
  51 149 193 140  40  80 147  13 184   6 121  37 115   4 118 152 117   9
  59 183 141 196  66 112  36  65 166 136 155  34  68  94 146  67 177 194
 120 109 100 168 198  62 104 158  74 148  87 161  42  78  41   3  79  46
  21 167 137  63 113  14 125  50  32  12 107  28 159  27 153   8  60  10
  25 197 174 129  45  69 127 105 150 185 189 142 133  57 135 106  54  35
 131]
[154 167 152 168 108 178  87  48  68 148 117 113   2 132 155  47  78 159
  76 137  39  88  70 190 135 158  89  92  61  28  82 196 189  11 131 130
  71  79  85 171 165  25 142  12 114   5   7 181 111 123  46 157  80 176
  23 164  37  69 194 103 125  62 112  49  35 127   1  16 163 162 175 101
 120   4   9  41 115  13  58  22  65  29   6  56  63 184 144  95  20 124
  21  98  53 188 185 128 160  97 150  74 134  14  15 187 104 122  51  60
 138  75  52  44  83 118 109 182 136  90 191  24 105   3 195  96  10  43
 179 153 139  50  73 180 133  36 174   8  91 172 146 141 110  42  72  57
 186  67  59 169 161  84  26   0 151 147 198  94 140 106 193 119  54 192
 100  86 156 116  30 170 183  55 129  17  77  34  27  31  32 121 107  19
  40 177  18  64  33  93 173  38 143 166  66 126 102 149 197  99  81  45
 145]
[121  36  29 145   5 142 105  44 196 169 148   8 128 130  84  23 182  89
  26 138 154 109 104  16  96 198  94 188 173 174  71  98  69  70 171 192
 157 175 134  59 194  51  38   9  37   6 118 155   7  34  11 180  45 141
  35 165 124   0  12 183  63 110 135 139  65 122 102 140  47  78  49  56
 184 112 120  54  17 126  21 159   2  57  88 167  77 161  95 144 166 152
 181  72  18 170  40  24 114 191  67 172  50 137 153 162  25 117  75  53
 132  82  46  91 151 160  41 115  64  19  52  76  62  31  55 116 147  99
  28 190 187 106  87   1  13  20  81  68  43 101 146  48  27 111 113 189
 195 143  15 149 179  66  86 197 100  61 133  83 163  33 129 185  22  90
  60  32 186 168 136 119  73   3 164 103 156 158  30  10 177 125  79  74
  80  85  39  97 123 131 178 193 150  92  58   4  42  14 107  93 127 108
 176]
[ 68  55  84 135  65  72 178  38 137  27  14  74 160  91  20  95 175 106
  45 133 174  78  69 113 163 129  88 149  46  52  13 170 130  25  66 140
  86  23  76 173 132 164 105 161 125  19  67  99 159 197 185  98  30  49
  33 190   5 198 147  42 152 166  97  48 109 136  18  43  40 179 195 134
 143  39 187 180   0  21 138 154  64 108  70 162 117  83  81  79   9  36
 126 171  77 124 141 183  82   4 114  62 116 101  12 192 131  54  35  26
 128  15  41 127 176  94  71  53 182  57  56  60 142  10  90  34 172 168
 110 188  24  73 145  96  17 150  22 156 107  93 118 151 193 189  85   3
  87  51  29  31 194 115 104  16 169  89 181 119  50 144 111 184 153  92
 123 155  44  58 146 122 165  80 186   2  59  75   8 157 158 121 100   7
  32  37 103  61 196 191 139  63 148   1 120  11   6 102 112 177  47 167
  28]
[ 76 108 184  73  26  12 186 133  10  74 111  33  11 118  52 187  87 166
 183  85 125  70 122  90 109  42  40 106 159 110  23 158 138  48 195  86
   9  17  34  25 147 174  59 112 148  20  44  63  16 185  41 135 163 190
  88  32  24  97  62 170 120  78  51 178 139  94  72 131 101 104  56  57
 198  19 192  93 145 165 155 191 160  77  83 128 196 103  80 146  64   6
  45  30 143 162 140 132 182  67 116 126 142  68  36  60 181 124  29   8
 105   5 156  49 189  66 173 157  61 115 152 117  31  13 149 114 153  54
 171   0 107 141 164  79  35  50  15 180 154 169 134 188   2  99   4  65
  28 121 113  75  18 102 150 193 119 127 168  58 100  22 167  55 161 177
  89  95  91  82  84  39 179  96  37  21  47  71  53 194 176  27  14   3
 197 175 123  46  81  92  98  38 130 137 144  43 172 151 136   1   7  69
 129]
Traceback (most recent call last):
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/zoo/signal_game/train.py", line 167, in <module>
    trainer.train(n_epochs=opts.n_epochs)  # default is 10
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/core/trainers.py", line 158, in train
    train_loss, train_rest = self.train_epoch()
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/core/trainers.py", line 132, in train_epoch
    for batch in self.train_data:
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/zoo/signal_game/sgdata.py", line 64, in __next__
    dimension[[where_max, max_idx]] = dimension[[max_idx, where_max]]
IndexError: index 199 is out of bounds for axis 0 with size 199
➜  EGG git:(master) ✗ sh start_signal_game.sh




----------------train
train data: <class 'egg.zoo.signal_game.sgdata.OneHotLoader'>
[128   5 124  66  44  72 179  12  61  70 187 133 156 158 138   4 143  92
  15  31   8  68 141 186  62 193 154  48 197 132  91   3  28 153  18 116
  10 195  24 146  96  77   6 170 162 164 168 119   2 136 113  51 192  46
  50  47 111  13  82  17 145  87 114  56  75 118 155  40  97  69 190  73
  76 165  23  65  20 142 181 125 140 163 104 148  58  33  78 131  25 147
 100 122 160  94 103   0  84 121 185 189 159  22 107  54  14  39 127 110
  83 171 175  85 108 101  37  89  41 123   9  43  95  11 188 152  93  34
 180  38  42  90  80 139 184  86  16  29 144 150  26 169   1 196 161 151
 130  35  64 172  71  67 102  63  52  57 183  98  53 109 178  88 134  27
  19  99 174 173 117 126 167  60  30   7 105 157 120 137 106 191  59 182
 177  74  55 198 166  49 115 149  45  79  21 176 194  81  32 129 112  36
 135]
[154  86 174 126 151 107  62 175 191 152  55  90  97 157 119 189  13 176
  65 184  50 108  33 141 140 166  94  63  24 138 100  89  53  52 135  98
  99   1  59 102  76  27 123 180 113  71 155 142 168  54  47  23   2 179
  60 156   9 177  73  78 161 111 136  49 128 190 137 192  39  70 153  88
 187  95 149  57  68  51   5  67 197   6   7 125 114  75 122 106 193 101
 132 143  12  45 183  34 198 124 164 170  36  17   8  58  85  15 148  11
  69  43 182 163  35 133  96 121  37 105 194  44 116  46 117 159 109 150
 146 112  28  87 185 103  29  32  42  30  14  72  18 178  64 129 160 115
 195  26 131 147  31 196  16 139  48  77  82 188 173 162 169  66  93  91
   3  56  79 127  38   4 165 120 171  74 186 158  81  19 118  41 134 145
 110  10  21  22  40 130 167 172  25 181  61  84 104  80 144  83  92  20
   0]
[123   3   4 126 127  22 144  27  55  50 141  61 145 135  76 164  16 129
 117  67  19  69 184 160 114  39  44 154 107  12  87  48  85  64 162 121
  63 151  42  32  11 128 196 118 157  13  30  14  31 149  68 103 130 116
 124 193  79  26 171 163 197 112 108  18  94  46  80 176 182 115 125 161
 111   6  77 175  89   8 100  49  90 156 134  82 179 119 104 159  35 190
  65  38 169 183 105 153   7  33 191  36  88  96  97 170 177  66  45 148
 192 180 101 187  59  54 198 189   0  99  62 106  47  34  17 140  91  95
  21 167 146  92 188 158   9  81  73  28  70  53  83  74  93 102 139 142
 174 178 168  29   1  58 136 120  15  72 186 194  75 155 185 109 131 172
 113  56 165  78 110   2  71  51 137  20  52  37 143 138  98  86  25  57
 152 132  41 195  43  24 122 133  84  60 173  40   5 147  23 150 181  10
 166]
[181 144  96 122 194  20 131  13  11  81  67  52   1 146 100   8  49 132
  40 195 151  74 184 197 182  10 165  94  72 155 161 167  80 186 135 134
  26 125 169 109 159 188 158  69  41 139 157 121 129 147 177  83  60 106
  76 143 160  62 101 198  85  64 136  53 190  91  61 113 119  50  31 108
 142  55 164 156 176  78 103   4 133  86 163  22 170 150 189 111 149  99
  43  57  27  32 114  88  44 112  14  87 115  68 124   6   0 128  98 187
 175  84 162  79  45  51 140 102  19 172 152  58  92  16 127 117  33 192
  75  66 185 118  28  70 141 126 174  17 148  25  15 180 130 171  73  35
 107  34 105   5 104 153  38 137  82  77  90  36  95   2  47  29 196  56
 173 168 191  63   3  46   7  24 154  71  54  23  21   9  89 138 145  30
  48  42 116  93  37 179  18 166 183 193  65  59  39 120  12 110  97 123
 178]
[ 58   8 107  46 108  19 148   7 198  89 197   9  66 184  84 102 155  62
 130  27  51 163  47  64  70 194 112  37  99 126 142   4 169  87  63 149
 180 145 132 188 127 161  85  55  39 100  93 166  65 171  24 117  75  11
  25  60  97 192 144  23 143  50 101  26 159  22 191  59  31  13 137  18
   0 167 140  71 164  30   6  81  38  29 181 152 135 122  82  69  74 109
 172 134 131  49 157 121  44  67 111  91 176 118  72 162 174  21 119   2
  83 123  40  88  12  95 154 110  78  56 104  61  79  32 165 115 158   5
 105  33 195  35 173  92  53 138 139 125  54 136  10 189 147  68  80 168
 170 175  52 141  43  14 190 106 103 179 182  96 128  34  86 133 146 120
  41  42 183 124  48  16 185   3 186 129  57 114 156  20 196  90  73  76
  28 177  17  77 178  15  94 160 151  98 113 116  36 193 150 153 187   1
  45]
[ 41 126  98 110 183 188  15  42 104 167 141 118 198  91 103 113  95 178
  61 148  99 145 127 125  75  78  43 107 194  37  82   2 155  80  35  14
  54  53 124  52   3 163 192   7  55  93  48 168 133   8 186  57  38 162
  50 120   0  63  58  94  97 123 173 187 139  86  85 174  32  26  34 179
 137 180  56  88  19  87 102  68 190 132  45  66 185 169 144 101 138 191
 142  51 153 106  44 100  69 130 160 151  30  11  27   9  90 189 172 140
 121  39 193 105  70  74  89  25 182 117 143 112 109  22 152   5  16  49
 149  23  92 136 161 164 170 146 159  20 119 116  21  65 171 111 131  31
   1 108  28 195  96  29 134  13 157  76 150 156 135  84 166  73  64  10
 175  46  17 122 177 158  62 154  24 196 114 181   6   4 128  83 165 176
  60  59  72  36 115  81 184  71  12  67  79 197  18  47 129  40  33  77
 147]
[ 30  12  97 167 117  36  13 136  70 155 175  81 159   0 196  20  71 105
  33  38  23 184 148 119 172  65 165  19 133  89  58  94  80  66  27 192
  95 193 153 186  40 112 143  32 129   5   6  14  56  16 156 195  55  46
  82 111 132  15 158 174 187 126 149 102 185 107 142 197  77  67 147  76
  87  39  42  49 124  54 162 139  31 160 181 109  75 123 145  37  29  79
  28 134 171  93  21  43  88 198  86   7  83 188 194  24  74 144  41   2
  63  90  85 191  48 173  10 161 101 168 176 190 135  35  51   9  45  73
 138  91  99  57 137 178 169 114  44  68 131   8 151 110  62  50  69 104
 108 103 140  92  53 141  52  34  61 146 120 164 183 163 189  64  17  98
  78 127 170 166   4  11  60 121 130 100 157 128  26 152  47   1  72  25
 113  22   3 118 182  84 106  18 179 125  96 115 177 122  59 116 150 180
 154]
[ 44  55  30 144  78 165 196 189 171 179  54 194   3 157 104 129   8  17
 173 145 178  66  74  77 146  83 181 103  95 176 186  93  88  70  35 134
 120 148  46 115   4 180  14 174  79 133 147  43 101 161 126   9 169 152
  18  51  56 113   6  45 187  76 166  40 184 163  75 198 190  69 119  81
 123 141 132  20 121  41  57 127  73 114  37 156  72  82 150 128  92  62
  15 142  86  23  31 107  89 135  94 183   2  47 140 111  12  11   0  39
 102  34 164 110  50  32  84 151 136 192   5 108  98  67  38  61  28  99
  19 193 153  13  68  36 106  52 182 155 109 130  49  71  97  26 175 188
  16 116 139 118   1 154  63 195  29 100  33 160 137  90 149  27  22 191
 159 167 117  64 158 168  25  53 138 112 105 143 197   7  85  42  59 122
 162 125  10 172  87 124  65 177  91  80  24 185  60  58 170  96  21  48
 131]
[137  47 165 122  40  11 161  36 193  90 187  14  52 174 109 113  39  20
  91 172  81  26  50 197  62 185   7  68 134  45 131 140  71 139  92 183
 182 154 184  54  59  31 169  51   6  70 181 179  76  27  23 164 168  93
 117  97 153 121  43 198  21  86  15  30 160  63 112 152 166  10 149 194
 126 102 171  73  35  53  60  65  98 157  48 120 119 125 135  87 105  94
 151  29 156 188 111  12  58 124  84 144 132 142  22 118  13 162 128 133
 127 159  64   0  79 115 191 195 180  19 175   5   9 103 186  66  44 130
 101  72  75 114  96 167 189 190 136 148 196  95   3 176 192 178 147 141
   2  16  74  17  89 138 146  88  32  67  80  83 129 163 110 108 170  37
 106  99  34  46 107 143  25  82  78  33 123  18  28  42 116   8 177  85
 150  49  56  55  69 158  24   1   4 145  57 173  38 104  61 100  41 155
  77]
[ 76  48 135  41 105 148 159  14  95  74  79 186 188 118  56  13   7  43
   0   1  46 171   9  53  85  25   6  28 122 109 172 192  80   5  87  73
 102  57 132 190   8 185  26 111 187  62 147 164 140  70  67  82  84  66
  35 177  20 168  16 116   4 110 123  61  21 176 134  47 198 156  10  19
 150 114  78  38  12 138 104  63 107 189 161  75  34  88 127 115  22 126
  91 166 146 144  98 128 179  37  31 175 155 129 174  15 197 167 195 178
   3  60   2  77  83  18 158  54  44 170  33 133  52 130 108  11 137 117
  81  24  89  94 154 196 121 169  64  97  99 193  65 191  50 165 100 131
 183 139 142  93  32  23  49 163 125 160 162  59 182  55 149  68  27 194
 113 145 157 180  58 184  39 103 173  29 141  17 101  92 119 106 136  45
  40  51 143 120  42 153 181 124  69  71  36  86  90  96  30 151 152  72
 112]
[ 15   9 148  17 152  61  83   7  12 196 179 166 108 178  40  63  39  77
 182 107  71 198  45 122   8 163  70  19  38  74 158 159 194 121  14 141
   0 142 131 195  36  10  11 129  62 103 120  20   2 123 165  26  42 126
 125  91 187 109 193 143 117 191  73 167 127  89 164   4 149  13 154   1
  80 151 192 174 113 155  55  93  35  29  75 180 160 112 137  54  99  85
 144 156 183 115  88  53 146  84  68  60 157 172 168 128 100 169  86 132
  56 105 184 130  18  87  23 111  49  46 135 124 101  82 140   5  44  27
 136  59 102  28  52 104 118 153 197 145 185 106 161   3 139 133 147  95
 181  92  58  76  31  43 150  50  78  79  98  81  65 114 170  69 162 134
  67  21  64  96 171  94 119 190 138  48  47  33  37 176 116  97 189  32
  24 188  51  30 110  22  41  16 186  66 175 177  57   6 173  25  72  90
  34]
[103 173 131  14  12  51 157 186 138   5  56  69  24  35  37 127  15  38
 146  45  50 148  60 144 106  44 102  34  97   7 177  89  20 118  52 109
 160 198 170 187  84  41 124 120  39 130 149 152 139  49  27 166 101 114
  48  83   1  23  54  77 161  91  19  36 104 192  79 156 137  33  17  21
 132  96  70 183   3 171 185 162 182 108  53  99  95 147 179 178 163 151
  61 145 105  90 117 115 180 175 174  22  13 107   9 188  86 194 119  55
 122 110  25 154 196 181  94   0  71  64 176 184 155  73  78 195  67 129
  92  43 136 169  74   2 141  29 123 153  80  98 168 128   4  75  40  72
 100  18  81 159  66 191 193  65  31 112  58  88  82  30 190 140 116  87
  63 113  68  47 197 150 133 134   8 121  93 165  62 125  59  16 167 135
 126  85 143 164  32 189  76  28  42  57 111   6  11 158  26  10 172  46
 142]
[ 43 185 121 173 168  64 191 117  91  57  31  14 163 100 184 179 175 157
  15  12 148 149  22  89  81 162 132 170  52 196  84 164 106  23 178 158
 120  80 109 129 134  11 136  93  20 124  99 187  17  83 145 192  30 108
 118 142 155   8 190  37 111 186   9 153 114  79 127  40 176  74 140  45
 138  10  95  13  90 156 197  82  35 126  70 146  67  24  58  65  55 101
 141 195   5  48  77 172 128  16 152 183  50  28 167 104   7  88 177  36
  68  25  21  98 194  49  66  34   1  60 103 137 189  26 188 181  71  18
 143  56 110 105  54  32 198 115 154  76 160  75  42 193  92 169  53  59
 144  39  62  41  94 161 102 135  44 125 130 150 107 166  78 131  85  69
   3 122 151  51  33 147 171 182  87  96  29  73  72   0 180 139 119   2
 116 112 113 165 159  27  38 133  86  63  47  97   6  46  61 174 123  19
   4]
[ 38  52 139  25 117  13 107  43  37 103  54 156   0  63  39 116  68 140
  26  78 111 115  56 174 130   5 178 110  74  34 129  45   2 125 148  32
  46  18 158  15 113  82 164 182 167  57 190  16  99 136 162  50  83 168
 122  36 187 166 180 142 133   9  17 155 170 141 126  85 176  27 127 160
  29  65  14 196  79  87 149  19  47  21  91 132 146 163 186  35 184 171
   4  59  84  51  76  95 124  58 194  53 192 189  69 143  92  55 134   8
 153  98  22  28 108   6 106  31 172  96  89  24 159 195 150 144  23  90
 131  72 157  48 112 135 102 161  10 179 118  88 185 147 114 119  61  75
 169  20 197 154 183  33 175  44 100  71  86  97   1 193 188  49  81 109
  77  62  80   3  93 128 123 120 151  94  73 177 198 101   7  11  60  30
 137  40  64  12 181 145  42 104  70 105  67  41 191 121 165 173 138  66
 152]
[174 156  24  64   2  77 128   1  18  40  38   7  75 137  28  33  34  81
  27 172 111  14 120  85  79 161 110   5  21 127  53  94 142  60 186  84
 132 179  29 189  97 103 180  49  51  66 183 117 164  37 134 153  72 138
 145  65 144  76 147  59 109 101 167  86 192 115 160 195 168 154 129 136
  23  25 112 100  22 157  88 125  96  43 152  80 190  78  98  69 130   8
 176  89  31 146  87  44 166  71 198   3 158 171  90 141 124 184 139 181
 151 107  50 196 106 122  82 119  74 162  17  30   4  70  10  42 121  99
 177  35  57  83 193  39 104  36 150  61 163  62  63 191 178  92 114  93
  20  16 143 140  95 187  46  41  58 155 108 169  48  12  26 173 126  73
  19 148 159 118  32 133  11 135 113 165 170  13   6  54  45  52  91  15
  55 188  47  68 185 149   0   9 182 175 105  67 123 197 116  56 194 131
 102]
[162 155 117 166  44 108 104 107 100   1  16 195  14  75  45 159 164 170
 187   7 126 125 181  79 177  52  18  84  66  41 163  90  35 102  36 121
 148  30 112 192  71 138 135 161  89 171 122   4 172 106  81 130  72  39
 145  60  15 149  63  59   8 182  97  56 186 103   9  70  20 196  11  58
   3  91  10 197 142 140  85 147 124  13  74  27  26 128 168 101  86   2
 134  37  87 165  76  94  69 144 194  49  93 174   6 193 116 137  99  31
  48  88  53 190 188 146 131 113 143 176 141  23 133  68  55 179 139  47
 156 185  80  21 123 167  28 154 119  12   0 169  95  24  64  78  17  34
 157  33  77  82  65  43  40  25 110 105 114 129 111 180 118  54 198   5
 150  98 109 178 189 160  29  73  92  19 153 120 136 151  51 173 152  46
 115  32  96  67  61  83  38  42 184  62  57 158 175 191  50 132 183 127
  22]
[195  80 167  96  95  62  31 130  12 132  90 103  77 127 153  19  66 105
  41  93 160   5  72  11  40 129 117 191 162 170 143 155 164  32 108  74
 110 172 198 120  21  14 122 138 174  89  37  69  18  61  42  26   8 188
  48  33  38   1  29  44 113  47 126  87  67 118 165  28 139  56  34 157
 158 175  53  15  65 179 196   4  78  82  94  86  35 100  73 171 104 131
 150  39 133 189  58  99 114   3 197 137 161 194  27  98 112  79 190 147
 145  92 192 123  63  50  16  25  64  45 124 116 159  84   9  52  57  70
 168  36 169 111   2  97  20 177  85  91  30  75  13 106 181 136 134 182
 184 140 183 146  43  54 115 152 148 151 135  71  51 109 144 180   0 141
 142 102 121  23 154  46  55 173 186 185   6  22 187 193 176  24  17   7
 163 166 119 149 128  60  49 178  83  10  68  59  88 125  76 107 156 101
  81]
[ 80  64  84 155  73 192  15  54  70  12  22  91 163 123 180 137  86  43
 119 162  42   2   8  88 187  36 161 179 164 139 165  11 176 135 186 157
 110  90 128 183  92  74  29 106  13 124 152 160 146  68  75 140 109 168
 103 171 174  83  79   0  65 145  99 149  77  46 118 144  55   7  38  62
   1 142  25  58 127  60 116  51 111 133 197  95  14 185 195  37 104  27
  20  28  50  18  66  34 173 198  72   6  48  30 151 154  32 121 143 166
 150 153 113 175 100  10 190 158  31  61 196  69   5 129  41 122 101 167
 182  16 172 181  26  44 191 147  45 188 108  81  67  47 134   9  33  40
 120 107 156 132  78  97  71  19  59 141  98  93  57 136 177  76 178  85
  89  49 112  17 184 189 114 125 194  87  23 131  24 170 117  52 138 169
 115  82  53  63  56  21  39  94 193 148  35 102   4 130 126   3 105 159
  96]
[137 139  60  94 176  91  99 133 192 113 147 173 104 164 162  21 132 142
 188  82 150 184 131 116  80 189  22 185  20  84  29 197  47 156  43 145
 103  93  15 121 198  67  16 166  61  13  57  79 107 123   1 179   0 172
  98  87 108 169  41 170  10  56  32   3 154 155  25  62  51  28  30 177
  44  64  18 127 109 175 171 129   8 194  37   6 178  34 181 158 167 153
  65 161  85 152  90  54  92 106  49 143 160 144 125 183  31  81 115  50
  95 151 119   2 182  86 114 136 120  75  77  63 100  72  14 128  33  27
 187 196 148  73  35  97 118 111  68 146   4 105  39 102  88  59  48 193
 141 190 110 126  19  74  45 191  17  46  38 112  11   5 186   7 159  26
  66  96  70  69 157   9  71  23 163 195 165 122  52  40 180 124  12 101
 135 130  58 134 117 140  36  42 138  76  55  53  24 149  78  89  83 168
 174]
[120 175  81  54 166  45   3 179  13 193 104 192  66  72 163  29  58 115
  35 127 116 109 101  40  88  37  64  61 129 117  79 138 172 196  18  20
 134 197  49 184 154 165 177 142  19  17 118 164 150  60 119 124 169  80
  43  85   5  89 188  32 198 131  90  57 156   1  75  16  67 128  34  26
  28 141 125  77  14 180  92 135 139 159  86  42  12  78  36  30  95 122
 181 107 102  70  76 121 187  10  62 147 137 108 114   9 158  31 157 146
 126 103  47 148 132 191 174  56 176  98 152  41 112  55  46 170 144  84
  73 145  63 185  24  21 149 153  69  93  25 160 194 130  53 161  23 183
  65 110  39   4 133  22  50  91   0 140  99  51   7 162  27  48 113 190
  38 182  59  44  52 151 105 167  94 143 100 106 178  11 186  71  96   8
 173   6  15 195 136 111 189   2  33 171  87  68  97  74 168 123  82  83
 155]
[ 89  99  69  58 127  28 125 105  38  95 194 180  83  19  88 154 148  25
   0 140  85  77  51 114  15 178  96  11 159  56 151 182  26  20 179  14
 162  79  80 189  57  46  27 111  37   8 138 173  73 171 133  70   9 126
 181 107 147  98 109 104 160 134  42  32  21  31 165 172  67 164  12  30
  47 130 137 139 128 169 152  75  76 187  91  10  22  18  24 158 150  41
 132 185  90  45  60 129 116 168  62 145 196 113  74 157 115  78 184  36
  13   2 106 101 121  17  16 176  81  86  71   7 141  84  43 186 136 110
  72 131  52 146   6  68 183 191  61   4 119  82  53 143   5   3  35 174
 193 117  64  23  55  54 100 192  66 175  34 188 161 167 102 142 144  59
  29  87  93 149 112  50 135 124 166 170 123  44 163   1 155 122 120  97
  39 103 177 198  49  63  48  94 153 195 156  33 190  92 197 108  65 118
  40]
[106 175  37  72  86  28 170  24  32  88 159 198 152  13 160 188  15  59
 145  35   2   8 149 146 178 120  55  87  94  85 109 113 181 147 169  23
 163  63  79 134  31 176 137 126 130 157  96  89 187  62  80  61 121  43
 142 168 128  18  78  45   1 154   9 171 119   3 165  65 150  21  48  98
  66 140  16 107 112 103 162 135 193 177  14 189 117   0  36 167  40  77
  73  44  81 182  29 114   6  75  70 125 151   5  10 127   7 158 139 124
 161  49 196  99 180 190 104  12 153 144  50   4 122  92  41  22  47 141
 105  74 118 174  11 173 164  76  67 186 138 148  83  42  90 115  84 195
 194 156 132 197 102  27  60  52  54  93  26 155  38 166  68  51 133  82
 111 172  91 110 185  30 179  34  53  39 123  97 143  58  64  71  19 131
  69  20  46  17 184 183  25 101 136 129  95  57  56 191 100 192 116 108
  33]
[141  51  69  21  47   7 103 181  53  65  80   4  94   8 154 146  86 195
  27 192  26  76  18 144 114 176 197  43 182 120  54 162  13 101 169 136
 124  56 137 174  25 107 123  45 156 180 167  73  48 143  41  39   9   0
 126 165  30  57  36 163 157 125  52 147 116  74  28 119  33  34 196 118
 138 166  95 164 112  49 160  66  22   2  58  79  46 113 100  96 183  75
 130  92  35  38 108  59  40 170 129  12  42 155  99 173 159 115  37  32
 142   1  84  64  23  85  63  81 127  31 168  44 193  24 149  55  50  88
 178   5  68  14 148  17 106  97  20  87  77 111 179  72  82  78 188  67
 122 128 109 104  15 191 153 117  60 185 190 145 121 135 132  11 139  62
   6  19 189  90 105 187  61 110 158  70 102 171  91 177 161 175  89 184
  98  29 134  93  71 172 151 194 186   3 133 198 150  83  10 140 131  16
 152]
[ 87 163  74  67 104  22  21 134   4 185 133 183  57 171  24  44 141 161
 175 160 148 176  43 184  19  35  86  56  31  18   8  46 187  55 107 110
  64 131  49  93 138 137  71 108  54 169   1  11 197 158   0 112  84 128
  88  66 149  34  89 120  99 182  17 151 172 127 196  30  45  51 179   7
  65 144 157 142  59 109 103 140 180 119 105  41 143  76 106  61  50  40
   6  42 198  14 194 156 165   3  68  62 146 139 173  90  81  29 102  96
  69 130  94 170  12 145 191 159  15  53  97 147 164 115 153  16 132  92
  36 189  48  23 188  20  63 150  70 167 117  58  91  27 118 154 135 190
 124   9 178 123 114 181  98  28  95  47   5 121 195  52 100  79 168 155
 166  82 101  75 136 152 113  72 174  60  73  13 193  80  37 125  38  78
  77 162   2 186 177  32  83  33 129  25  26 116  85 122 192  39 126 111
  10]
[141  14   0 107 171  94   9  23 176 164 153 182 133  20  30  82 165 178
  69 191 120 159 186  73 198  44  90  83 110 142  81 112 195  41 139  68
 170 101  46 174  24  49 122  80 192  31  39  56 151  87 113  93 128 152
 172  96   3  42 140  29 138 179 136  91 131  55  62  11 135  22  64 184
 134 158 109   1  19 188 108 132 102   7 130 167 129  70  28  35 115 154
 194  15  52 173  25 123  86  21  74 144 177 169 180  38  27 121   5 168
  26 118   2 146  33 196  59 166 126  88 190  60  95 124 119  51  40  32
  13 183  77  89 160  50 187 111  54  48 114  66 106  47 197 149  92  99
 181  98 147  53  10   4 162 163 150 175 104  75   6  63 156  67  85 103
  43 185 105 193  16  97  84  12  17 189  36 125 117 127 148  76 143 116
  61 161 137  18 155  58 145  72   8  78  37  57  71  45  65 100  79  34
 157]
[ 59 181 151  88 190 197 152   7 177 117  33  66 106  34  50  87 110  27
 125 134  60 161 101 120 119  89 141 128 168 114  71  67 186  63  81 154
 145  56  53  79  61 148 118 159  45  17  19 105 169 157  41 167  75   3
 179 183 100 175  39 155  98  83 182  30 115  38 178 104  94  97  15 130
  85 164 188 162  24 160 196  22  48  99 176 122 163  13 174 170 107 140
  26 146 123 113 153  29 185   1 136  49 111  54  12 127  32  42 192   8
  91 108 138  82  43   9  23 194 158  37  51 126 116   4 165  77  62   2
 135  44 193 109 173   0  93  58 195  90 184  46  21 139  73  72 131  35
 103  65  55 150 191  16 102  18  14  96 171 180  31  92  10 143 172   5
 144  95   6  20  84  52  47 142  11  76  80 156 137  25  57 129  68  78
  40 132  74  70 112 121 133  36 166  86 189  28  64 147 198 124 149 187
  69]
[ 38  54 118  51 189 167  69 198 126  90  31  50 121  84 125 100 145  78
  76  19 179 114  18  10  79  25  48  72  42  40  46  47  66 123 169  92
  93  56 158   3  41  30 192 155  27  20  15 163  87  17  62  53 191  68
 120   9 136  71  43   2  32  89 137  73 124 104 190 165  99 102 144 127
 180 178  11 186  64  28  52 141 107  88 135 176  98  29  12  80  74  67
 162  83 130 183 170 195 116  97 152   7   0 160 146 174  96 154 150  23
  63  85 103  95 194  58 156   8 140  70   4 132 147  82 111 134 122  14
  91 182 157 110 139 151 184  59  61  22   6 185 175 112  77 129 138  65
  34  24 168 161 142 128 187 106 181  39 133 172 188 197 171 113  60  45
 164 143  37 101  26 177   5  36  16 117 153  86  49  55  44 131  35 166
 109  81 173 196  13  57 148 108 115 159  33  94 149 193 119  21  75 105
   1]
[ 64  32   7 119 188  92 138 116  59 177 122 135 184   8  47  52 114 156
 176  80 164  30   1 128  96 153  31  13 173 185  89  61  66  54  97  12
  43 127  62 154  21  56  41 118  83 136  40  24  33 121  78 180 144 133
 149 197 120 193  63 117 155  50 191 113 186 181 148  71 162  85  70  25
  81  75  84 165 131 157 159  91   4  23  16 109 169  29 152  10  51 110
   6 126 111 106  17  37  20 161 183 179 168  77 147 172   9  22   3 187
 167 160 189 143  34  18  74 108  53  42  44 192 166 150 132 123  46  99
 151 178  93 174 198  55 194  57 163  94 100 101 105 115  27  15  35  65
  98  60  72  38  45 145  36 139  73  67 102 107  76  19 171  11  79  28
  87 175  68 125 182 140 158 104 190  88  14 129   0  26  95 134  82 195
 196 112  49 103   5 124  58  86 146 141 142   2 170  69 130  48  39  90
 137]
[ 36 148 146 196 143 178  42 169  80 187  60  67 122 170 133  41 115 176
 132  96 150 189 149   7   3 155 145  85  91 126 179 160  83  48  70  16
 110 137  33 124  82 142 174 136  25  68  57 156  74 127 105  53  63 181
  65  69  71 103 112 173 167 185 193 186 144  66 151  20  89  54 138  34
  90  15  47 165 184  97  11 180 114  51   9  86 182  24 131  99 175  30
  14   8  17 168  39 194 154  43 195  22  77 106  46 107 158 102 116 152
   1  44   0  37  26 128 100 139  78 121  72  29  59  13  81  61  88  28
  76 147 141 113 130 197  75  87 166  64   2 134  94  19 125   6 120  84
  23 162  55  27  18 159   5 140 123  32  21  52 129 153 177 163 157 117
 119  73 171 172 108   4 188 104  93 109  31 192 198  50  98  10 190  79
  38 161  92  40  95 101 111  45  35 118 183 135  12 191  49  62  56 164
  58]
[172 106  25 164 176  32  95 111  11 146  18 162 193 118  24 163  66  89
  15  26 158 148 126 182 196   3  88 150  22  91 120 155 177 124 145  62
  51 128  58  65 129  36  75  92   7  42 140 117 198 171   4 125  29 116
 157 149  98 119 108  85 187   1 132  14 160  72 114   9 131 104  39 147
  96  78 136  63  61 186  84  81 169 188 181 100  34 134 154 127 159  37
  49  35 168 137 144 152 122  47 165 194  30 105  50  53  13 191  21  43
  54 101  20 170  64 135 110  87 179 143  94  67  90 156 192 180  83  45
   6 185  74 178  38  55 112 142 123 175 184  80  16  23 109 197  19 174
 133 102  93  71 167 151 153 166  59  69  86 141  76  40 138 173  27  48
 139  79 189 103  73  77  28  10 121  12   8 183 190  60  56  44  46  82
  52 113  31 115  41 107  99  57  68 195  33  97   0   5  17  70 161 130
   2]
[102  32 132  45 148 196 136  61  41 182  62  35  59  64  89 117  55 165
 120 164  65 190 185 152  25  58  73  31  24 160  39  18 123  36  75 121
  98 176  51 101 105  13 178  28 125 198  91  57  87 153  92 122 171 141
  63  23  82  54  29 195 143 119  22  66  43 166   1  88 151 179 131  81
   3 108  49  76  46   7 103  50   0  86 139  56  34 135  78   4 169 107
 172 197  26 127 150  19 155  11 100   5 133 187  17  79 111  74  16  72
 147 192 116 115  68  42 109  30 112 163 104  53 134 189  33 167  93 118
  20 154  99 142 188 181 158  10 145 183   8 184 114 159  70  90 174  95
  47  40  80  48  38 170 138 113 157 168  37 191 144 146 161 130 126 106
 186 194 156 128  69 175 140 180 110   6  44  52 149   2  77  12 129  71
  83  96 162  21  15   9  97  67  84 124  27  14  60 173  85 137  94 193
 177]
[133 193 190  38  64 198  55  14 106 169 146 130 175  96  20 149  78  81
  88  54 126  16 112  48  18 164  92  87 131  23   4  69 119 105  58  43
   0 129 183  84  19   6 154   8  44 194  61   2 143  76 147 136 127  46
 158 170  97 104  13 123  99 120 159 184  34  73 124 187  67 101 173  51
 180  62 115  47 139 179 132 197  45  33 188  17  24  29 103   1 172 116
  71  90  59 107 145  80  77   3  52  75 161 142 165 195 152 155   7  98
  31 125 144 181  28  32 117 114  94 122   5 157 196 192 189 138 185 174
 134 118   9 137  79 177  10  95  39 140 113 111 166  72 160  36  65 168
  49  57  42  50  12 176  30  25  83 186 153  63  21  26  37 163  93  53
  86  35  22  82  40 178 151  68  70 135 102  27 141 108 100 150 148  60
 167  85 162 109  56  74  91  89  66 182 171 121  41  11 128 156 110  15
 191]
[122  29 155  76 160  93  80 198  50 151  61  14 128   6 189  10 111  81
  87  44 170  66  35  60  68 133  38 153   9 178 127 184   5 166 197 135
 181  28 108  17  11  99  88  85  79  84  83 131 100  71 101  98  22 148
 144  94 124  27 163  51 194   4 183  73  34 186  97  25 105  56  70  23
  64 103  41 145  19 164  91 191  95 159 123 130 169 117 143 104 142  31
  96  16  45  63  74 112  67  89 168  58 120  54 185 107 177 146 196  72
 176  30  20 119 180  57  43 102  21  78 121  55 132  32 192 158 174 156
 154 161  40 152 171  75 129  62  13 134  12 179  36 116  90  46 162  47
  86  42  77 173  15  26 114   0  48   7   1  82  39 141  24 150 140 109
  33   2 193  59  65 115 139  69 175 110 138   3 118 125 137 190  18 113
  37  92 149  53 157 147 167 136 187 188 172  49 195 126   8 165  52 182
 106]
[122 108  77  30  28   6  41 142   5  89 164 111 148 154 152 157 153 186
 197   4 177  50 125 150 194  23 158 196 140  22  52  55 176 185 181  11
 144 178 180  86   8  63  70  62  78  88 145 162  95 129  48  54 127 139
  12 118 169  43  18  71 103 179 143 124 172 159  46   7  97 198 190 173
  90 134  91 123  44  58  60  17  85  57 110 135  25 193 120  75  24  14
 107 191  16   3  87 167 104  96  37  56 116  99 184 146  49  61   2 119
 187   1 100 137 168   0 138 121  20 132  13 155 113 166 192 102  29  84
  68 130  72  92 149  64  80 156 183 195 163  93  21 171  27  82  35  38
  33  32   9 174  69 136 133  10  94 182  34 160 131  15  51 170  83 117
  53  65 106 109 141  26  98  45 189 161  66 126  76 151 112  36  31  81
  67  42 114 165  59  47 147  79  40 105  39 188  74 175  73 101 115 128
  19]
[  6   0 146 167 165 105 190 101  87  46   2 162  44 184 178 120  17  78
  54 168 176  11  71 102  62  35  22 198  96  89 196  94 169 185  21 164
  70 123  92 109 191  57  32 181 188  12 134 106 187 166  85  61 107   8
  67 153  59  65  48 150  33   4  29 174 135  18  73 130  69  55 137 128
 192  86  30 197  82  27 143 145 100 103  36 115  74  79 110 117 132 133
  28  88  31 144 183 157  53 171 112  98 136 151 111 119 142 159  64  10
 118  66  60  84 127  95 156  58  56 149  15 175 186  25  81  37  76 116
   1  52  16 163 140  38  75 180  83  51  63  24  77  97  26   5 108 161
 124 113 148 173 194 155  99 129 114 172  90  40 139  72 131  20 177 141
  43  19  39  34 193 154 121  50 138 125 189  91  45 160  14  68 126 170
  23  47 195 122 158 182 147 179  93   3  41  80 152  42   9  49  13 104
   7]
[154   0  65  94  51 156 135 182   8 141  16 150 101 140 196 193 134  35
  31 100  18 170  87  77 111  67 153 183  25  82  76 159 104 160  72  88
  21 143  33  56 142 167  27 139 120 180  12 115  49 125  28 190   3 189
 147  70 106  43 198 157  99  61 188 195  55 172 163 166  83 123  52  48
   9   2 130  74 174 102  17  85 169  89 187  60  26  23  15 133  10   1
 124  45  95 107  22  69  63 103  75 175  54 136  24 138 128  11 179 145
 177 165  58  78  44 151  90 119 121 108 161 110 197  34 126  14 114 148
 178  42  50  38 152  59  97  20  37 112 122 158   6  91  80   5  64  96
  40  73  68  86  39 191  41 176   7  92 132  13 116 129  19 149  36 162
 118  30 117 171  79 173 127 181  46 113  84 155 105 131 186  66  62  53
 194  29  93 137 164 146 185  32 168 109  47   4 184  81 192  71  57  98
 144]
[ 58 114  13 121  15  26 194  30 196 158 174   4  81 106 165  18  65 163
 128 153  45  62  89 161 198  19  53  32  68 131 137 104 117 186 112  49
  33 101 185  28  40 145  75  21   6 191   0  37 178  29  36  44 130 126
  92  74 152  66  41  27   7  94  96 168 197  85  48  31 144 129 113 138
 172  14 148 177  70  46  25 102 136  10  88 179 124  90 139 133 116 154
  98  34 173  56  95  50  73  63 150 175  91 190 123   8 120 132  38 143
  17 110 157   3  97   2 159  42 193 195  84  12  86  55 155   1  51  71
  79 118  59  24 109 162 171 141  54  64 176  93  76 119   5  78 108  47
  35  43  61  99 115  80 170  11  22 166 105 188 160  20 192 156 100 184
  69  83  23 167 135  39 146  52 189 181  77 111 122 147 107  57 169  67
  60 134 127 142 182 103  72 187  87 140 125 180   9  82 151  16 183 149
 164]
[ 13 191  27 192  19  12 184 154 155   4 126 140  76  62  83  81  45  28
  67 190 179  64 181  77  56  65  91 137 158  57   9 115 111  10 112  61
 168  39 174 195 176  22 182  33 121  16 150 120  23 164  38 142 196 178
  50 139 125   1  60 107 130  58  24  93 187  48  20 161   7 135 148  11
  72 169 197 167  40  37  31  88  70  96  89 193 138 186  29   5 123  79
 153 163 194 100 162 114  95  36 143 152 144  15 183  25  47  78  41 108
 171 198   0 141  69 166  14   2  68  21 151 147  87 102 160 119  90  73
 122  80 156 165  18 149  66 145  51  71 133 188  42  84  99 159  44  59
 129  52 117  30  34  46  63  92  43 103 105  82 146 132 124 189 172 110
   6 134  17 180 106  85  86  54 128  26  97 185 127 136   8  32  98 109
  94  75   3 101  74 173 157 175 131  35 177 118 104  53 116  49  55 170
 113]
[109 136  17  24  55  76 154 198  86 185 110 108  66 181  85 157   7  94
  95 175   1  19 153 127  87 166  72  98 176  13 189   4 165 146 174  71
 177 195  35 118 114 137 148 159 173 132  77 197 169 143  96  51  90 140
  31 122  67  18  48 115 158   6  65 113  69 106  59 135  88 171  83 191
 141 144 142 131 117 172 145   8  54 168 139 161  38  42   2 101  32 102
   9  22 138  62 184  75 192 188 116 130  12 119 180 125  61 152  80 123
   3  73  93  97  84  40  78  33 196  44 155  56 164  26  21  70  52 178
 133  15  63 193  68 167 149 128  57 160 126  45  79  91 163 151  47  53
 183  37 186  14 190  92  46  82  41  50 105 111  39  64 120  29  99  16
  10  60  58  49  34  11 129 182 104 103  81   5  30  28  89 134 100  23
 170  27 156  36 147 194 162 107  25  20 121 187 179 150  43   0 124 112
  74]
[ 47 116  93  46  70  67 106 124 174  19  65  87  80  97 143 171  85 178
 105 126 107 101  29 158 128 102  76 142  81 181  15 192 179 162  56 111
  82  77  33  42 175 169 196 155 156  12 160  71  20  11  84 193  34 135
 133  78 145  25 113 118  50  96 184 125  69  68  41 195 146   7  13 132
   6 183  95  49  92  91 157 165  22  60 190  23 121 127 166 129  99 117
  79  75 114   1   9 112 187  66 188  26  62  53   8  48  54 110 103   0
 173  63   3 140  43 137 168 176  89  40  28 167 170 144  38 197 180   4
 147 177 123 185  90 182  45  51 104 153 152 115 138  30 154 172  73   2
 148  14  83 191  21  52 134 119  39  88   5  98  61 161 163  36 164 194
 136 120  18  31 186 100  27 108  10 109  57 149  37  16 139 159 130 198
 141  44  72  32 150  94  64 189 122 131  59  24  86  55  58 151  74  17
  35]
[174  10 154  73   3 161 170  85 114  90 110  69 153 144  28  82 118 173
  43 107  98  91 196  13 119 143  26 180 187 195  96  66   2  50 129  25
  92 177  39 168  18 126 169 193  56  76  80  41  79  21 183 137  70 122
  30 150  47  35  59 159 106  38   4  52 152  58  40 105   5  55  86 130
  68  93  46  94  84  65   1  42  81 165 197 198  44  37 176  71 190  11
 113  62  17 179  32 102 120  33 191  48  54 116 100  95 149 121 146 148
  14  61 185   6 109   8 192 101  99 124   7 178 160  49 140 156 134  29
  72 155 188  20 167  60  78  67 189 158  15  57 112  51 103   9 164  27
  12  36  34 171 135 136 141  87 131 142 138  19  74  89  77 182  16  24
  53 117 125 104 115 175 139  23  88 132 133 123 162  97 108   0 172 194
 151 127 184  75 147 163 166  64 128 111  31 181 186  45  83 157 145  63
  22]
[ 11  23  57 125  69 144 137 132 109 181 123 171 177  66 164  94  76 191
 163 178 154  20 141  35 128  47 127  21 148 159 180  46 187 155  83 192
  87  52 124 119  18   2 193 165 139  10   6  48  91 105  32  51 176 168
  28 183 138 182  95  49  74  44 197  38   5  78 158 134 157  65  61  55
 118 162  39 161  26 116 150  33  53 122  31 110  14 175   4 172 126  40
  79  43  36 115  59   8 152  27  45 156 167 186 174 184  24   0 111 113
  67 104 195  29  41  77 146 166 147 112  17  70  54  96  75 153 142  82
  92 173   7 189 133  90 106  62 103 190  97 130 169 102 160  86  73 108
 198  30  80  72  34  50  58  22 114  42 140  56  93  71 121  60 135  89
  63  16  15  68 188  99 120  98  84 107 100 149  37 194  25  88 179   1
 151   9 143  13 170  85   3 101  64 145 117  81  12 196  19 129 131 136
 185]
[165  23  37  54 109 121 112  16 119  89 160  28  22 133  78  87  38 197
  57 187 178   0  33 139  62 144 154  40 110 176 149  47 153  88 175  56
 123   1 196  34  74  43 141  31  39 181  32 147  75 120  66 113  42 140
 136 134  97  18  48 130  58 117   3  67 156 105  35  71 189 118  36 159
 163  20 184 182  45   5 158 186 180  86  11  72  21 135 104  59  80 185
  95 164 138  79   4   8  76   6 108 115 145  24 125 124 161 126  10 190
 111 172 100  94  52  14  65 162 114 179 102  49  91  93  68  41 171  12
 170 167 173 177  69  29 128 103 188 148 106  17 142 146 174 192 194 137
 143 131 107  55 191  98 195  61 198  15  92  99   9   2 132 127  19  82
 193  83  50  60  30  73  77  63  85 122 116 129 150 157  64 183  46  70
 101  25  13  51  90 169  27  84  81 152  53 168 151 166   7  96  26  44
 155]
[ 67 175 161  60  30 188 176  15 138 115 181  82  34  41 126 136 183  54
  85  48 149 163   1 191  57 110   0 130 157 123 128  65  44 107  12 124
  52  40  76  11   4  75  18 133  74  91 137 120 140  37 127  66 187 162
 106  92  83  13  33  62  97 135 141  31  16   2 194 169 189  80  95  42
 177 182  84 142 166  46 196 197  39  71 156  36 132 116  26  73  35  47
 193 117  78 155  56  64 153  88 139  90  28  87 180  45 131  43   3   6
  50 101 168 108   9 109  14  20  53   7  99 174  77 185 146 179  49  72
  68  86 151  89 102 184  55  94 111  63  32 112 113 104 195 122 145  27
  81  17 159 160  79  70 190 173  29 119 158 134 121  21  38   8  96 100
   5 170 165 144 150  58 152  23  25 143 147  61  93 125 178 148  19 172
 105  10  59  69 186  24 129 198  98 164  51 118  22 103 171 114 167 192
 154]
[ 31 185 193 174  29  42  57  30 169  32 106  20  14 110  89  19 126 164
 196  83 139  52 105 135  36 161 122 176  85  53  71  38   8  39 111  64
 157  47 189  34 180 109   7 188  76  94   3  88 149 156 171  59 107 190
 140  56 147  99 194 159 112 153  12  50 179  23 121 177  11   1   2 116
 101  63 152 131 100 132   9  27 166  91  13 103  67  17 186 145 102  75
 134  98   5  73  62 178  46  15 192 123 175  77  95 197  90  24  18 118
  69  92 119  68 143 154  25  96 158 184  51  74 167 127 172 136  78  61
  21 108 128  65 104 182 151 129  37  87 155  86 138  45 148  82  81   6
 150 195 173 141  35  43  58  72  10 198 124 168  70  22  33  54  93 115
  44  28 162  66 163  97  16  60   0 113 114  40  41  26  49 142 144 125
 165  80 146 130 133 117 137 181  84 120 191 160 187  79 183  55  48 170
   4]
[192  98  42  82 164  29  79 188  77  43  35 169  80  50 104 175  32 158
  59 126  63  12 135 170  21 106 181  92   4 173  51 118  28  67  89  85
 191 194 153 146  11 189  16  91  84 145 128  72 154  65  78  38  73   0
 168  47 115 150 171  30 134  81 136  26 176 122 143  87 108   5  71  44
 190 121  33  95 160 102  53 167  20  96  99 179 119  19 127 141  27  49
 184 137  61  56  74 114 149 131 142 180   7 107  41  15 140 117 109  68
  83 103 196  45  24  31 193  55  40 174 166  25 155 198  60  57 186 111
  39  93 165 112  52  37 162 185  90  36 172 183  17 123 178   1  75  54
 187  10  14  66 161 116  88 129  86 138  69 125 177  23 124  76   6 133
 151 101   8 130  70  94 110 120  22 182 113  13   2 105   9  97  34 132
 139  46  18 144 152  48  62 157 147 156 148 197   3  58 195 159 163  64
 100]
[ 61 137  72 144 155  70  51 161  38   8 152  73 143 122  15  26 109 117
  82 182  25 170 111 164  91  80 114 194   9  79  39 147  45  64  44  40
  53 183 186 101 116 188  90   5 158 148  94 195 141 125   0 190   6  75
   3 115 123  24  52 139  10  98  89  34  63 103 157  67  33 169  29 130
 187  68 193  48  41  58  66 189 121   4  22 177 140  93  16  55 104 173
  50  84  14  56 102 134 106 165  11 162 181  42  43 129 149  78  95  35
   7  49  46 180 132  60  71 107 100  97 196 167  20 172  17 150  99  86
 127  19  74 192 135 160 191 176  23 178 136  69  96 159 146  32 126  57
  54   2  87 168 113 133 145  31  12  21  65 179  83 105  30  37  76 171
  81  88  59 156 118 120 112  92 108 128  18 153 154 138 110 131 175  62
  13  47 184 185 198 163 142   1 174 124  27  36  85  28 151 119 197  77
 166]
[ 92  49  36  61  72  70 161  74  76  98 137 182 171 141  14  43  77  26
   8  53 147 109  80  21 145  71 143  65  15 116  96 117  37 160  78 146
  16 177 110 186 164  44 170 122  82 195 111 104   4 148  88  33 140 183
  90 152 120  11   2 125 150 135  25 169  29 181 101   7 155 139  20 103
 128 149 178  57  97   3  86 180  68  32 190 175 115 129 172 130  56 105
 173  31  69 157  67  75 184  41 191  79 119  66 188 194 113  89  95   9
 123 136 124 192  45  38  60  48 112 102 163  28 165  81 158 168  47  23
 162 153  94 151   5  13  87 166  30 142   6  39  22  24 144  99  34  12
  42   1 196 127  83  84  63  35  17 167  64 131 193 133 118 114 198  54
 108 189 121 134  93 154  85 176 187 156  51  58  62  19 185  40 107  73
 179  50 159  55 106  10  27  91 197 132 174 126  59 100 138  52   0  46
  18]
[105  55 155  94 185  35 118  58 191 171 130  10 104   6 177 176  24  52
   2 108  86 123  38 153 164 110  72 143 182 103  11 138  99   5  65 198
  42  57  76 132  21 157  74  17  96  15  68  92 180 165  43 188 136 107
  40 189  13  69 121   4 124 147 148 120 129  45 166 156 151  30 158  28
  97  14 109 149 162  81  73  79 111 160  63  95 125  53 194 134 102 179
   3  32 173  36 137 174 152 142 112  93  47 187 192 170   8  60  12 135
 169 113 119 117 128 139  56  23  59 141  83  29  91   1 154  71  22   9
  46 163 115  20  44  64  49 126  90  54 122  62  85  41 114 167 100  16
  75 140 168 106  51  61  88  78 184 172 133 183  67 190  98  50  48  31
  37   0 144  19   7  66  89  27  25 197  82 146 175 150 159  80 116  87
 178 193 131 161 186  18  39  34 101  26  33 196  84 145  70  77 195 127
 181]
[ 68 151  23 182  61 197 112  90 134 174  60  58 131  10  49  77  13 148
   6   5 141 143  48 155  88 133 163  92  57 183 113   3 120 187 193  65
 104  54 170 150 169 158  12 188 176  78   8  63  73 195  79  53 139 159
 110 172  97 118 138  47  51  87  86 145   2 181  80 100  15  40 157  76
 153  62  30 180  85 129   1 116 178 101 111 117  43 191 162  71  74  29
 114 130  95  94 194 171 167 103  32  17  44 196 140  93  22 166 126 177
  89 184 127  91 123 102 156  11  99  25 152   4  42 146  33  24  52  21
  70  66  59  45 109  69   9  41 119  64 154  46 186  50 179  27 149  98
 128  56 124 137 165  75 198  72 125  67 115 185 132  81 160 189  39 168
 136 161  31  36  16  20  26  35 192 147 107 164  83 142   7 135  18  14
 108  19 106 173 175  55  38  28   0  96 121  84  34 122 190 144  82 105
  37]
[ 99 113  70 163  14   7  82 198  22 150  80 142  48   0 114  17  19  43
  39  16 127 158 120   3 139 140 103 125 131 175 147 187 116  40 145  71
  24 107 111 124  15 181  97 151  45 184 192  55 130   2  31 102  29 148
  91 122  13  37  74 154 194 189 164 179 167  35   5 165  68 178 190  77
 177 132  66  34 123 101  10  23  41  11  90  52  42 173 108  57  87 110
 109   9 118  49 152  69 166  92  79  73  51 159 156 161 100  83  50 162
  94  88  93  98  63 172 137 174 186 112  60 143 193  25  62 160 155  20
 149   8 135  58 117 129 185  46 195 128  95 188 121 183 136  67  78 170
  76 191  64  21  28  81 126 138 197 106  18  54 105  84 169 196  86 104
  72 134  33 157   4 133  96  56  65  61 119  75 182  27  85 171 180 168
  44  26 115  47   6  59 176 153  53  89  12  38 141   1  30 144  32 146
  36]
[ 53  99 112  70 152  96 158   9 120  90 193  89  80  36  39 149 186  32
 148  79  88 156 122 196  66 125  68 160  44  74   6 169 137 178 142  16
  62  20 144  86 104  92  84 153  18  24 146 119   1 154  65  97 123   8
 172 133  49  58 180 110 159  42  40  54 189 184  76 138 147  98 143  55
 164  15 166 135 185  10 101 132 198 108  33 109  38  71   3 195   4  73
   7  85 192 131  91  14  63  34 115  61 113   0 117 128 173 168  93  25
  28 139  48  60 194 103 116  87  56  41  64 105  47  29 124 179  26 102
 177  75  35 182  81 187 188 126 118  72 183 136 171  95  46 197  51 127
  12 121 129 157 190  82 145 165  23 176  30   2 114 151 175  94 130 134
  21  67  31 161 107  45 106  37  77 163 167  13  50 191 155 174  17  43
 181  19  69  11 162  27  78  83 140  52 141 170   5  57  22 150 100  59
 111]
[181  65 146  15 112  21  18 179  77  86  31 196  80 149  72 123 198  24
  39  79 130 107 192 137  81 140 152 104 195  40 168  61  93 193  99  92
  49 135 160 157   1 108  35 163 180 185 177 170  12 174  64  34 151 173
  19 153 164 165   2  50 155 118  32  48   7  54 145   8  57  27   6   3
  88 128 167 110 116 194 162  60 166  94 100 143 120  33 187  78 176  68
  22   0 114  75 129 134 115 113  37 148 139 189 136 109   5  20  14  41
 124   9  38  23  51  42 141 190 125 172 175  29 121 171  44  70  52 106
 191 127  11  67  43 158  13  85  82 184 159 138 156 169  58 144 131  69
 101  83 147 111  97  59 186  55  96  71  63 178  66 142 154 197  84  62
 126  46 161  73  74  17  90  89 133  28  98 119 105  95  25  87  47  26
 122 150  30  56  10 183  76  36 103 182  45  91  53 117 188  16   4 132
 102]
[ 66  71  99  53  94 105  90  65 162 145   3  16  92   6   8 195 134 171
  28  85   7  45 169 184  15  51  43  49  95 185  26  48 128 111 114 192
 196  24 142  60  75  29  89  76 115  37 135  58 146  73 182 118 150 187
  27  20  25 101 122  33  46 140 173 130  87  91  47  56 156  82  68 110
  32  70  12   1  39 106  67 191  69   0  62  17  50 186 127  81  10  59
  63 168  78 198 104 123 197 167 159 158  31 181  30 137 161 143  88 149
  80  23   4 141  18 188  98  64  83 164 170 138   2  13 189 144 107 112
  96 157  72 179 160 193 136 103  14 166 129  11 163  93  97 194 113 125
 133  36 109  55  79 121  44 147  40 183 154 151 176 120 139  86 152  74
  34 108  54  22  57 132  41   5  38 174  52  84  19 190 165 175  35 155
 148  42  77 131 172 117  61 177 153 116 124 178 100  21   9 119 180 126
 102]
[ 60  11   4 120  26 158 152  70  27 132 128 179 117  29  15  42 111 191
 175  62  61 189  40 198 197 176  51 154  67  88 131  21  28 195 182  48
  39 156 147 108  37 134 110  44  56  72  96 172 180   8  33 145  46 194
 143 149 123  19 164 100 115 129  25 160  87 157  34  77  52 106 181 196
  73 170 186  93 146 169 109 136  16 188  32  79  14 192  68 119 104  20
 150 155 127  45  18  30  71 187  54 114  49 133 165 121  69  84 113 148
  81  22   9  36  35 151  74  91  10   5 135  95  59 126  94 101 178  47
   6 171 138 137  63 174  41  85   2  76 153 167  53  78 163  24  38 122
 118  12  23 116 144 184  82   3  80 190 161  17  13 130  43  89 162 139
 193 140 159  92   1  55  97  98 166 141  99  83   0  50  58  65  64 107
 112 105 173 183  90 142  75  31   7 185 177 103 168 124 102  66  86  57
 125]
[127 189 105   6  85 148  12 163 192 160 176 115  58 195  65 129  56 157
 114  82   8 126 106 118  63  20 113  89 117  57 140  29  22  68 182  39
  46  54 177   3  13  72   0  47  79 147  69 139  99 111   9 180  87  70
  44  73  96 141  28 137  76  64  60 142  95 128 100 112 170 185 103  42
  92  97 171 191 184   1 122 121  52 107 101 133 155 135 153 172 152 168
 108 161 169  36  80  16  37 102  15 138 151 156 123  40  91  38 188 178
   4  78  27  62  93  21  35 109  41  94  61  11  14  67  86 193 190 175
  17 165 187 104 181  55  19  51 145  23 120  48  25 164  43 158   5 131
 144 146 167   2  98 198 174 143  90 110 119  18  24  30  26  74  83 125
  31 173 183  75  50 186  45  81  53 194 196  59  77 197 149 166 134 130
  34  71 179 124  10 150  66  49 132 154  88  32 116  33 136 162 159  84
   7]
[100  28 104   4  67  15 183  77 175 127 179 117  89  23  20 130 187 107
  36 162 195 167  76 188 119  13 141  22 122 182  86 133  47  52  55  66
  61  83 136  50 148  17 159  64 153 140  99  12  71  31 113  72  43 128
  57 176 150  39  41 174 111  48   6 168  29 194  96   9 126  68 165 189
  19 120 142   3 192 110  21   0 149 197 135 151 169   1 186 114 173  92
  11  45  18  93 170 147  40 134 106 131 102 146 180 132 198 129 155  79
 166  91  58  81 171  65  60   8  10  97 139 143 137  14  38  16 177  59
 108  24 103 105  78  62 178 181  37  75  35 145 112 109 115  73  88  70
 154  82  63  34  95  32  84  49 156 184 116 101  26  46 185  51 163  87
  90  69 193 123  53 190   7  56 121  94 144  74 157 152 191 172 164  54
  42  85  80 124  25 160 158  33 161 118   2  30  27   5 125  44 138 196
  98]
[ 75 160 135 176 127 111 173 154   1  88  43 119 191 126 175 188  92 165
  41 104 166 170  72 101  53 171 147 108  18  83  25   6 192  93 125   5
  57  69 174 129   9 158   2 107  11 142 146  30  94  32  21 149  10  17
  82 167 195  60 157  90  36 182 164 172  87  78 187  81 117  96  45 105
 100 185 163  34 179  55  66  91  61 128   0  27  48  31 181  42 123  86
 118 186  15  46  80 110 177 162  23 159  77  99 156 197  73  56 136  33
 196  85 106 183 114  38  44  59 102  68  63  98  14 143  13   3  89 130
 121  79  49 155  76 139 120 193 140 161  84 168 180 132  24 131 144 198
  95  64  39 138  29  51  52  50 184 134 153 194  74  70  71 115 178  62
 112  22   8   7  58  26  19 113 148 150  37 133  47 124 145   4  54  35
 190  97  28 137  16 103 189 122 116  65  67 109 151  20  12  40 152 141
 169]
[149  74  41  88 142 185  22  75 141 108  29 102 156 152 190  36 196   6
 165  73 176 134  33 183 155 146  60 174  28 181 128 130  14  12 144 186
   1  13  21 109 173 106  56  91 115 162  32 192 170  61 147  89 104 101
  67  46 110 135  19  51 138 187 175 158 154   0 132  96  99  80 143  54
 157 136 163 112 131  30  45  52 151 189  78  55 133   8 107 148  77  59
 171  42  48  58 111 193 117 145 184 113  81 179   2 153 177 103  40  95
  50 161  18 178 124  43  64  93  17  53  24 182  92 197 169 126 125  86
  62 140  84 119  83   9  94 118 191  72  39 114 120  16  44  65  25   5
 164  27 137  82 122 129 180  31 139 105  68 127  15  49  35  63   3 198
  71   4  70  11 116  23   7  47  76 195 159 168  34  37  69 194 167  66
 100 121  10  98 166  20  85 123  79  38  97  57 160 150  90 172  26 188
  87]
[159  82  90 152 189 148 126  57 198 165  54 185 177   9 122 111 134  77
  84 139 191 167 169 119  60  93   2  25 172  98  81  35  72  11  12 175
 136  18  27  30 110   8  33  62  49   4 168 182  64  85  20  52 153 133
  38   5 158 140 125 160 118  13 149   7   3 127 161  89  69  21 102 116
  61 174  55  94 100 143  73 137  24 145  31 123  53 147 173 155  48 162
 121 154 183  71  36  88  56 186 144  34 114  37 192  97 117  26  16 128
  19 157 176  41 113  23 124 163  63  17   0   6  39  91 146 171  22 141
 170   1  70 106  51  42  80 135 108  59  96 101  92  65  87 190  32  50
  29 188 150 151 197 112  45 164  10 180 181  76 156  47  78  95 187  43
 179 104 138  40 120  75  15  67 194 130  86 131 107 178 142 196 195  74
 109 184  28 105  83  14  68 115  66  44  46 103  99  79 193 129 132  58
 166]
[ 80 150 183  14 180 191   4 125 133   0 108 157 174  91 170 106 102  11
  44  88 152 113 173  67 105 169  10 166  54 104 137  32  27  12 154  53
 179 126  36 167  90 151  65  92 181 123 130  22 178 185  39  57 162 143
 160  97 131   2  49  17   3  73 193 158 153 122 175 136  35  24  18 155
  52  94 148  95  20  25 138  28  13 186 118  29 163 147  46 164 128  63
 110 129 116 177 196 139 195   9  56  93  77 144  34  76  96 121  82 109
  26  89  23 161 100   5  74 111 127 142  79  87  68 124  45  58  75 159
  66  64 101 149 182 141  60  43 134  40  41   1  38  21  33   8  48 194
 188 184  55  47  37 114  78 107 187  85  81 119  51  42 132  62 189 120
  72 112  19  83 146 190 176  99 117 135 115  50  31 172 171 103 168   7
 140 156  98 192  86 165  84  69 198  15  71  61  59   6 145  16 197  30
  70]
[ 86 107 166 196 160  82  83 137 194  49  45 181 101 164 136 132  97 116
 184   1 197 127 163  64 175 185 126  58 118   6 108 139   7 120  22  72
 134 115 141  40 112  16 144 135 105  20  51 131 182   5  42 147 195  18
 111 143  55  15  26 198  88  79 186 140 123  93  89 178  71 180  92  56
   8  52  19 128 129 142  78 130 173 169  80  50 109  37 165   0 104  99
  28  38  73 154 125 138  98  12 119  95  25  27  23 177 171  81 179 106
 156  85 189  70  11  76 188  59  48  67 174 110  44  74   4  69 170 192
  87 168 161 148  90 159  10  63  61 114 158 157 187  24 133  65  36  60
 113  29 152 117  75  77  94 190 191 155  96 124   3 121 100  32 153 172
 103 122 145  68  41 167   2  53 183  30  17  35  62  84  66  21  13 146
 176 193  91  54  31 162  33 102  39 149  14  34   9  47 150  46  43  57
 151]
[ 28 133   7 160  94 157  33  25 184  86  90 162  40 191  43  56 195  81
 150  44 172  61 181  70  45  54 120  15 129  79  51 100 177 130  53  82
 182  39  22 113  78   3 167 154   5 152  99  98 132 153  83  32  57  37
  21   6  50 121 101  97 193 128   1 139 176  17 145 102 189 111 131 143
  96 188 146 108  62 171 168 112  42 175  89  92 109 103  60 155  46   4
 179 173 194  69  58  48  63 144 134  12  11 180  85  18 110 119  71 149
 138  88 116 197 186  49  24  34  73 135  74 114 123 158  41 106 165 196
 105  93 198  20 136  23 142 141 107  16  66 148  68 187 140 166  59  36
 178 127 183 104 190  10  35   9  55 169  72 163 137 164  26 161  76  27
 125  75  91 170  84  80   0  13 118 126  31  52 156 159  47   8  38  77
 185  30 115  95 117  67 147  29  19  14 124  64  65  87   2 192 151 122
 174]
[ 80 125 129  98  31 188  26  16 189 151  81  12 178  86  96 162 174 159
  77  68 183 170 109 192  29 107  65  60 112  30  53 132 131   6  52 150
  89 130   0 173 149 136   8 177  35  69 140  58 144 171 148  72 196 102
  70  46 166 121 160  40   1 126  15  97 184 122 163  66 194  21 111 168
  94  22 142 172  20 105 101 118  88 123 167  75 165  54  14 143  63  42
 155  99 146  93  85  71   4  19  25  59  44  73 156  27 137  87  50  91
 185 164 190  32  67  43 100 147 115 181   3 198  28  10 127 104  45   2
  47  61 141 113 135 106 128 152 191  33  37  64  24  18 182  23 169  36
 187  17 161  83  48 179  92 119   5  13 176 157  39  79  38 145 175  56
  90 124 195 139 133  95   9 108 103  76  51 134 197 186 154 114 120  82
  74 158 116  78  34 117  84 193 153  11 180  49  62 138  41   7  55 110
  57]
[ 93  33 107 140  80  15  98 103  54 130  55  82  96 125 133   5 146 163
  59  16 186  50  71 102 145  60 118 194 154 151 166  92  19  24 149 176
  21  41 157  62 117 185 196  20  34 116  29  43 160  76 174 156  51 106
 121 139  25 123 175 128  65 127  12  85  31  37   7 109 189  83 110  39
  89  45   9  48  63  75  81 148  73 171  56 172 119 180  68   6  14 124
 147 143 188 120  30 158  66 168  70 173 111 170 162  61   0  95  52  67
  44  40 141 184 135  78  88  79 159 122  77 115 178 187  46 167   8 191
  47  57 126  94  18 165  90  74 155 150 197 136 193 114  99  49 104   4
 142 144 152  22 138 179 113  11  35 100  84  38 164 181 153  23 190 183
  86  10  26 112 134  58 132  36 131  28 195   2 192  27  69  32 108  72
 105 182 198 101 161  91  97  17  42  53   3  13   1  87 137 169 177  64
 129]
[ 34 191 157 126  72  35  90  44  15  14  70 163 162 178 140  23  78  77
 146  12 130 148 147 155  13  25 197 170 100  65 116 181   9  51 133  86
 149  39  17  61 123  79  32  66  95  11 172 189 142  26 129  38 144  62
  20  36 167  46 196  22 150  50 135 154  89 118   8  18  84  37 194  28
  40  91 145 107  53 192  97 132  93  81   6  58  63 161 143 159  45 153
 175  42  74  68 174 165  31  85  10 114 186 102 104  48 113  67 190  29
 112 179   4 168 141 195 134 139 198 180   3  54  41 101  59 108  73  98
  21  76 109 177   1 131 137 127 110  16 136 164 187  82 106   7  47 176
 183 169  87 119  96 111  69 121 185 193  30  75 125  64  88 103 184  49
 188  33 151 120  92 173   2   5 124  56  57  52  83   0  60  94  71 171
 128  80  99 117  27 158  24 115 105 152  43 166 160 182 156  55  19 122
 138]
[182 170  81  46  71  76   0 158  93 131  51 126  32  95  89  39   8 192
   1 143 145 178 190  67  49  22 102 179 150  66  74 128 106  36 118 198
 115  25  55 142 122 176  34 108  94  18  53 163 154 172  43  72 137 109
 173  99 189 195 114  44 166 100  65 129 194  27  91  21  59 187 164  68
  86 183 177  70 191  23  29  96  77  24   3 151 193  15 119  12 169 134
  61  10  33 127  98 105  47  42 141 157 175 123 113  88  30  78 165  97
  31  90 117  82  84  50   5 153 196  83  54 111 140  58 104  60  63 107
 188 121  41 185  16 161 136 162  87  11  20 120 167 152 144 148 174  40
 139 103 138 159 155   9  35   4 133  75  57 132   7  85  28 135 110 101
 125  38  73  13 160  92 186 146 181  69  80  56 184  14 156  64  62   6
  19  48 112  52  17 130  79  26 147  45 116 180  37 124 171   2 149 197
 168]
[ 56 154 195 109 183  68  74 149 121 144  67   5 172  95 151  59  16 197
  75 136 105 190 133 196  30  24 113 101  82 126  96 106  50  62 129 177
 160 170  54 162  11  63 189  73 146 148 110 191  84  78  35  48  44 102
 185  40 159  99 173 163 118 181  15 184 152 165  70   3  22  57 135 124
  92  49 122 108 116 193 171  87  46 180  89 143 130 140 115 117 176  85
 112 188  33   8   1 186 123 187  60  83 141 156  42  10 127  19  61 194
 179 128 150  18  79 182  58 103  55  98 153 139 111  41  71 178 157 142
  37 158  52 120 114  93   2 155  86 166 132  31  21 175 119  26  64 125
 198  17  53 147  81  25 145   9 168  13  91  90  32  51  97  45  76 134
  72   0 161 100  65  94  77 137  23  29  39 167 104  43  36  69 107  28
 164   4   6  27 192   7  88  20 131 174  38  80  66 169  12 138  34  14
  47]
[151  60 108  19 170 186 123 158 140  71  32 117 168 104  40  41  49   1
  46 126  16 100 136  58 165 149 185  96 176 130 116 111 160 175 169  87
  52 103  38  94  10  98 135  24 109  43 163   0 152 106  59  22  65 155
  66  17  18 159  73   9 137 113 184 115  70  39  64  13 133  86  80 105
  36  48 114  27 191 196 171  74 153  75  69 131 164 197 125 132 154 157
  31   5  95 198  47 142 150  23 179 174 144  90  33  92 101 147   7   6
  12 118 124  76 138 195  28   2  25  35 162 129 180  82  51 128  79  62
  83 139  61  77 110  15 134 178  88  45   4 107 127  99 189 167  54  72
 120  84  97 187 193  81  29  57  11  50  42  78 192  26  44  55  14 173
  68 190  20 161 121  37 166   3 177 194 146  21 188  56 172  30  93  34
 148  91 182  53   8  63  89 102 143 122 112 145  85 183  67 156 141 119
 181]
[157 158 119  85 143  74 150  87  53  84  61  28  68 191  72  14  44  97
 129 130 185 146  83 148  27  38 189 170 182  50 107  57  78  17  56  48
  25  35  18  81  43 140  88  10  46 151  26 133 196  93 105  79  37 154
  66  60 153 163  29 178 172  16 138 131  82 194 162 173 184 106  54   7
 137 132  62 120  34 109  47 164 135 111   1 193  70 183  40 139  23  99
 112  89   2  91 181 161 159 167 121  63 110   0  77 169 136 186  58  64
   4 179  86 145 197 117   5  65 103 166 156 175  24 142  76 188  51  67
 155 100 108 134  59  19  15  39 104  21   6  33  69  13  49  45   8 128
 187  73  30  90 126 116  41 141   3  94  71  12 124  96 149 122 174 171
  11 180  36 165 115 113 147  55  42  80  92 168 152 177   9 195 198 125
 192  52 160 114  20 176  32  95 144  98 102  75 123 101 127 118 190  22
  31]
[154 118 190 168  58  44  51 134 194  68 104  79 136  98 181  47 188  29
 129  43  53 158 178 186  82 113  66 109 174  49 100 139  23  62  10  37
 143 131  27  18 193  81 184 145   2 119  28  17  50 121 170  19  31 166
 138 195 106 196 192  26 180   4  85  30  76  36  54  64  42  89 167  74
  32 115  97 103  11  40  39 175  41  95  56 182 132  87  90 157 187 141
  57 142 125  60  83  70   5 183  86 124  78 147  52 137 108   6   8 110
  15 151 144 112 155  20   0  16 140  75 130   1  71  69 150 177 135 126
 133  67 114  25 189  61  34  46   3 156  59 179 152  55  63   9 127 161
  21  33 146  88 164 122  13  77 169 123  45 116  12  96 185 191 117  99
 176  24 128  35  38 153 198 102 107  72  65 101 160  84 111 162  80  73
   7  91 149 148 172  48 173  92 120  93  14  94 159 165 163 171 105  22
 197]
[ 37 108  10  18 129  29 167  77  89  15 181 178  98  24  61 102 151  45
  34  66   5  25 171 177   1  36  59 152  64  23  47 194  43  42 175 187
 195 136 159 158  56  44  67   4  33  13  86 172 196 192 127   7 161 119
  93 104 173 198 149  80 150  50 179  69 156 110 146 193 144 141 139  12
 120  28 101  91  49  75 184 148  30  27  68  78 165 155 189 160 164 163
 100 109  62 157 190  72  74  21 111  16  97 123  60  88  19 113  32  41
 174 135  71  20 147 117 137  84  54  40  26  58  81   2  82  48 182  55
  65  99  35 130  57  79  92  76 126 125 170   3  46 131 168   6  63  11
   0  90 162  95 186   8 140 115  94 106 154 112 145 116 143 188 183  96
 197  31  70 105 118 124  17 153 176 138  39 103 134  22 180  87  53  73
  52 185 121 107 128 132  85  51 166 191  38 133   9 169 122  83  14 142
 114]
[156  29 141 171 140 193  33 160 185 129 107  48 172 114 143 150  65  18
 104 191   4 146  38  72  70 100  66 131 195 109 181  78  35  62 133  15
  61  14  56   8  95  22   9  82   0 176 183 157  50 102 198 117 155  20
 177   1 128 178  58 180  10 142  93  67  40 174  39 111  92 159 126 106
  52   7 123  43  60  96   2  21 168 167 164 173 158  31 194  69 134  71
  51  25  17 139 151  84  64  97  89  37  27 154  44  80 132  46  36 108
 170 135 175 153 124 118  47 163  13 148  81  34 122  57 152  90  59  87
 186  98 136 189  32  16 105  76 166  49  68  42 116  19  53 190  41 120
  55 162  30 119  88 179 192 127   5 196  12   6  26  23 115 110  28   3
 101 169  63 113 187  79  86 149  45 184 103 147 138  24 125 130  11  73
  83  91  75  74  77 112 197 144  54 161 145 182 137 188 165 121  94  85
  99]
[ 71   4 124 180 141  21  56  41 129 132 154 178 188 191  65 174 102 137
 108 139 142 134  25 163 149  35 138 145   9  42  98 167  19  89 168  88
 151  26 146 152  69 114 187 117  64  50 122 156  12  95 166  80  47 175
  28 136  43 130 123 125 157 161 181  44 116 150 162  33 176 135 101 169
   1  18  90  10  96 190 182  48  45 170   7  82  27  94  63  34   3  30
 133  87  74  54  81  57 147  49 155 111  51  55 104  68   8  70 144  99
  86 194 143  29  60 185  79  61 195 120 192  58 183  67 165 131 128  78
  17 184  13 179 113 148  24  72 121  37 106 160   5  53  85  84   0   6
 171  31  73 103  76 198  11 186 158 196  36  93   2  32 172  23  75 109
  22  92 159 189  15  59 115 127 100  40  83  66  62 140 153 118  39 105
  97 126  77 164 197 112  14  38  52  46  16 173 110  20 107 177 193  91
 119]
[ 57 115  87 168 139 149  56  68  21 170 188 189  41   2  19   5 145   8
 128  42  58 143 148  52 114  94  93 167  16  83  65  23 190 131 103  77
  63  12 184 166 162  29 133 118 153 169 125  79 123  13  35  30 107 179
  39   3 119  48 122 176  86 138 183 181 117 112  88 186 174  31   0 197
 180  26  44  50   1 164  18  90  98  49 136 121  45 113  51  61  75 116
  62 173 104 120  24  82  67  32   9   4  74  43 194 109 110 151 193 101
  36  34  20 195  11 140  33 154 105 198  10  54   7 106  17  84  85  40
 134 163  89  78 161 155 127  59  80 157 100 156 172  91  53  28 150  47
 165 187  14  73  70  55 111  97  71 147 185 142  95 175 196 108 192 135
  69  15   6 158  72 146  38  22 178 126  27  76 159  25 137  81 152 129
  66  37 102  99 160 177 171 144 132 182  46 124  92 141  60 191  96 130
  64]
[ 96  97   3  84 168  17  62  94 152  80  28  40 181 189 145  42 122  18
 100  69 106 108 188  82  25 115  65 165  15 185 156  71  79  68  29   1
 110  63  57  49  99  54 194 191 174 154  41  23 146  66 144 149 182  30
  13  26 104 151  86 164  75 183  76  90  58  38 180   0 129 109  37  50
  64  87 147 135 113  53  59  73   2 111  43  11 107 177 116  20 186   4
  47 195 130 179  22 124   9 103 159 119 158 161 150  51  39  14 175  33
  12 170  88 176 166 101  72 121 167   5  67 172   7 123 192  46  83 136
  45  61  19 131  52  31  95 143 148  32  10  21 187 196  81 162  48 190
 112  98 153 114 142  44  56  36  35  93  85 118 141 169   6 155  70 157
 133 102   8 120 171 160  60  34 128 127 178 134 184 132 105  24 173  74
 140 117 139 126 193 138 198  27  16 125  89  92 163 137  78 197  77  55
  91]
[195  50  68  96  33 155  27  46  61  54 132  78 133  67  38  90   8 185
  43  99 171  40  81 165 115 129 182  62 198  94  20 181 144 101  17 104
   7 193 167 184 168   2   3 125  56 169 136 196  65 113  82  22 160  41
  18   4  59  64  87  29 189  15  86  80 177 107 148 123  19  71  85 105
 138 106 188 146  48  42  63  84 156 183 174 102  30 116 153  60  36 158
 127  79  75 170  88 111 162  69 159   0 161  13 139  93 142 141 103 145
 176 119 190  51  57 191 173 120  97  10 122  34 143 108 100 117  49  72
 124  44  16 140  70 134  24  91 110  55 186  92  31 163  73 121 128 157
 175  53  47  98  66  14 118 109  76  11  39 166  95  89 112  35  52 164
  12 126  37 137  83 187 197 114 154  32  21  58 131 192 151 135   9   1
  74  45 180 147  23 172 149  25 130 194 152 150  77 178   6  26 179   5
  28]
[ 68 193  40 157 131 112 100  89  65 116  13  98  44 105 160 115  29  51
 151  32 180 150 195   5 140  34 174  72  43 191 189 120   4 149 162 176
  14  53  88  73  30   0 118  36  27  75 179 144  74  28  39 113  67  83
   1 164 135 136 121  58  62 155 126 185 119  86  33  91 153 122 133 177
  10 184 117 134 111  63  93  85 156 101 186  16  59 125 148 158 192 165
 168 172  49 103  45 102  25 114  18 183  41 169 171  57 130  47  48  15
  42 197 181 106  19 142  82 104  55  21 163  96  60  24 196 152 137  31
   9 147 138 167 109  22  71 123 124 198 108 129  79  90 127  70  20 173
 107 175 170 143 190  69 146  61  52  95  12 194 128  35 145  26  37  46
   6 166  99  80  77 178  23 132  76  50 159  81  54  66  92 110  94 187
 154  56   3   7  97   8 161   2  17  87  64  38 188  11 141 182 139  78
  84]
[ 45 133  60 103  29  93  70  62  37  69  95   9  44  82  90  59  57 108
 101  24  27 149 143 173 172  96 165 111  30   3 110  91   7 153  86 140
 113  31 181  54 187 129  72 119 168  76  51  66 122 178  99  67 131 171
   1 196 144 151 182 185 117  58 136 157  89 177 126 167 194 162 100  61
  47  15  88   6  38  68  87 175 146  43 138 184  49  50 132  94  34 104
  39 127  14 115  41 195  12  21  83 120  16 160   8 154 145 123  23 125
  17  81 124 158  28  42  19 190  71  35 147   2  80 188  26  53  18  73
 139 107  46 142 152 102 156 105  65  75  56 114  25 121 164  32  48  10
  84 193 192  77  33 106 198 179   4 109 128  98  11  36 174  55  13 118
   5  74  22 189  92 159 170 130  63  52  78 180 150 137 197 183  79  40
 166 116  85 134  20 141 135 191 148  64   0  97 176 155 186 161 169 112
 163]
[ 53 146  91 125  92  95  21 142  16 144 115  46   9  11  51  14  41 135
  23 101 157 145  63  70 127  97  17  94 129  52 111  60 179  47  42 182
 119  13 123 158  80   0  87  67 130  26  58 175  90 133 139 186 149  10
  89  28  77  84  66  72  71  38 113   3  30 187 126  32  57 107 185 178
 172  65 103   7  74  19  36 174  15  50 176  76 110 117  86 150 134  69
  75 116 189  25 114  62   1 108  83  34  40 190 136   6  99  37 183 121
 166  20 148  82 168  68  27 137  48  79   8 180 194  56  35 141  85  39
 161 196 153  98 151  45  78 100 177 191  96 155  29 154 105  44  24 109
 112 181 118 122 147 198 170 162  33  31   4 102 128 188 195 163 156  81
 169 138 104  18 132  49  93  73 184 120 167 192  64  59 171 197 131 160
   5 143  88  55  54  43 140  61   2 164 152  22 106  12 124 193 173 159
 165]
[137 136  48  30 183  94 162  46 127  12 106 186 139  34 196  85  77 169
  37 109 181 178 119  29   1 195  61  22  55 152   6 126  86 157  84  32
  15  60  24 179 138  52  45  56  26  83  43  36 117 131 150 103  14  41
 182  44 101 143 163 104 184  68 112 172 187  21  62   4 147  59  78 124
  69   8  88  18  10 121 180 133  98   7 125  47 174  72 105 177  75 107
  38 132 155  97  16  90 176 140 158  31 110 189  27 148 123  35 188  96
 193 128 145 122  87 156 159 146  39 164 102 118  82  25 194 171 153  28
  79 130 170 165  42  89 120  11 175  91  71 198 185  54  57  76  63 190
 168  93 114 167  99 160 151 191  51  20  65   2 113  67 166  92   5 173
  81   3  19  70 149  40  80  58 197 100  49  95 154 161 192 142  64  73
 134 141  13 144  66 115 108 111 129  23 135  50   0  74   9  53  33 116
  17]
[145  21 136 181  13  79 122 187   6  55  43  41  77  44 126 123  94 161
 127 103  31 168  10  71 134  52 172  56 197  35  95  40  63  75  74 116
  80 196  87 149  26  64 106  91   2  78   3  23  28 150 143 147  20 112
 130 183 113  48 158 182 180  50 195  73 142 120 177 186  47 119 166 107
  90 108  51 159 111  84 117 169 144 125 194  76  27 178  49 157  34 162
   8  65  82 164 129 154  15 167 131 189 114  72 160  36 171 102 165 175
   9 105  14 163  89 109   5  17  86  30   1 101  42   0 170  18  67  85
 118 110  88 179  39 193  57  58  25 198  83  60 100  37 124  93 133 156
 139 176  81  24 153 185  61 151  38 140 148 104  53 115  22 192  66  98
  70 155 152  11  99  19  46  69 138  16 128 191 190 173  92 174  45  96
 135 184  54  59  68  12 141   7 132  29 146  33  62 188 137 121  32  97
   4]
[148 130  90  47 110 124  68 150 107  28 173  25 198 167 143 197  32  54
 169 155 183  22 105  18  46  29 100 185  13  30 129  39  58 146 147  40
 106 182 128 189 149 194 131 187  36 188 177  81  11 163 157 153 101  91
   0 151  50  97   9 158 136  35 103  43  71  70  79  26 141 114 108 164
 127 172 132 119 111  38 134   8   1  27  33  20  69  93 195  44 121  74
 122 139  53 120  80 125  83 156 159 109 161  72   7 162 144  98 178 191
  87  94   5 115  16 193  78  21  84  62  42  75 175 102  95 171 123 192
 174   6 196 133  76 142 135 140 186  55  85  60 104  88 112  41 126 117
 180  56  64  34  23  48  77 170  15  12  24  61  73 145 118  49 168 113
 160 154  17  45 116 152 179  10  59   4  52 166  63  14  66   3  19 190
  65 137 184  51  57 176  82  86  89  99 165  37  31  92  96   2  67 138
 181]
[161  53 176 130   7 157  15 119 181  67  14  52  25 148 109  63  34 142
  35  83 139  62  47 131 163 121   3  93  22  46 179  66   8 186 100  17
  99  85 133  89  32 117 113  97  12 105 195  45  30 128 165  48  74 196
 104  44 144   6  28 187 193  75 185  40 120  31 147  29  78 156 141 153
  88  24 118  77 108 136 171  98   4  27  96   5  55 107 177  64 116 168
  72 166 112 189  65  43 115  37 101 164   9 127  79  86 149 123  92  19
 114 197  13  41 151 155  61   1 140 174  84  69 129 110 145  11 178 135
  81  90 198 160  94  58  56 137 162  54 184 190 150  87 158 182 106  59
  80 103 154 102 192  71  76  39  51 132 138 194 111 175  49 134  33  57
 173   0  10   2  26 122  16 183 146  18  91  38  82  70 152 170 126  95
  36 169  21 124 143 191  50  42 188  23  73 180  60 159  20 172 125  68
 167]
[169 158 153  14  20 166  62  59 173  44  43 104 148  73  84 120 159  38
 197  32  87 168  52  76  74  55 140 132 136  91 162 111  53 149 152  97
 195  31  95 193 183 180  89 171  41 186  56 125   9   5 117   6  94  12
  70 124 126  39 121  10 154 146  75 194  16   7 108 116 110   0 179 122
 135  57  48  77 103 161 133  93 105 129  29   4  69  68 196  96 155  79
 150  63 191  92  22 112  72  50 107  33 151 134 138   8  30 119  67  23
 165 102  83 177  35  71 137 189 156  34  40   1  65  37 178 128  11  42
  86  28 147 139 167  19  51 145  81  82 163 141 192 185  88 175 184 188
   2  99  26 109  80 130  90  78 115  27  61 114 170 118 182  25 123 198
  36  66 144   3  21 127 131  13  15  24  45 143 176 160 174  18  64  49
 190  98 100 164 113  54 142  58 106  46  85 157  47 181 187  60  17 101
 172]
[ 50  82 125 168  66 138  18 155 119  75   3 118  15 120 100 142 140 196
 121 111  49  44  63 173 144  40  48  86 174 102 107 108 185 160  87 180
  42  76  13 105 129  94   8 172 179  33 110 177   9 116 161 193 141  38
 131  39 147  21 184 113 195 146 133 162 165  11 154  47  88 186  71 153
  20 197 123 139 192 103  73  81  32  12  53 158 166 188  98  72  54 159
 143  99  77  96  36  27 148 187 134  22 132  23  43  17  31  61  41  34
 194 189  26  79  58  19 191 164 183  95  59 190  24 198  37  97 145 126
 122  52 178 156  56   6 124 150 176  16  90  69 169   2   5 106 175  93
  84 114  45 171  91 112 181  62  30 130  57 170  35 167   4 137 109  28
  65  68  70 128  46 149  80 104  83  25  67   0 101   7   1  29  89 135
 163 152  74  78  14 182 115 136  64  51  60  55 117 127  10  92 157  85
 151]
[103 147  66 125 120 192 188  55   4 179   0 138   6 189  30  43  58  25
 193  14 195  41  42 105 190 117 154  79  27 127 165  39  53 177 128  20
 115 168 155  48 136  98 144  83  75  67 171 132 160 100  63  49  47 110
 156  24  86  59 161 150  21  94 186 124 191   3  88 134  56  99  87 126
  45 181  71  93 141 123 153 180 131  72  22 111 137  97 172 142 167  51
 175  23 129  12 122  37 170  62  78 194  35  36 145  40 176 107 152 169
  28 149  34 196   2  17 130  33 119 163  31  89  18 164  81 151 184  15
 135  84  65 102   5 143 113 101  96 197 166  76  70  26 139  60  16  38
 162  50 174 157 112 158  80 116 148 146  61 159  68 108  46  77  74  91
 104 133   7  54  10  95 182 121  90  73  13 106 198 173 114  11  85 183
 109  32  44  69  29  82 178  64 187  57  19  52  92   9   1 140 118 185
   8]
[ 41 188 198 157  91 123  63 119  31  43 140  38 177  42  71  30  39  32
 176  65  98  13 149  48 184 141  46 159  85 179 109 168 127  74 134 139
 162 114 173 143 148 102 170  80 131 155 165   5   3 180  44  89  37  26
  15  61  94 104 152   8 158 146 122  73 128  17  22  33 113  62 185 189
  88  67 145 156 186  54  29  75 124 117 174 111 115  64  83  35 153 147
  93 121 151 154  40 183  92  72 132 130  58  87 106 191  57   9  82  69
  66 187  79  47 129   2 164 133 103 100  51 190   4 125 142 194 116  90
 120  18 135  34 107  21  23  25 195  96  60 101  36  97 138 161 105 181
  53 150  19 166  52  16  81  50  59 126  45 192  20  12 197  70   1 182
 178 110  56 137 171  27  10  14 167  76 196  28 136   6 160  24 172  86
 118  99 108 144 163  77  68 112  84  55  11   0  49  95 193  78 169   7
 175]
[ 59  92  54 188  35  50 192  77 189 153 182 149 135 109  12  36  94 151
 193 122  14  90 136  93 118  11 187 115  84  61 116 137 128 147  86 125
  57  52  25  64  51 105  18 144 126  47  79  26 196 124  85  43  76  56
  30  31 103 166 173  78  63 156 179  89 120 190   6  16  27 148  48 154
 197  45 106 134  46  24 102 143  91   8 169  41 194 133 167  39 191 100
 145  15 180  23 141 123  96   1 139  19 138 170  99  72  44  68 198  34
 183  88   4  67 162  95 163 155  74 184  60  32  87 129 171 195  37 111
 150  38  53  21  33 132 185 113   0  58 152  82  62  97  65 174 114 127
  81 101 157   2  22  71 130 172 159 131  80  98  70   9 165  10 181 112
 110 119 164  40 186  29  28 161 146   7  17 121 160 158   5 108 177  55
 168  13 107  75 178   3  66  73 176  42  20  83  49 142 140 104 117 175
  69]
[102  78  75  31 170 123  58   9 147  16   7 171 193 101  41 196  65 127
  86  12  87  51  39  11  76  28  13 161 103   6 184 131 129  10  36 152
 111  47 141  71 162 190  91  24 185  69 144  40  80 126  61 110 172  15
  94  79 135 130 188  63  74  85 114  35  95 134  34 139  21  49 155  22
  17 138  19  93 121 176  54 158 180 175 178  72  42  48  68  81 163 105
 164  62 120   8 150 157 194  64 104  33  77 116  44  30  56   3 118  98
 106 187 166 115 179  52 195 108  29 169  55  25 145   5  97  38  23 189
  57 192 182 117  20 181  73 107 125   1 148 124  14  59 183 133 143  43
  53 119 142  66 197 154  46 165 113 132 149  18 128 167 140  26 122  92
 109 159 174   4 146  60  45  50  90 186 160  32  70  96  88 100 137   0
 153 191 136  89  37 177 151   2  84  99  67  83  82  27 112 156 168 173
 198]
[ 78 149 153  13 104   8 196  38  90 179 163  74  41 144 185 102 120  84
 158   6 138  83 184 122 101  88 152  97 141 127  75 112 183   7 188  89
 157  87 105  65 190  71 125   9  52 161 172  70 187  60  22 106  10  50
  61 114 121   3  80  40 136  29   4  86  94  19 189  68 164  39 118  79
 165 192  12 155  76 178 117  51 154  53 124 108  46  24  36  72 107  18
  58  82 137 186   2  28 148  21 167  55 145  11  56  37 195  54  95 180
 143 166   0 160  32 129  45  47  20 168 147 191  98  99 177 171 134  33
  30  14 139 119  48 146  64 103  42  35 181 140 133 132 109 156  43  31
 173  25 100 159  16 169 170 135 197 150 174 115   5  17  92  49  73  96
 176  62 142  23 182   1  15  91  59 198  66  63 131 126  44  85 151 162
  27 123 175  81  57 193 110 130 111  67  26 194 116  77 128  34 113  93
  69]
[ 70  34 173 123  22 124 114  45 108  47 175   6  53  13 130 195  84 168
  82  25 121  59 145  48 149 110  87  42   7 135  36  79 158 198 109 106
 118  74  96 119 122  12 170 166 187 140  89 125  75 188  40 172  44  60
 104  64 159  38 182  61 143 197  52 164 115  88 183  23  99  27  11  14
 169 152  73  56 156 112 161  35 185  41 191  66 141 103 155 138   4 184
  62  28 180 131 162 111  91 128 144  78 133  69 139  21 192 134  65  77
  95  58 137  37 136 174 189 194 181 154 171 127 142  32  72 177   8 157
  68  31 126 165  90  63  81   5  29  83 107  15  97  46  39 100 167 186
  26 151  50  17   2 132 105  94 190  67  85  16 179  86  24 113 193  43
 178 146 150 153   9  76 117 101  54 116 196  55  49  80 147   1  93  30
 102   0 176  51 120   3  10  20 160  57 163 129 148  18  71  92  33  98
  19]
[171  95 146  94 127 196 123 157  14 144 134  81 111 194 116 172  49  13
 170  91 137 165   6 100  43 145  23 181 133 148  98   4  40  86  41 130
 166  67 185  44  32  46   9  64  24   3  65 139 150  90 154  89  76 158
  56 131 118 167 161  38  27  18 179  20  47  58  83 183 120 152  68  82
 129  26 164  17 113   1   5  77 105  84 193  85  45 175  93 108  99 149
   0 190  97  53  28  80 124 106  92 162  42 143 156  78  74 122 135 125
 184 155  19  35 136   2  72 186   7  22  21  96  36  61 110   8 119  10
 101 160 191 153 189  70  59  62 138  88  57 159  69  37 112  25 115 141
 126  79  34  50  52 104 195 168 147 197 140  66  75  63 132 173 192 114
  51 163 169  31 151 177 198  54  11 107 102  87  12  48 103 142 178 121
  29  30  60  39 128 176  71 180 117  15  73  33 188 187 182  16 109  55
 174]
[ 26 140 184  14 118 142 158  89   5 171  35   2  69  61 130 197 160   1
 135 172  21 107  54   8 103  17  32  92  80 193  73 192  12 141 120 154
  98 176  93  77 152  28 156 101 162 104 153  18  81  33 113  19  95  39
  22   4 148  62  44  78 189  51 122  71  64  27 115  66 124 183 144 181
 105  57  34 167  99 151  49 173 178  96 150  84 186   7  42  45  56 134
 165 108 129 143  38 121 128 188 125 161 170 185  68 194  31 191 138 177
  30 116 102 145 109  46  10 111 146  72 179  90  60  52 119  53  82  83
  88  55  43   9 174 175  15  94  23  75  86  16  74  87  41 147 114  58
  70 149 196  20 139  97  47 110  29  37 100  79   6 180 106 164 155  76
   3  65 123  85 126 166 157  91 168 187  48 159  63 169 182 117  24  11
 112 127  36   0 195 163  25 133 137  40  67 136  13 190 198 132 131  59
  50]
[ 25  87 120 133  67  90 130  20 144 173  21 168 110  45  48 174  69 184
  26 141  96 185 109  41 113  47 107  81  23 191   9  73 146   6 187 125
  33  85 190 123  98  38 194  71  59 150  84  43 143 161 162 151 116  16
 183   1  54 154  97 163 100 122  17 172 193 114 118 145  58   3 139  50
 170   5 128  57  55   2 115 127  60  29 166  72  30  78  10  65  64 136
 171  39 198  76  28 182  86  44 192 158 147  89  93 108 138  49  83   7
 195  61  74 167 181  13 126  36  32  99 176  18 103 132 152  53  22  35
  92 112 196 105  79  27 101  82  12 111  91 197  11 164  42 188  80  94
 119 104 189  88   4 177  95 106  77  70  62  19 178  40 102  46 149 153
 155 157 121  75   0 142  14 159  68 117  24 169 129 137 134 165 148   8
  15  52 124 135  34  66  51  37 186 156 175 131  56 160 180  63 179  31
 140]
[190 149  64  47  86  57  96   6 100 168 112 152  54 117   9  75  30  18
 110 142 102  93 104  77 106  80  39 134 159 139  91  16 182  32  26 170
  29 171 108 165 191  22 155  99  97  45 174 121 107  68 148 163 109  67
  92 143 150 128   4  87  43 173   1 123 131 167  12  35   8   0 154  61
   5  89  62  74  94  81 172  24  98  85 103 185 141 189 196 105  71  51
  79  95 156  21 147 132 166 140 193  11 116 101  17  34  40  41 120  83
 118 195  23  84 133 145 183  72 137  37 135 125  66 129  55  36 187   3
 198 161  78 119  14 164  70  58  50  38 179 153 124 138 169 194  82  25
  10 162 184  76  13 146  69  90 115 181  27  44 180 177 157  33 160   7
 151  73  60 126 111 114  28  59  88  15 136 122  53  52 113 197  65 175
  56  42 127 192 144 186  48  63 188  46  19 130 158  20  49   2 178  31
 176]
[156 128   4  99 131  98  53 180  15  94  41 148  62  71 149   9 141 137
 165 127  28 184 146 106 161  39  84  30  66 195  82  54  69 109  77  40
 119  89  91  26  96 114 142 140 178   2  22  73  19   1 145  17 159 164
  47  85 173  42  44 157  60 102 167 108  11  13 176 192 189 175  10 155
 116 170 194 134  45  97 136 113  50 190  67   7  86 110  59  75 163 100
 105  57 154  95   5 132  79  72 152 118  31 183  43 181  93 111 153  25
 139 169 166 130  58  48  36 117 168 162  92 185 124 172 177  81  29 103
 151 193  65 144  51 197 186  33   6  46  88 115 125 123 120  38  80 112
 121 147 174 179  61  56  87 158 133  76  34 196 187 138  32   3  23  49
  78 182 188  55 107  14 171   8   0  83 104 101  63  24  37 143 198  21
 122  70  64  90 129 150  68  16  20 126 191 160 135  27  74  12  52  35
  18]
[ 28 171  13 188 118 121 136 117 158  53 106  74  38 190 180  84  26  96
 105 113 176  10  44  47   4 194 126 146 170 163   7 142  32 198  24  93
 183  41  75  81  65  45  22 123 122 101 108 155 174 137 178   6  27 134
  79 144  72  30  48 162 172  31  59  73  97 197  56  16 161  62   9 103
 129 147 115 139  46 145  63  17 157 165  42 160 100  87 114 153  40 164
  34  86 127  70  25  21  66  57 138  60 196  99 187 151  95 109 179 128
 166 192  67 186 175  11  14  35  15  39 133  80  69 154   1  50  52 120
  29 167   2 182 156 116  71   3 184 149  12  36  19  54  61 150 119 193
 177  82  23  20 159 185  89 102 125 143 181 132  51  83   8  78   0  58
 130 148  55 140  64 152 195   5  37  33  90  91 112  77  92  49 189 111
 124  18 107  68 173 104 169 110  85  43  88 141  94  98 168  76 131 135
 191]
[ 20  97 125 182 122 165 111  66 141 178 160 100  41 131  48  32  27  28
  74 109 117  49 183  84   2 103 175 184  50 194 169 101  86  54 113 110
  64 147  81  96 114   0  45 118  12 193  19  73 152  51 145 167 132 163
  68 121 173  35  79 187  37 162  92 120   1  91 196   5 172  43 191  46
   8 195 142 197  88  67   9  40  18 168  98  76 107  70  58   4  30 112
  31  53 140 170  42 133  15  71 188  82 185  34 106 153 149 146  16  38
  36 108 137  13 189 134 102   7 179 164  17 136 186  14 123 143 115  62
  94 128 177  11  75 157 161  24 192 139 138 171 116  10 151  60 130 181
  65  95 158 154 166  69  44  78  80 144  57  61  22  33 135  87  55 198
 180 124 129  77  90  23  83 176 105   6 127 119  63 190  21 159  26 126
  52  25   3  72 155  85 150  93 104  89 156  39 174  99  56  29 148  47
  59]
[198 113  70  73 114   6 161 108 106 157  50 132 107 190 162  97 177 196
  84 135  21 181  57  69  34 140 126 117   9  77  56 185  83  58 143 171
 175 131  18 109 128 182  38  85  28 197 148 121  27  13 101  78 133 155
  23 104  65  41  42 189 152 119  26 174  31  88  37 150  45 138  76 176
  32  66  19 158 141  25  17  39  95 154 100  91 163 130 153  36 139 165
  86 120 137  53  22  40 167 178  87  46  74   3  89 194 111  81  47  92
  14 142  15 160 151 187   4  61  33  72  67  71 188  75  59 136 105 180
 169 124 149 102 195 183 116  94   2 134 103  68  60 192  11  93  52 147
 184  29  12  35 191 118 173 127  98 172  48  55  63  79 145 115 159 179
  44 166 146   7  10  49  64 164   0  16   8 170 122  80  20  51 110  62
 193 112 156  99 129  24   5  43  96 125  54 123  82 168   1 186  90 144
  30]
Traceback (most recent call last):
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/zoo/signal_game/train.py", line 167, in <module>
    trainer.train(n_epochs=opts.n_epochs)  # default is 10
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/core/trainers.py", line 158, in train
    train_loss, train_rest = self.train_epoch()
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/core/trainers.py", line 132, in train_epoch
    for batch in self.train_data:
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/zoo/signal_game/sgdata.py", line 64, in __next__
    dimension[[where_max, max_idx]] = dimension[[max_idx, where_max]]
IndexError: index 199 is out of bounds for axis 0 with size 199
➜  EGG git:(master) ✗ sh start_signal_game.sh




----------------train
train data: <class 'egg.zoo.signal_game.sgdata.OneHotLoader'>
Traceback (most recent call last):
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/zoo/signal_game/train.py", line 167, in <module>
    trainer.train(n_epochs=opts.n_epochs)  # default is 10
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/core/trainers.py", line 158, in train
    train_loss, train_rest = self.train_epoch()
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/core/trainers.py", line 132, in train_epoch
    for batch in self.train_data:
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/zoo/signal_game/sgdata.py", line 48, in __next__
    199, replace=False)
  File "mtrand.pyx", line 819, in numpy.random.mtrand.RandomState.choice
ValueError: Cannot take a larger sample than population when 'replace=False'
➜  EGG git:(master) ✗ sh start_signal_game.sh




----------------train
train data: <class 'egg.zoo.signal_game.sgdata.OneHotLoader'>
[12 86 43 47 95 91 48 57 49 76 72 14 81 17 40 59  4  2 96 63 64 53 97 77
 28 38 24 80 62  6 34 20 25 71 11 54 79 82 69 21 22 93 74 37 31 42 90 89
 44 68 45 41 35 39 18 27  9 66 30 16 85 32 26 83 61 92 84  1 19 88 50 23
 98 56  7 36 75 52  3 58 67 99 70  8 55 60  0  5 51 94 13 29 15 73 87 78
 46 10 65 33]
[24 45 96 53 99 88 55 38 17 19 73 65 14 69 98 35 57 43 72 34 16 95 91 37
 12 32 70 11 49 76  1  2  4  3 13 48 68 20 23 59 87 22 75 27 50  7 77 30
 52 39 36 94  0 82 56 58 86 15 93 26 33 81 71 21 89 84 60 41  9 51 66 10
 90  8 44 80 85 42 64 31 83 74 78 92 97 67 40 54 79 18 61 25  5  6 29 46
 47 28 62 63]
[ 6 62 13 53 72 61 79 14  2  1 22 29 95 71 38 20 75 51 60  5 81 68 83 67
 93 52 18  8 99 46  0 40 88 66 36 45 97 87  7 86 21 34 35 44 39 63 98 23
 64 58 32 91 76 12 26 80 48 74 70 56 15 16 25 77 94 59 27 28 57 85 78 41
 90 49  9 17 82 19 65 92 47 24  3  4 10 11 33 50 89 84 96 31 43 30 42 37
 55 54 73 69]
[91 42 46 71  8 89 50 74 39 85 43 11 88 93 19 31 55 98 75  4 37 73 97 79
 22 80 28 26 81 92  6 57 83 64 24 76 94 48 10 84 53 33  0 12 86 96 78  3
 72 90 40 38 18 32 95  5 23 15 69 21 36 34 52 99 70 29 51 67 65 82  1 45
 56 66 59 17  7 30 47 87 60 61 44 68 14  9 25 58 62 77 49 13 54 41  2 35
 27 63 16 20]
[64 61  3 84 39 83 95 75 93 96  5 38 11 80 88  8 23 53 13 18 48 76 20 26
 35  1 77  0 58 98 73 25 91 32 12 30 46 66 45 71  4 81 15 31 65 70 74 27
 69  7 99 29 60 36 72 24 90 43 78 51 52 97 57 10  9 49 50 62 82 54 17 19
 47 21  2 67 85 87 14 33 68 79 56 92 94 41 16 59 40 22  6 34 63 55 42 89
 37 44 28 86]
[35  8 97 24 52 13  9  7 73 96 21 38 49 47 91  5 50 71 92 89 94 44 66 14
 43 82 88  6 99 84 76 41 30 10 40 29  2 65 19 39 93 33 15 75 90 98 34 42
 60  0 81 27 64 22 48 87 56 28 70 79  4 59 83 31 77 26 58 54 23 74 36 32
  3  1 63 78 53 72 95 37 51 20 62 25 17 18 55 45 86 69 61 85 57 80 68 67
 46 12 16 11]
[79 70 92 28 87 58 80  4 21  7 83 56 46 24 34 52 19 12 72 30 31 35 20 37
 85  0 93 78 41 86 22 53 62  1  2 25 26 84 38 32 76 45 48  6 57 68 89 36
  5 60 94 81 14 23  8 11 67 99 69 39 90 10 64 75 82 43 95 29 54 13 27 63
 88 16 77  3 18 40 65 17 66 49 50  9 59 47 74 98 91 61 51 96 33 42 97 44
 15 73 71 55]
[27 50 41 23 77 82 75 34 31 10 78 74  8 20 40 54 95 46 91 84 59 38 48 66
 67 58 72  0 35 64 80  1 71 53 88 24  2 43 68 85 60 28 86 18 57 42 37 65
 81 19 22  9 11 52 79 26 30 94  3 21 13 90 36 39 44 70 93 12 99 45 83 62
 51  4 47 32 76 96 56 98 89 69 87  5 16 92 25 33 14  6 73 55 15 61 97 17
 29 63  7 49]
[ 3 86 25 32 20  5 58 40 38 39 47 66 50 18 36  7  1 61 95 79 49 63 28 55
 70 24 12 76 45 60 43 46 59 53  0 88 37 51 31 72 35 64 87 54 33 16 83 78
 27 98 52 15  8  6 71 81 90  2 99 48 11 41 56 21 10 44 57 13 67 94 82 91
 19  9  4 42 34 84 80 62 93 65 26 92 77 68 29 97 17 75 89 22 69 73 74 30
 96 23 85 14]
[89 83 98 18 49 77 79 66 61 64 63 75 71 52 55 27 30 25 62 12 16 68 59  9
 39 24 46 10 36 21 78 22 19 29 23  0 13 45 65 48  8 85  5  3 72 28 74 38
 90 91 82 84 93 17 54 97 14 42  6  7 86  4 99 26 80 70 56 31 15 47 94 81
 69 73 44  2 95 11 87 60 20 58 92 96 40 50 88 37 41 57 33 67 53 43 35 51
 34 32  1 76]
[76 46 96 86 51  9 66 79 44 13  2 11 82 31  4 53 87 88 99 52 90 58 55 29
 80 95 62 24 97 59  5 91 40 15 35 93 28 64  1 20 47 12 63 74 85 68 26  3
 21 42 39 98  6 33 32 45 16 84 89 22 23 57  8 78 19 56 69 73 30 25 34 18
 94 67 61 71 54 65 60 81 43 41 37  0 17 48 75 50 38 83 36  7 27 92 10 72
 70 77 49 14]
[51 25 99 45 31 75 82 42 27  9 56 41 76 63 77 19  1 40  6 35 93 37 49 43
 62 65 86 80 83  2 58 64 30 66 91 11 14 69 81 57  7 50 36 10 95 88 44 59
 84  3 16 18 79 97 17 60 21 33 71 89 22 96 92 87 72 67 32 53 73 48 20 68
 55 13 74 54 38 28 85 47  0 52 34  8 46 26 78  5 94 61 12 23 24 39 98  4
 90 29 15 70]
[20 64 94 11 66 86 13 95 44 18 24  1 80 22 29 21 68 87 37 54 31 27 60 62
 89 81 90  6 32 58 36 35 39 88  3  7 63 65 77 93 23 82 71 74 16 70 38 83
 14 75 97 53 41 69 79 67 47 51 49 40  2 45 78 55  5 84 52 73 17 98 19  0
 92 26 43 28 85 72 59 42 96 91 33 76 25  4  8  9 50 61 12 57 46 56 30 48
 99 10 15 34]
[48 36  8 76 96  0 42 87 28 86 91  2 83 84 20 21 66 53 99 31 79 30 51 26
 65 74 54 25 12 40 17 45 41  4 69  7 10 85 38  6 89 63 37 95 58 24 92 77
 22 56 13 23 47 43 33 57 16 11 62 80 60 50 39 27 59  5 67 81 82 44 75 19
 15 14 49 78  1 97 55 70 32 68 64 72 73 29 93 90 98 18 52  9 46 88 94 61
  3 71 34 35]
[ 3 53 92  0 72 99 15 54 24 91  4 67 41 46 60 80 95  7 33 79 22 98 10 40
 76 39 89 96 35 71 83 23 88  9 11 42 25 51  2 18 26 36 32 65 29 49 17 63
 50 43 38 16 68 61 13 45 69 47 84 62 48 37 73  8 12 56 30 86 74 75 20 44
 87 66 58  5 93 70 55 85 77 78 21 90 19 34 28 82 94 64  1 52 31  6 57 59
 81 97 14 27]
[20 25  6 89 80 18 83 86  3 85  9 70 15 60 90 45 74 46 96 16  0 71 66 36
 24 91 97 51 33  7 94 88 48 26 82 50 98 57 29 32 21 40 13 75 39 12 79 52
 27 41 43 49 62 53 31 78 30 11 73 77 28 64 44 87  4  8 93 68 22 72 95 23
 56 61 42 35 47 37 54 84 65 19 34  1 99 63 92 10  5  2 67 55 69 76 17 81
 38 14 59 58]
[74 35 11 62 95 81 69 21 56 33 73 90  5 38 64  1 31 82 55 30 70 14  0 20
 71 40 28 23 32 99 15 54  6  3 72 41 60  8 39 42 91 12  4 63 98 68 79 17
 13 34 18 96 87 94 83 36 50 47 93 84 65 26 61 59 16 97 52  7 85 43 89 45
 22 67 46 77 19 53 10 44 86 80 88 25 58 27 49 24 37 51 76 57 48 66  2 75
 78 29 92  9]
[86 36 69 32 12 78 96 35  2 23 30 28 89 74 34 51 88 84 57 87 27 17 70 37
 46 18 20 63 82  3 91 62 14 81 33 56 15 40 83 16  9 31  1 45 41 55 90 43
 65 92 72 54  0 24 94 75 22 99 47 26 79 60 42 19  7  8 25 67  5 64 97 13
 50 21 38 76 11 49  4 53 61 98 59  6 71 44 73 68 48 95 39 66 52 85 93 77
 10 58 80 29]
[12 77 79 28 51 78 22 64 97 20 47 13 72  5 62 35 56  9 76 26 58 25 98 69
 73 29 17  4 70 87 84 15 65 94 21 91 18 89 55 32 57 92 48 38 85 53 31 74
  3  6 23 52 93 88 41 49 14  7 95 45 33 44 68 34 66 67 24 40 59 36 54 11
 96 81 27 86 99 60 10 63  0  2 19 80 50 90 43 39 71 46 83 30 61 82 16 75
 37  8 42  1]
[80 91  1 81 52 24 19 29 47 79 36 50  0 46 23 63 49 68 59 82 20 13 99 85
 93  9 10 15 84 16 70 53 45 31 18  6 26 48 11 60  3 35 86 27  8 34 21 65
 97 72 90 69 96 40 25 71 75  5 54 83 28 74 61  7 22 77 30 58 78  2 39 56
 32 51 55 92 44 14 94 17 38 87 42 33 41 37 89 73 12  4 66 57 88 62 76 43
 95 64 98 67]
[27 15 45  2 29 81 58 21  9 99 18 85 12 95 13 74 38  4 64 20 56 28 57 97
  5 77 84 35 36 60 65 39 67 87 44 16 93 63 52  3 51 61 53 42 33 91 89 49
 75 86  0 31 96 17 41 71 68 80 66 54 14 46 78 23 25 22 59 48 72 69 24 10
 19 79 11 47 62 73  7 88 50 90 40  6  1 37 76 70 30 26 55 34 94 98 43 92
  8 82 32 83]
[98 12 22 45 26 68 33 70 74 40 75 85 25 73 99 32  7 72 49 50 60 21 65 83
 80  4 30  3 29 38 77 96 87 84 57 92 17 95 58 81 54 79 42 13 91 66 62 20
 61 46 39 89 52  0 23 18 28  1 34  8  2 71  9 59 97 51 64 93 27 56 63 78
 48 31 37 94  6 44 41 88 43  5 82 55 76 90 67 36 15 24 19 14 47 53 10 86
 35 11 69 16]
[71 25 75 39 86 12 48 22 23 69 96 72 43 63 21 44 27 11 13 18 29 70 38 47
 67 50 14 92 10 35 88  5 87 64 45 55 58 16 28 15 42  4 80 54 26 49  9 82
 32 40 20 17  8  2 62 77  6 76 61 65 60 30 74 59 94 31 81  0 36 66  1  3
 34 24 57 98 73 99 90 97 85 53 51 91 95 79 19 56 89 33 41 52 46 37 78  7
 68 83 93 84]
[91 37 46 13 85 40 22 62 84 61 14 24 98 33 89 59 43 20 44 39 75 18 49 68
 90 19 56 80 26 72  2 38 28  7 12 87 51 93  4 60 10 63 11  5 52 45 31 64
 71 58 47 92 15 96 67 34 32 41 65 74 76 97 69 94  8 70 73 54 77  9 50  1
 88 99 57 66 95 29 16 17  3 82 78 53 30 27 86 79 81 35 21 48  6 42 25 83
  0 23 55 36]
[86 26 39 74 58 77 83 54 96 66 15 17 69  7  4 46 19 55 10 82 93 97 20 23
 80 22 44 30 62 18 49 45  5 47 76 14 37 35 56 28  0 12 98 29 60 50 24 79
 57 72 33 84  3 27 11  2 21 48 16 73 70 75 40 41 38 65 88 94 61 63 90 59
 34 95 25 85 71 13 67 43 89  1  6 78 52 87 42 92 99 32 51 64 81 36  9 53
 91 31  8 68]
[85 10 77  4 31 70 54 65 44 40 32 12 74 23 81 17 14  8 38 78 49 92 15 57
 87 93 73 46 86 22 29 47 58  1 60 69 21 55 45 37 94 71 51 61 67 90 97 98
 35 96  2 28  0 63  6 30 79 27 13 41 83 66  9 80  7 89 95 33 34 42 26 59
 11 39 99 36 16 20 53 76 18 24 50 62 43 19 88 48  3 91 64 68 75 84 72 82
 25 56 52  5]
[24 25 31 72 83 55 35  5 40  0 85 13 90 48 18  3  4 38 23 21 16 60  6 93
 56 84 26 82 80 67 44 10 97 45 76 51 19 87 29  2 46 58 53 74 11 52 77 86
 66 63  8 78 75 27 81  9 37 50 70 91 43 92 49  1 79 95 33 89 73 12  7 94
 64 69 96 15 39 88 22 71 32 65 17 42 98 36 28 57 34 68 14 41 59 20 99 47
 30 54 62 61]
[43 71 50 23 46 35 17 49 29 91 13 76  2 83 59 53 98 34 88 42 51 38 36 67
 48 99 20 11 77 27 80  9 31 93 55 41 62 30 70 56 63  0 14 22 95 64 75 47
 33  3 68 74 10 57 87 84 26 25 81 58  8  4 32 12 60 89 61 44 79 40 72 86
  6 39 85 54 92 19 96 24 28 45 16 15 97 37 65 94  7  1 78 18 69 21 73 90
  5 66 52 82]
[86 41 36 80 97 12 46 59 43 39 88 70 96 16 66 10 87 65 99 55 92 56 63 17
 42 15 35 13 19 26 83 25 60 51 40 30 74 76 77  7 85 47 62 45 89 22 91  8
 23 98 34 84 49 21 90 27  2 24 11  5 93 94 64 28 58 81 48 18 38 61 95 20
 82 37 72 75 54 57 29  6 14 79 67  1  4 71 33 78 69 32 73 52  3 44  9  0
 53 68 31 50]
[12 86 34 31 16  6 54 71 43 50  2 33 96  7 67 51 41 47 83 37 93 25 32  3
 20 94 61 56 85 14 35 91 79 40 45 87 39 59 63 72 24 76 77 64 73  1 92 49
 52  8 11 55 44 84 58 18 57 62 10  9 13 74  4 82 29  5 48 46 22 90 95 80
 21 53 78 88 42  0 98 26 75 66 19 30 68 60 65 23 28 97 36 81 70 69 99 89
 38 17 15 27]
[85  2 33 90 42  9 49 13 54 23 17 31 29 63 30 79 39 44 52 15 32 25 50 28
 66 40 51 10 68 83 69 87 81 75 48 86 80 16 67 78 18 21 91 82 96 19  8 92
 43  0 37 98 60  1 46 24  6 95 14 73  3 34  5 47 77  4 89 97 72 35 59 74
 45 76 53 88 38 12 27  7 20 56 11 93 36 65 70 71 61 62 94 57 22 64 26 55
 99 58 84 41]
[87 90 11 44 69 75  6 38 29 73 97 46 58 54 15 65 30 86 80 32 27 18 22 93
 40 49 53 55 20  1 16 14 91 56 28  9 35 68 74 88 64 31 45 10 96  5 89 71
 60 70 82 50 23  7 83 36 37 95 99 48 66 43 98 63 34 61 94 39 21 76 17 25
 72  0 42 57 77 52 85 19 12 67 84 47 13 41 78 24 51 92 33 62  8  2 79 59
 81  4  3 26]
[45 25 41 63 62 36 19 86 28 15 42 91 43 77 75 40 52 16 54 93 34 13 26 61
  3 35  7 23 89 88 60 44 39 31 99 59 87 17 10 50 78 37 57 98 24  6 53 72
 79 92 95 84 70 58 97 14 71 29 20  0 94 69 55 12  2 96 11  4 82 76 30  5
 22 73 18  1  9 38 49 21 64 32 46 81  8 68 47 83 74 65 56 85 48 67 33 66
 90 27 80 51]
[48 91 95 83 82 72 11 52  6 39 51 16 35 36 46 71 89 12 81 74 65 42 70 85
 90 27 55 75 86 57 62 60 31 41 94 76 10 97 61 78 43 68  7 80 59 58  0 98
 50 63 25  4 34 84  2  5 23 73 19 67 56 32 77 88 66 33 54 40 14 44 20 30
 26  9 18 79 24  1 15 13 99 49 69  3 96 29 93 28 64 17 87 47 53 92 21 38
 37 22 45  8]
[55 90 19 99 43 28  3 79 33 22 30 39 16 17 96 13 35 88  6 75 49 11  5 48
 66 12 54 50 29 67 76 27 97 44 80 23  7 57 56 36 71 45 98 25  9 15 62  0
 82  8 46 47 63 59 20 31  1 78 73 92 51 94 70 10  2 52 38 42 40 95 69 87
 18 93 58 61  4 74 68 32 14 72 85 64 37 53 91 24 83 81 77 41 86 84 21 34
 65 26 60 89]
[65 99 34 30 50 63 92 32 47 17 74 88 79  0 96 22 97 64  3 53 91 48 13 40
 98 39 26 46 62 72 24 35 43 68 56 44 37 70 16 71  5 94 41 77 27 42 57 67
 81 85 15  7 19 59 38 51 21 60 90 20 10 58  1  2 93 69 95 82 66 18 29  8
 76 11 25 33 84 52 73 45 54 78 31 89  4 23 83 87  6 86 14 28 49 75  9 61
 55 36 12 80]
[ 5 50 20  0 57 65  7 29 47 75 39 23 14 22 69  4 15 61  9 77 44 37 54 84
 31 13 30  8 63 40 35 66 11 81 16 74 53 49 43 91 88 87 73 82 58 94 25 10
 19 28 68 83 79  1 99 12  6 80 52 93 60 33 96 59 48 27 62 76 41 90  2 45
 24 56 98 89 38 95 86 34 18 64 51  3 36 71 26 97 78 32 72 70 85 21 46 55
 17 67 42 92]
[77 74 42 67 58 63 36 95 65  5 48 28 99 26 40 83 22 50  9 24 27 23  0 49
 96 76 44 14 89  2 64 39 91 68 33 30 45  7 10 88 66 29 52 90  1 54 86 87
 97 32  6 18  8 12  3 47 56 11 94 25 61 59 69 41 46 98 19 34 78 73 70 75
 20 79 16  4 84 80 82 85 38 57 53 71 35 37 55 43 15 92 13 72 60 17 31 51
 93 81 21 62]
[66 49 23 97 63 68 67 85  2 75 93 29 30 91 22 17 74 46 79 14 87 45 50 21
  6  9 60 72 89 18 15 94 11 38  3 12 20 42 19 35 65 76 26 28  8 61 99  4
 40 82 36 27 62 69 92 98 44 48 78 96  0 16 77 47 34  5 52 24 10 73 56 88
  1 95 32 43  7 55 90 86 39 53 59 71 25 31 80 13 41 70 57 54 51 84 64 37
 83 81 58 33]
[41  7 60 44 24 87 93 95 92 69 53 15 11 97 35 38 42 33 48 67 77 22 45 51
  5 18 37 83  4 58 36 29  3 28 12 13 82 32  6 49 17 40 56 27 47 61 30 54
 21 91 10  9 34 80 25 55 81 50 68 98 16  1 96 46 74 86 52 75 73 64 26 43
 88 20 66  8 14  0 76 65 62 63 31 71 90 99 39  2 79 59 57 70 85 19 72 94
 89 23 78 84]
[50 13 47  1 25 61 38 81 66 20 45 58 98 62  4 72 27 94 70 56 92 26 42 30
 59 75 51 65 97 33  9 74  2 22 10 43 11 54 87 46  8 95 83 16 52 82 18 63
 23 64 55 53 37 31 89 24 35 40 34 15 36 67 28 77 29 44 79 93 69 90 99 32
  6 41 12  7 96 14  5 84 80 88 19 86 71  3 85 91  0 78 48 39 17 68 76 60
 49 57 73 21]
[64 97 13 55 31 86 30  5 50 82  3 58 37 20 68 29  9 51 75 72  0 88 44 74
 15  6 69 24 25 46  8 93 21 60 16 34 49  7 14 96 83 59 22 33 89 80 12 56
 76 90 94 27 45 65 42 19 81 17 43 99 63 39 32 79 35 11 26 87 92 53 84 28
 91 66 23 10  1 40 95 57 85 61 48 67 52 71 47 18 78 73 38 54 62  2 36 70
 41  4 98 77]
[32 13 85 14 65 60  5 70 58  7 35 79 53 46 83 34 73 68 64 56 10 89 24 51
 29 45 47 23 49 82 20 54 15 38 62 92 50  4 66 69 76 88 52 25 19 21 28 90
 59 40 78 39  8  6 86 44  9 41 42 17 26 72 12 87  0 27 48 77 11 33 93 75
 80 96 30  1 91 81 16 43  3 36 97 18 95 63 31 22 55 37 98  2 74 71 57 84
 94 61 67 99]
[20 58 36 80 78 15 11 39 53 62 70 72 37 86 99 42  7 40 79 46 73 31 51  8
 90 52 64 89 24 29  2 34 22 50 87 43 16 14 13  0 18 98 82 33 63  4 44 91
 94 12 84 77 54 10 28 96 75 19 17 32 26 30 48 81 68 71 88  3 45 66 47 76
 83 57 25 41  6 97 61 38 59 74 69 93 35  9 23  5 60 55 95  1 92 65 49 21
 67 85 27 56]
[15 96 66 16 91  4 75 93 31 38  8 61 27 11 55 62 68 10 70 19 25 99 95 20
 49 87 71 56 54 29 69 34 43 53 39  0 33 40 36 97 77  2 47 48 24 92 63 50
 74 52 64 28 51 76 72 44 32 17 57 46 18  5 41 58 45 86 22 59 85 88 26  9
 94 23 82 14  3 80 12 42 90 37  6 81 83 60 21 30  7 13 89 35 79 78 65 98
  1 67 84 73]
[ 9 94 75 19  8 91 76 41 21 86 52 51 68 43 97 84 65 49 18 28 64 32 71 47
 89 36 58 62 55 15 69 54 53  0  4 85 16 90  5 57 44 56 10 46 99 40 87 22
 93 63  7 12 25 48 37 82  6 61 92 83  2 98 70 45 74 77 14  1 96 73 50 80
 17 27 23 66 26 38 13 67 79 60 33 34 20 39 11 24 35 31 30  3 29 42 88 95
 72 78 81 59]
[ 9 29 98 20 54 34 87 97 19 59 72 30 44 80 82 99 75 45  3 18 61 52 74 84
 68 62  2 12 40  4 55 64 23 63 13 76 78 94 32 37 81 24 91  7 25 15 22 17
 92 36 67 14 58 35 95 38 10 70 39 77 56 43 21 96 50 41 28  5 16 88 69 27
 46 49 26  1 93 47 73 79 48 71 90 57 53 66 51 11 85 83 33 86 42 89  6 65
  0 31 60  8]
[93  7 75 92 67 43 19  3 30 60 74 44 73 18 16 79 49 72 91 83 11 70 97 63
 77 65  8 98 76 55 81 54 94 84 15 85 38 35 23 29 66 12 39 27 20  4 53 89
  2  9  0 68 13 37 10 47  5 78 86 22 58 50  1 88 25 46 69 45 99 90 61 14
 56 17 40 42 41 36 52 34 57 62 33 48 26 28 96 32 87 21  6 64 95 71 82 31
 80 24 59 51]
[ 9  3 88 79 15 70 23 94 80 38 13 66 39 35 90 46 67 28  8 91 93 33 47  4
  6 45 26  1  5 20 82 85 64 16 30 92  2 18 83 44 98 68 19 96 24 40 57 11
 50 73 84 12 34 72 49 54 74 42 14 25  7 61 51 76 32 60 89  0 43 95 22 17
 58 29 36 56 10 69 48 75 87 81 37 27 53 86 41 99 55 71 21 52 63 62 31 78
 65 97 59 77]
[45 94 36 39 20 50 19 84 48 56 40 91 77 70 61 32 60 93 69 52  7 89 16 80
 37 78 15  4 14 33 99 88  6 59 82 26 51 58 28 62 97 54 79 64 96  3 22  9
 12 74 85 13 35 24 21 63 23 10 49 83 41  0 90 53 47 57 11 29 98 92  8 25
 55 81 86 38 30 68 18 42 72 71 17 95 67 27  5 75 66 44 73 76 31 87  1 34
 65 43 46  2]
[33 23 90 72 66 65 89 11 48 79 21 71 93 54 42 12 36 32 81 10 84 39  3 45
 49 53  7 51 61 75 99  4 26 15 95 18 16 50 28 17 92 78 77 34 98 57 14 59
 64 96 41 88 60 97 74 24 94 43 19 76 47 91 56 68 25  2 87 35 63 80  0  6
 13  9 73 69 85 55 20  8 67 82 27 22 44 46 40  5 52 30 70 37 86 38  1 31
 58 29 62 83]
Traceback (most recent call last):
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/zoo/signal_game/train.py", line 167, in <module>
    trainer.train(n_epochs=opts.n_epochs)  # default is 10
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/core/trainers.py", line 158, in train
    train_loss, train_rest = self.train_epoch()
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/core/trainers.py", line 132, in train_epoch
    for batch in self.train_data:
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/zoo/signal_game/sgdata.py", line 58, in __next__
    dimension[[where_min, min_idx]] = dimension[[min_idx, where_min]]  # swap values at the two positions
IndexError: index 100 is out of bounds for axis 0 with size 100
➜  EGG git:(master) ✗ sh start_signal_game.sh




----------------train
train data: <class 'egg.zoo.signal_game.sgdata.OneHotLoader'>
[24 28 92 57 41 39 81 11 18 20 96 65 75 62 83 85 50 89  4 29 98 30  5 87
 73 70 59 60 37 27 63 64 68 78 48 44 34 17 61 66 90 31  0 69 84 49 25 58
  7  6 13 93 67 86 32 91 71 88 77 79 45 95 74 47 33 21 53 99  2 80 55 22
 16  9 97 15 14 43 10 82  8 76 54 38 40 46 12  3 23  1 94 42 35 51 19 36
 26 52 72 56]
[91 16 29 94 11 88 26 46 84 70 89 43 95 68 83 82 67 72 63 96 22 62 30 74
 24 40 34 49  2 18  5  7  0 58 35 20 64 73 21 93 99 45 33 51 61 79 38 32
 59 53 54 75 92 78 37 71  1 14 12 80  3 25  9 41 42 31 15 19 87  6 85 17
 76 90 77 65 97 50 28 60 56 86 39 57 36 23 10 55 47 81  8 69  4 66 13 44
 48 27 52 98]
[90 66  6 41  9 30 76 82 64 54 70 50 19 74 94 18 37 38 92 75 14 22 99 11
  7 60 86 39 53 45 21 56 43 17 20 89 59 73 83 95 91 72 81 29 68 10 24 65
 55 16 61 51 88 71 49 77 23 63  8 15 80  1 27 58 85 25 13 47 32 40 57 44
 34 98 93  0 97 28 31 87 79  2 62 84 46 52 36 33 67  3 96 69 78  4 12 42
 48 26  5 35]
[39 78 80 50 74 69 46 91  4 49 31 14 18 83 10 36 42 37 32 60 79 47 88 55
  0 52 72 40 45  7 90 58 89 99  8  9 62 34 71 12 13 87 63 54  2 77 75 44
 26 70 35 81 85 22 11 57 92  3 28  6 94 97 64 21 68 66 51 53 16 48 67 17
 30 61 98 95 20 23 65 43 82 29 96 27 41 73 56 86 59 25 15 24  1 38 33  5
 19 93 76 84]
[13 29 75 96 58 45 76 38 74 16 27 88 81 53  5 23 44 95 79 65 80 21 28 51
  1 52 67 40 86 62  4 14 32 47 19 82  6 99 59 11 35 55 43 97 30  7 31 24
 78 12 61 84 15 77 49 42 39 92 48 60 71 70 66 37 56 36 85  8 34 17 46 54
 63 22 57 68 10 50 72 98 41 90 26  2 69 25  3 64 33 93 87 73  0  9 20 18
 94 89 83 91]
[84 87 95 29 39 50 16 66 90 54 93  3 75 47 61 18 55 35 52 83 31 14 51 94
 44 30 76  8  1 62 34 69 77 70 32 19 59 43 89 58 60 28 17 86 26 57 67 24
 81 65 49  9 88 38 13 71 45 37 46 41 97 96 99 98 11 15 63 72 42 79 23  0
  5  6  2 21  7 27 25 73 48 92 53 78 36 56 85 22 40 10 82 74 64  4 33 68
 20 12 91 80]
[83 74 72  8 63 48 76  3 77 31 52 53 90 99 59  4  5 12 18 56 92 47 41  7
 29 94 69 46 97 50 66 28 34 17 38 93 68  6 27 55  2 89 70 15 82 61  9 22
 67 20 11 54 51 10 84 91 60 40 37 85 13 35 75 87 44 98 80 25 88 43 79 30
 71 33 32 14 58 57 23  0 39 36 45 21 26 19 86 64 16 95 73 96  1 49 81 78
 24 42 65 62]
[13  8 16 54 87 67 90 97 41 15 48 21 73 26 63 79 49 53  1 70 55 98 85 44
 30 74 59 83 31 71 40 23 37 68 66 89 29 50 91 80 33 84 39 27 75 62  7 77
 81  9  5  4 56 12 11 64  6 43 69 88 65 14 78 82 45 61 58 42 60 52 24  2
  0 17  3 72 35 95 46 22 94 36 86 51 25 92 57 93 32 47 34 18 19 96 76 38
 28 99 20 10]
[10 83 54 36 45 55 62 96 84 53  5 95 63 24  1 51 42 82 40 66 78 14 19 22
  4 29 64 35 85 79 58 15 56 67  3 30 21 41 99 25 65 12 16 17 77  2 33 93
 60 57 71 88 49 94 73 37 87 50 91 38 20 59  8 34 81 28 11  9 27 80 76 72
 48 43  6  7 47 74 70 44 18 90 52 39 75 69 13 97 92 86 31 98 32 46 61 23
 68 89  0 26]
[34 58 83 20  1 98  6 60 23 33 19 26 18 49 72 12 96 14 55 89 75 43 91 56
 79 47 42 11 66 97 99 22 67 46 68 50 16 81 78 28 53 21 40  7 52 88 39 30
 44 37 61 64 27 54 77 69 85 70 57 35 17 94 38 82  0 95  3 31 76 92 86  2
 32 59 45 63 15 73 48 24  8 65 74  9 80 13 10 51  5 29 93 84 71 25 87 62
 36  4 41 90]
[55 66 94 58 39 98 60  5 19 75 93 50 47 74 27 30 22 40  8 25 15 65 70 41
 12 84 95 71 79 44 54 56 86 31 63 42 33  4 14 91 88 69 89 78 46 11 68 37
 49  6 61 38  9 96 97 23 24 81 64 10  2 35 45 77 85 36 32  7 76  0 51 72
 87 26 53 20 13 99 90 17 83 67 82 29 73 57 16 52 59 18 28  1 43 80 34 92
 21 48  3 62]
[ 1 11 69 47 63 64 50 96 27 20 25 14  0 75 36 58 94 76 70 51 42 84 73 31
 46 68 99  7 21 32 33 81 97 78 38  6  4 77 18 44 48 24 90 56 45 85 49 40
 19 83 86 35  9 23 88 87 37 29 26 13  5 71 67 41 79 91 55 66  2 93 53 15
 30 74 54 43 28 16 52 61 17 34 82 12 98 22 60 59 92 57  8 39 10 62 65 72
  3 89 95 80]
[52  6 71  2 27 45 53 18 30  4 69 33 59 25 13 72 74 41 78 12 55 65 38 83
 44 91 28 50 99 73 56 66 75 88 23 85 51 70 93 48 94 22 20 67  7 80 89 98
 46 26 84 32 54 97 64 34 60 21 95 16 49 42 96 43 58  8  5 10 92 31 63 14
 37 11 29 86 17  1 35 15 19 82 79 90  0 36 77  3 24  9 76 47 57 39 87 62
 40 61 68 81]
[83 93 36 47  7 29 67 71 27 97 50 48 16 51 87 64 80 12 38 91 46 37 41 19
 59 63 28 56 17 73  3  8 68 72 95 39 86 11 40 96 69 60 20 31 13 43 78 84
 22 44 24 15 81  4 89 58 62 54 79 53 75 85  5 70 74 76 82 30 26  6 35 23
 25 33 49 55 65 32 45 92 66 10 57 99 61  1  9  2 34 88 90 42 21 77 18  0
 14 98 52 94]
[20 16 41 92 11 10 80  3 64 60 96 75 51 24 31 12 66 89 43 94 70 54 40  2
 99  9 67  1 74 32 62 52 26 65  7 33  4 57 22 59 61 35 91 78 39 79 47 81
 30 82 48 36 44 38 98 63 69 21  0 27 37 87 68 50 18 23 93  5 17 19 42 14
 95 88 56 49  6 25 55 45 58 77 15 85 46 97 83 73 72 86 76 28 29 13  8 53
 71 90 84 34]
[93 90 52 98 40  5 30 96 86 99 73 10 17 89 12 79 62 37 33 51  7 84 83  0
 97 71 38 43 60 59 82 95 64  8 27 94 87 44 39 66 91 58 72 31  9 92 42 11
 22 25 85 34 81 36 75 46 26 55 24 61 18 74  3 68 67 49 19 88 53  2 54 15
 69 47 23 57 20 77 50 63 65 16 29 70 48 76  1 45 14 13 28 80  6 32  4 21
 56 41 35 78]
[73 36 65 38 53 44 40 88 72 95 43 83  2 77 48 63 27 64 91 52 16 30 19 22
 51  1 55 93 62 86 57 84 23 39 58 35 29 68 79 67  3 66 69 85 32  8 54 98
  9 50 11 78 12 14 31 99 75  0 71 37 80 28 46 89 13 76 56 25 15 47  6 70
 96 97 33 45  4 94 26 49 82 41 24 17 81 20 61  7 74 59 42  5 34 60 87 10
 21 92 90 18]
[62 43 21 48 73 63 58 67 50 68 10 49 83  0 55 66 88 60 20 97 85 30 99 40
 38  3 75 33 74 42 78 82 89 96 29 65 26 45 14 27 79 72 17 94 39 19 31 70
 98  2 81 80 35 90  6  7 32 64 84 86 57 93  5 13 87 53 59 61 15 41 34 22
 52 12 47 69 24 44 56  8 18 77 37 28 71 95 46 76 25 11 91 92 23 54  1  9
 51 16  4 36]
[95 93 49 60 20 63 53 21 86 50  3 45 85 38 71 27 99 77 48 83  6 67 44 54
 34 75 33 30 39 16 29 46 59 24 89 26 76 90 68  5 13 92 37  9 12 25 51 64
 56  2 40 78 57 66 98 11 84 31 96 72 52 61 69 73 28 81 74 42  4 22 32 82
 14 18 55 79 41 91 47 87  8 94 43 88 80 65 17 70  7  0 58 35 36 10 97 15
 19  1 62 23]
[54 74 50 59 96 13  9 52 14 26 43 95 51 38 46 41 37 49 21 62  7 73  5 23
 69 34  3 12 68 94 75 93 76 44 53 55 87 31 72 20  6 47  8 92 27 16 25 98
 99 97 24 30 67  4  2 42 71 48 90 40 88 79 86 18 17 80 58 91 60 61 36 28
 64  0 83 66 19 32 65 63 82 33 57 29 89 70 39 56 84 81 45  1 77 35 78 15
 85 22 11 10]
[17 41 11 16 29 22 44 85 70 87  5 93 19 63 28 60 91 59 10 89 86 76 20 21
 75 97 45 43 78  1 40 36 71 67 33 51 80 53 39 82 13  9 56 57 98 90 47 99
  4 27 62 79 12 61 48  3 34 92 58 46 64 15 88 14 25 18 26 65 96  0 52 31
 69 84 42 72 32 35  7 68 74 66  6 50 77 24 55 94  8 83 73  2 38 37 23 81
 49 30 54 95]
[26 20 40 32 83 28 91 96 69 75  8 77 64 88 19 65 22 30 87 43 56 58 85 76
 95 63 35 89 24 78 46  4 37 29 59 61 62 16  3 34 97 27 33 47 15 51 11 52
 90 82  7 25 60 13  6 70 93 17 80 94 44  9 50 67 14 74 86 39 79 54  0  5
 71 73 45 99 55 92 18 38 98 68 81 36 21  2  1 41 23 84 72 49 31 53 42 48
 57 12 10 66]
[44 93 33  5 13 94 53 50 86 10 73 51 74 78 35 52 26 43 29 81 84  1 58 82
 75 54 65 49  2 61 62 83 11 47  8 14  6 59 71 72 87 69 45 16 15 95 32  9
 28 12 55 63 23 46 18 91 98 79 97 38 40 92 57 68 36 67 34 39 70  0 90 31
 30 48 19 17 76 85 80 24 22 25  7 99 77  4 96 41  3 66 89 64 88 60 56 20
 37 42 27 21]
[44 93 85 86  1 79 76 30 61  7 77 17 78 90 87 73 69  5 12 11 39  6 94 80
 19 26 71  9 14 10 75 58 21  0 63 41 99 91 46 72 68 18 38 74 66 49 82  8
 70 27 29 22 50 89 25 97  3 95 32 56 42 59 15 34 67 64 20 40 53 98 65 83
 23 45 47 81 28 57 54 52 33 62 37 48 24 36  2 96 92 31 84 51 60 88  4 35
 13 55 43 16]
[60 53 69 99 81 50 56  7 73 72 47 37 66  5 54 80 26 84 28 79 97 61 46 40
 91 38 94 34 27 59 32 63 78 19  9 15 17 18 92 74 21 33 39 82 52 12 58 41
 83 65 35 14  3 20  2 55 48 71 10  6 43 86 42 31 70 44 62 90 75 68 51 64
 98 36 11 57 23 76 95 45 25 87 85 49 89 77  1  8 22 96 67  4  0 30 88 16
 29 13 24 93]
[33 16 92 29 25 27 64  6 39 65  1 75 37 87 44 93 54 47 72 97 63 42 99 43
 32 98 28 41 76 38 80 67 94 90 78 55 96 18 19 36 66 77 74 91 89 50 35  3
 30  8 15 49 45 31 68 59 83 11  9 70 95 12 13 84  5 52  2 79 24 62 61 71
 73 46 88 34  7 85 20  0 48 82 26  4 69 58 23 56 21 53 86 14 22 40 60 81
 51 17 57 10]
[89 86 24 87 10 48 62 29  4  8 41  7 68 39  6 32 55 81 25 83 34 60 46 66
 36 20 42 50 51 19 84  3 93 12 16 97 47 23 37 21 40 96  1 54 92 22 94 80
 95 69  2 56 17 52 27 26 35 30 49 99 18 91 71 13 72 67 31 11 77 65 75 59
 79 33 43 90  0 53 63 28  5 88 85 45 73 15 61 38  9 70 98 82 76 78 57 14
 44 58 64 74]
[34 92 30 58 74 25 14  6 39  0 68 31 99 79 82 60 13 57 53 83 15 18 28 23
 54  3  1  9  8 96 97 67 63 48 94 45 24 26 71 73 87 64 21 50 91 69 47 62
 29 55  7 12 95 33 61 44 49 20 84  5 89 41 17 65 77 10 98 93 70 27 72 22
 43 59 85 75 32 42  2 37 52 86 80 66 51 88 81 40 16 90 56 38 46 19 76  4
 78 35 36 11]
[ 6 58 85 41 13 90 16 24 88 86  8 94 96 22 69  3 83 61 54 23 62 44 56 12
 80 99 53 14 35 81 76  5 71 93 77 31 87 79 45 63 36 68 30 32  9 72 52 65
 40 78  0 59  4 57 49 84 47 48 17 10  2 33 98  1 38 29 64 66 97 51 37 82
 20 27 39 46 18 15 21 43 67  7 92 73 50 95 89 91 28 19 26 25 34 11 74 60
 55 75 70 42]
[50 82 10 74 31 93 75 69 14 13  5 54 26 17 37  4 33 65 59  1 32 60  8 38
 62 16 35 67 77  9  0 52 28 68 96 53 76 18 89  6 22 49  2 21 58 81 61 64
 55  7 19 88 84 40 47 66 39 80 70 63  3 92 71 42 27 78 97 30 56 86 43 73
 94 12 83 91 95 24 20 90 46 29 99 98 11 51 23 44 45 34 85 48 87 72 79 36
 41 25 57 15]
[76 80 67 73 15 11 19 85 35 92 39 52 20 37 21 30  9 65  7  6 36 72 79 14
 88 48 68 47 70 32 81 95 43 10 63 23 69 33 60 59 22 34 66 77 74 13 55 58
 54 93  4 84 44 98 64 41  0 86 28 87 78 26  1 40 94  3 25 50 27 16  5 51
 24 61 82 17 96 83 75 49 38 99  2 90 57 56 45  8 53 46 31 97 18 91 62 12
 71 29 89 42]
[17 49  3 57 35 79 55 80  1 40  2 47 51 84 85 33 58 26 70 67 15 56 24  7
 38 64 13 44 50 72 88 75 69 63 19 71 22  6 93 20 81 28 32 25 48 45 34 16
 74 54 89 95 18 23 98 21 59 60 90 86 53 61  8 76 99 78 43 36  4 30 87 97
 77 46 83 37  9 10 94 12  0 66 52 92 73  5 68 41 42 11 31 29 65 14 27 91
 96 62 39 82]
[23 77 88 43 42  0 82 17 35 26 97 15 99 96 28 98 62 92 79  8 56 39 85 27
 58 32 36 19 21 74 72 69 73 87 51 12 78 55 90  3 57 81 14 31 63 80 68 76
 84 47 18 94 86 22 45 70 67 49 11 46 61 34 59 71 30 40 89 52 37 50 25 65
 10  9 16  2 64 13 48  6 20 66 41 93 53 33 95  4 91  1 83 60  7 29 24 44
 38  5 75 54]
[26 94 36 56 30 72 71 54 86 16 12  8 92 76 28 99 69 91 93  4 13 47  6 52
 87 63 64 32 45  5 25 39 21 14 51 11 34  9 15 31 17  3 19 95  2 33 55 74
 62 18 50 20 84 68 97 61 58 10 43 89  7 37 66 41 81 44 67 78 77 85 90 60
 35 83 79 98 49 48  0 82 46 27 75  1 88 42 24 80 38 23 22 73 29 57 65 70
 96 59 40 53]
[31 29 26 56  1 58 67  4 11 39 95 87 57 54 91 88 38 12 15  8 55 25 49  9
 46  5 70 40 74 59 73 81 44 19 35 37 13 97 68  0 52 45 86 17 92 48 78 99
 94 32 98 28 69 61 27 90 21 66 75 64 63 10 82 50 53  2 62 42 72 47  7  3
 23 71  6 16 79 60 20 24 89 36 84 85 96 77 65 80 93 30 18 83 51 22 33 76
 14 34 43 41]
[48  3 46 66  9 47 21 68 14 24 20 81 58 36 57 67 94  6 64 69 83  7 29 56
  8 60 92 93 87 70 37 31 33 82 34 25 90 27 11 79 52 72 30 49 98 95 65 76
 62 80  2 40 73 61 50 88 28 39 42 63 75 44 23 18 78 59 45 22  5 91 38 77
 85  1 32 13 15 97 89 51 19 53 12 86 35 84 74 55 10 41 17 43 96 99 16  0
 26 71 54  4]
[80 11 96 67 42 88 56 69 90 21 66 26 82 16 50 77 76 70 14 79  2 40 36 73
 39 99 44 10 45 48 78 29 41 20 18 47 87 65 60 30 58 97 59 24 33 51 85 46
 72 27 92 37  3 55 38 93 35 57 49 62 13  4 91 53 89  6 71  1  9 54 15 52
 83 98 28 94 31 74 86 17 84 22  8 68  0 19 23 81 34 64 75 12 95 25  7 43
 61 32  5 63]
[61 44 47 53 96 41 33 83  6 94 71 73 37 14 46 13 43  3 10 89  7 99 45 64
 70 52 72 77 56 55 51  8 95 80 57 42 67  0 66 29 58 93  4 17 18 35 50 12
 19 62 15 78 76 26 36 21 31 91 22 86  5 28 25 20 88 54 98 48 79 24 85 38
 65 34 11 87  9 27 40 63 69 49 32 39  2 81 23 74 84 75  1 30 59 97 60 16
 92 82 90 68]
[88 56 34 22 10 74 92 25 43 89 21  8 87 94 72 57 19 67 41 11 97  6 96 66
 80 52 12  7 64 20 77 16 47 93 71 59  9 24 23 51 85 48 68 76 58 14 90 81
 18 62 27 42 70 13 78 84 29 17 50 35  2 53 99  4 79 46  1 73 26 38 83 39
 30 61  5 65 44 32  0  3 28 33 75 15 36 45 86 49 95 82 40 63 98 60 91 31
 69 54 55 37]
[57 26 74 76 18 43  2 88 10 31 39 70 33 72 25 81  8 11 45 85 50 30 92 34
 41 46 86 62 63  4 52 56 97 87 64 90 68 36 17 78 71 37  5 14 65 13 93 55
 51 77 98 59 58 40 67 49 82  0 60 99 79 89 73 29 53  3 48 16 75 21 69  6
 19 20  9 61 54 96 32 95 84 23 47 27 80 15 12  1 28 94 91 22 83 35 38 42
 44 66 24  7]
[93  4 90  9 12 24 21 72 69 50 82 71 62 92 97 11 30 76 59 27 67 81 57 17
 42  8 84  2 85 96  3 25 56 38 52 18 29 16 70 95 54  7 28 36 88 43 55 60
 13 39 61 65 34 41 20 99 68 98 33 83 80 31  6 53 91 64 75 23 48 14 32 87
 63 22 44 79 37 89 26 15 86 10 77 73 40 47 35 58 66 78 51  1  0 49  5 94
 19 74 45 46]
[37 77  7 53 26 97 74 95 75 59 44 11 73 93 41 48 18 90 89 46 69 78 66 76
 70 94 10 12 57 34 81 85 99  0 40 83  8 96 82 79  2 88 29 67 55 30 65  4
 27 39 16 91 58 24 52  6 61 92 49 56 54 71 42 23 36 47 87 86 21  5 62 33
 20 17 64 32 63 14 72 84 60 31 15 38 13 25 50  1 28 68 98 43 45 19 80 51
 35 22  3  9]
[63 73 17 69 78 56 98 38 59 87 23 24 20 81 91 25 14 31  4 44 96 88  5 93
  0 84 62  3 90 94 97 61 10 74  9 12 70 58  6 16 32 43 45 80 51 68 52 35
 50 60 34 41 92 27 95 13 18 53 99 66 15 48  7 67 11  8 76 55 71 77 33 22
 65 54 26 47  2 19 30 86 46 36 49 82 79 39 72 29 75 37 89 85 42 57 21 40
 28 64  1 83]
[79 15 35 74 48 59 80 20  3 66 63 70 26 44 53 86 77  6 40 18 10  1 22 29
 56 38 32 90 34 51 97 68 41 12 84 96 75 21 87 37 55 23 62 31 50 24 33 13
 49 98 69 76 85 67 16 30 17  8 39 52 57 11 91 88 93 64 65 36 46 47 82  2
 81 78  0 71 95 19 43 94 45 89 60 25 58 14 27 61 73 99  7 28  5 72 92  9
 83  4 42 54]
[19 77 36 70 14 30  9 88 46 50 34  3 90 62 11 64 69 26 61 18 16 47 38 65
 13  1 72 53 12 56 49 97 29  0 54 63 89 20  5 33 68 76 84 39 25 22 99 27
 42 86  4 48 35 96 79  8 24 40 78 92 17 55 82 83 21 71 15 98 31 57 37 95
 66 67 45 10 87 80 41 28  6 32 74 44 91 75 81 85 43 58 93  2 23 60 73 52
  7 94 59 51]
[38 42 39 95 71  2 31 90 41 55 47  1 83 78 26 65 93 14 35 24 70 96 15 54
 17  4 91 30  7 20 97 67 81 13 51 76 29 64  9 36 12 60 61 53  3 85 44 58
 11 68 87 66 37 22 73 40 49 10 43 92 21  8 18 77 99 19 25 86 94 63 52 88
 79 34 50 33  0 69 56 32 75 23  6 59 62 82 16 98 74 84  5 80 48 27 46 57
 89 72 45 28]
[21 42 73  8  2 55 80 62 71 93 58 48 83 49 91 61 24 86 76 66 59 84 25 17
 69 38 79 31 63  5 74 92 60 85 35 67 94 37  4 30 72 97 98 12 22  9 36 28
 16 41 11 77 78 87 75 34 51 95 57 54  3 14  1  7 89 44  6 82 15 64 46 26
 32 68 99 47 13 20 90 27 88 43 50  0 56 23 18 29 52 53 39 19 10 33 96 40
 45 70 65 81]
[55 96 27 73 86 66 88 22 49 64 67 94 56 71  1 39 17 30 78 32 46 98  9 93
 91 34 85 53 84 23 11 87  5 13 38 59  7  4 58 70 10 21 72 52 35 89 41 29
 47 54 82 76 20 57 19 50 62 48  0 45 97 37 25 95 74 60 99 90 63 51 42 15
 69 77  3 24  6 16 31 18 14 79 83 40 12 43 61  8  2 44 80 26 92 68 65 36
 28 75 81 33]
[66 18 70 34 75 77 41 82  9 29 23 79 37 12  8  7 56 20 52 83 48 91 74 17
 36  2 32 16 27 40 35 51 50 44 42 33 30 65 53 88 68 15 62 54 96 84 64 76
 49 45 13 81 46 25 78 98 69  1 59 38 89  5  0  3 55 11 95 99 80 71 47 14
 97 87 58 21 39 90 22 72 61 19 57 93 63 60 73 10 85 31 28 94 86 92  6 26
 67 43  4 24]
[45 35 32 28 16 42 67  0 75 99 81 23 87 76  7 14 37 63 27 18 91 30 49  5
 10  6 86 84 43 20 97 57 70 47 94 52 53 66 83 50 68 93 60 41 64 11 69 26
 90 44 36 34  9 29  4 56 92 17 55 96 71 89 98 22 82 25 54 13  1 79 51 74
 77 58 85 80 88 33 39  3 61 19 78 46 24 31 12 65 62 40 21 48 73 59  8 95
  2 15 72 38]
[42 66  8 39 13 41 79 14 90 17 44 57 91  3 68 53 32 96 64 98 78 88 80 97
 19 84 94 46 75 30 11 67 89 21 59 26 37 95 35  2 62 52 81 72 55 87 20 83
 56 92 58 93 99 33 31  0 12 47 63 61 50  1 49 86 69 77 34 48 28 54 65 51
 82  7 85  6 70 38 10 18 22 45 74 71 40 43 76 16 25 29 73 15  9 60  4  5
 23 24 36 27]
Traceback (most recent call last):
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/zoo/signal_game/train.py", line 167, in <module>
    trainer.train(n_epochs=opts.n_epochs)  # default is 10
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/core/trainers.py", line 158, in train
    train_loss, train_rest = self.train_epoch()
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/core/trainers.py", line 132, in train_epoch
    for batch in self.train_data:
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/zoo/signal_game/sgdata.py", line 58, in __next__
    dimension[[where_min, min_idx]] = dimension[[min_idx, where_min]]  # swap values at the two positions
IndexError: index 100 is out of bounds for axis 0 with size 100
➜  EGG git:(master) ✗ sh start_signal_game.sh




----------------train
train data: <class 'egg.zoo.signal_game.sgdata.OneHotLoader'>
[86 71  7  4 80 47 73 97 82 90 77  9 81 59 31 46 34 24 64 32 13 88 16 17
 50 78 99 18 45 33  2 57 27 98 68 29 28  3 79 19  6 25 67 76 53 51 93  1
 20 75 92 38 15 23 89 60 72 85 66 11 43 96  0 55 26 35 91 65 74 41 54 42
 39 22 37 56 44  5 61 21 94 52 14 36 83 49  8 63 40 12 58 69 87 70 95 84
 30 62 48 10]
[14 22 80 62 64 23 47 20 29 65  4 87 77 24  2 63 67 82 57 90 11 85 26  9
 92 13 59 98  3 25 54 88 35 60 95  1 89 19 75 53 50 37  6 96 61 43 33 49
 15 83 55 12 21 45 71 32 18 52 42 40 27 44 94 10 36 41 74 39 38 30  5 68
 99 76 86 78 69 56 17 97 46 72 81 91 28 34  8 16 73 31 48  0 66 70 84 58
  7 93 51 79]
[27 32 40 57  3 30 41 84 50  2 81 96 88 34 70  7 65 16 15 68 79 22 42 24
 61 91 23 33  6 60 20 13 69 10 26 93 76 87 56 59 53 44 29 52 46 71  4 94
 73 66 67 77 38 80 90 78 37  5 51  9 12 82 83  8 19 47 48 18 62 54 63 98
 14 35 49 39 92 55 36 43  0 86 25 11 89 45 21 74 28 58 85 99 64 17 72 31
 97  1 95 75]
batch: <class 'list'>
batch:  dim2
wrapper: tensor([ 0., 99.,  7.,  4., 80., 47., 73., 97., 82., 90., 77.,  9., 81., 59.,
        31., 46., 34., 24., 64., 32., 13., 88., 16., 17., 50., 78., 71., 18.,
        45., 33.,  2., 57., 27., 98., 68., 29., 28.,  3., 79., 19.,  6., 25.,
        67., 76., 53., 51., 93.,  1., 20., 75., 92., 38., 15., 23., 89., 60.,
        72., 85., 66., 11., 43., 96., 86., 55., 26., 35., 91., 65., 74., 41.,
        54., 42., 39., 22., 37., 56., 44.,  5., 61., 21., 94., 52., 14., 36.,
        83., 49.,  8., 63., 40., 12., 58., 69., 87., 70., 95., 84., 30., 62.,
        48., 10., 14., 22.,  0., 99., 64., 23., 47., 20., 29., 65.,  4., 87.,
        77., 24.,  2., 63., 67., 82., 57., 90., 11., 85., 26.,  9., 92., 13.,
        59., 98.,  3., 25., 54., 88., 35., 60., 95.,  1., 89., 19., 75., 53.,
        50., 37.,  6., 96., 61., 43., 33., 49., 15., 83., 55., 12., 21., 45.,
        71., 32., 18., 52., 42., 40., 27., 44., 94., 10., 36., 41., 74., 39.,
        38., 30.,  5., 68., 62., 76., 86., 78., 69., 56., 17., 97., 46., 72.,
        81., 91., 28., 34.,  8., 16., 73., 31., 48., 80., 66., 70., 84., 58.,
         7., 93., 51., 79., 27., 32., 40., 57.,  0., 99., 41., 84., 50.,  2.,
        81., 96., 88., 34., 70.,  7., 65., 16., 15., 68., 79., 22., 42., 24.,
        61., 91., 23., 33.,  6., 60., 20., 13., 69., 10., 26., 93., 76., 87.,
        56., 59., 53., 44., 29., 52., 46., 71.,  4., 94., 73., 66., 67., 77.,
        38., 80., 90., 78., 37.,  5., 51.,  9., 12., 82., 83.,  8., 19., 47.,
        48., 18., 62., 54., 63., 98., 14., 35., 49., 39., 92., 55., 36., 43.,
         3., 86., 25., 11., 89., 45., 21., 74., 28., 58., 85., 30., 64., 17.,
        72., 31., 97.,  1., 95., 75.])
game size: 2
shape of tensor  torch.Size([])
Tensor: tensor(0.)
Traceback (most recent call last):
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/zoo/signal_game/train.py", line 167, in <module>
    trainer.train(n_epochs=opts.n_epochs)  # default is 10
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/core/trainers.py", line 158, in train
    train_loss, train_rest = self.train_epoch()
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/core/trainers.py", line 138, in train_epoch
    optimized_loss, rest = self.game(*batch)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/torch/nn/modules/module.py", line 547, in __call__
    result = self.forward(*input, **kwargs)
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/core/reinforce_wrappers.py", line 113, in forward
    message, sender_log_prob, sender_entropy = self.sender(sender_input)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/torch/nn/modules/module.py", line 547, in __call__
    result = self.forward(*input, **kwargs)
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/core/reinforce_wrappers.py", line 42, in forward
    logits = self.agent(*args, **kwargs)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/torch/nn/modules/module.py", line 547, in __call__
    result = self.forward(*input, **kwargs)
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/zoo/signal_game/archs.py", line 31, in forward
    emb = self.return_embeddings(x)
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/zoo/signal_game/archs.py", line 65, in return_embeddings
    h_i = self.lin1(h)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/torch/nn/modules/module.py", line 547, in __call__
    result = self.forward(*input, **kwargs)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/torch/nn/modules/linear.py", line 87, in forward
    return F.linear(input, self.weight, self.bias)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/torch/nn/functional.py", line 1371, in linear
    output = input.matmul(weight.t())
RuntimeError: both arguments to matmul need to be at least 1D, but they are 0D and 2D
➜  EGG git:(master) ✗ sh start_signal_game.sh




----------------train
train data: <class 'egg.zoo.signal_game.sgdata.OneHotLoader'>
[26 18 84 27 77 57 83 41 16 25 61 48 46 91 14 79 38 11 52 70 64 55  6 94
  2  9 93 89 20 30  8 49 22 17 32 53 39 59 35 23 47 97 87 60 10 56 75 74
 58 21 34 28 63 19 99 71 80 13 68  5 43 62 88 67 54 65 98 78 24 66 69 12
  1 96  4 82 76  0 86 95 37 90 51 44 50 42 73 72 92 15 81 45 33 31 85  3
 40 29 36  7]
[85 24 94 71 31 39 58  0 79 15 16 19 92 84 43 72 91 13 86 37 54 87 52  3
 45 62 83 61  9 14 59 34 18 82 51 35 48 29 89  1 69 23 33  5 30 49 10  8
 98  6 27 80 36 28 38 47 12 65 41 46 21 93 63 74 78 42 90 75 76 26 68 22
 50 97 44 67 70 53 20  7  2 77 88 32 99 17 40 55 73 11 60  4 95 66 96 57
 81 56 25 64]
[56 58 10 99  9 47 17 29 68 50 52 51 18 73 61 96 71  6 97 11 46 15 36 88
 86 91 77 76 72 92 41 80 60  1 31 65 26 94 59  3 63  7 12 83 98 25 16 53
 40 62 28 21 23 20 44 84 90 89 33 55 64 87 43 66 67 93 79 19 75 70 42 74
 85 32 81 34  2 13 95  0  4 39 69 49 54 37 82 38 78 22 57 24  8 30 14 35
 27  5 45 48]
Traceback (most recent call last):
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/zoo/signal_game/train.py", line 167, in <module>
    trainer.train(n_epochs=opts.n_epochs)  # default is 10
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/core/trainers.py", line 158, in train
    train_loss, train_rest = self.train_epoch()
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/core/trainers.py", line 132, in train_epoch
    for batch in self.train_data:
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/zoo/signal_game/sgdata.py", line 101, in __next__
    return torch.from_numpy(batch_data).float(), torch.zeros(1)
TypeError: expected np.ndarray (got list)
➜  EGG git:(master) ✗ sh start_signal_game.sh




----------------train
train data: <class 'egg.zoo.signal_game.sgdata.OneHotLoader'>
[59 29 10 71  7 97 81 13 17 19 41 25 68 20 22 87  9 21 28 61  4 74 57 30
 70 73 42 67 78 86 49 15 47 32 69 14 60 96 52 88 56 94 92 33  6 48 55 18
 98 11 63 84 36 53 40 83 66 31 46 26 44 54 90 80 58 43 79  1  2  5  0 38
 62  3 51 75 12 91 93 82  8 99 85 65 72 89 34 39 45 35 64 16 77 95 27 23
 24 50 37 76]
[98 33 45 78 82 41 74 54 75 57 44 38 42 18 47 87 73 59 70 63 43 66 85  5
 97 62 29  4 68 24 49 92  3 39 71 93 64 77  9 89 90 25 83 61 80 60 88  0
  2 12 76 81 52 69  7 16  8 34 35 17 14 67 37 23 86 94  1 26 28 50 46 11
 10 56 13 53 27 20 19 58 65 55  6 72 32 31 21 79 36 84 22 91 96 30 99 95
 40 15 51 48]
[55 65 27 13 35 89 28 85 16 68 49 44 88 22 63 98 73 25 61 42 11 31 60 10
 83 20 56  2 36 96 32 78 33 76 58 39 95 18 62 53 12 80 64 69 14 59 77  4
 70 19 23 71 29 48 94 81 47  6  3 45  0  1 67 91 17 37 92 86 52 15 84 50
 97 26 21  5 54 24 82 90 57 41 79 72 34 74  9 51 87 38 43 75 93 46 30  8
 66 40  7 99]
Traceback (most recent call last):
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/zoo/signal_game/train.py", line 167, in <module>
    trainer.train(n_epochs=opts.n_epochs)  # default is 10
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/core/trainers.py", line 158, in train
    train_loss, train_rest = self.train_epoch()
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/core/trainers.py", line 132, in train_epoch
    for batch in self.train_data:
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/zoo/signal_game/sgdata.py", line 67, in __next__
    batch_data = np.array()
TypeError: array() missing required argument 'object' (pos 1)
➜  EGG git:(master) ✗ sh start_signal_game.sh




----------------train
train data: <class 'egg.zoo.signal_game.sgdata.OneHotLoader'>
[92 63 95 86 47 25 22 71 87 70  5 40  8 41 33 45 89 62 39 97 20 13 11 38
 37 59  1 12 57 73 51 36 24  3 88 76  7 78 19 21 93 23  2 26 74 34 60 85
 82  0 52 79 53 69 10 31 18 44 46 17 83 99 67 75 30 72 91 58 54 80 84 94
 64 61 96 42 68 15 55 50 81 16 65 28 32  9 56 98 48 90  6 29 43 77 14 49
  4 27 66 35]
[73 42 52 49 25 27 31  8 37 83  6 66  3 94 84 34 71 13 57 69 89 99 36 29
 63 76 91 51  5 43 33 56 12 30 41 68 22 92 11 32 19 97  2 26 75 21 47 67
 88 70 40 16 35  7 86  4 77 18 20 62 59 14 72  1 82 98 74 38 96 80 17 28
 81 24 95 93 48  9 45 46 54 85 50 79 44 65 58  0 90 39 60 53 15 87 61 64
 23 55 10 78]
[47 64 66 34 74 54 41 31 92 44 71 89 96 13 79 11 37 22  5 88 80 73  8 91
 53 87 65 82 48 33 26 61 39 27 30 56 93 78 12 86 51 59 14 43 29  9 50 20
  0 42 19 10  3  4 72 60 52 24 46 98 40 81  6 90 70 94 83 32 77 99 36 76
 21 25 63 69 45 18 35 75 17 95 85 16  1 55 67 49 84 28  7 62 38 23  2 57
 58 68 97 15]
Traceback (most recent call last):
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/zoo/signal_game/train.py", line 167, in <module>
    trainer.train(n_epochs=opts.n_epochs)  # default is 10
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/core/trainers.py", line 158, in train
    train_loss, train_rest = self.train_epoch()
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/core/trainers.py", line 132, in train_epoch
    for batch in self.train_data:
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/zoo/signal_game/sgdata.py", line 68, in __next__
    batch_data.append(np.array(dims).flatten())
AttributeError: 'numpy.ndarray' object has no attribute 'append'
➜  EGG git:(master) ✗ sh start_signal_game.sh




----------------train
train data: <class 'egg.zoo.signal_game.sgdata.OneHotLoader'>
[ 5 88 73 78 12  4 95 27 25 48 40 93 50 80  2  9 49 58 43 23 75 81 30 56
  1 72  8 60 51 37 38 87 54 13 69 90 16 20 91 55 77 68 35 61 83 11 31 15
 39 96 28 71 84  3 97 82 53 19 34 98 94 24 99 36  6 14 32 41 44 86 62 65
  0 18 10 57 76 42 74 45 89 59 64 26 92 63 70 22 29 66  7 21 52 67 33 46
 85 79 47 17]
[81 78  3 70 12 80 58 87 71 53 15 94 83 62 40 25 32 60 14 13 28 41 45 56
 26 46 35 74  2 73 79 27 11 64 17 55 52 37  9 43 18 96 98 10 61 30  4 63
 24 89 31 66  8 23 75 39 34 48 20 49 84 42 38 69 47  6 85 86 95 76 99  5
 90 91 51 97 33  1  0 68 19 16  7 29 36 57 92 22 88 72 67 44 59 77 93 50
 82 21 65 54]
[14 37 70 84 52 92 80 94 15 88 86 38 34 71 91 66 74 30 48 44 95 41  7 11
 46 68 96  2 98  0 55 75 89 77 93 87 18 57 97 35  5 23 54 61  8 72 56 36
 29 22 28 25 59 16 33 53 27 26 63 31 90 10 40 43 42 12 79 81 67 45 99 51
 24 76 32 82  4 60 83 85 21  1 39 73 62 17 13 64 50 19 58 20 69  3 78 47
 65 49  9  6]
(0,)
batch: <class 'list'>
batch:  dim2
wrapper: tensor([])
game size: 2
Traceback (most recent call last):
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/zoo/signal_game/train.py", line 167, in <module>
    trainer.train(n_epochs=opts.n_epochs)  # default is 10
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/core/trainers.py", line 158, in train
    train_loss, train_rest = self.train_epoch()
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/core/trainers.py", line 138, in train_epoch
    optimized_loss, rest = self.game(*batch)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/torch/nn/modules/module.py", line 547, in __call__
    result = self.forward(*input, **kwargs)
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/core/reinforce_wrappers.py", line 113, in forward
    message, sender_log_prob, sender_entropy = self.sender(sender_input)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/torch/nn/modules/module.py", line 547, in __call__
    result = self.forward(*input, **kwargs)
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/core/reinforce_wrappers.py", line 42, in forward
    logits = self.agent(*args, **kwargs)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/torch/nn/modules/module.py", line 547, in __call__
    result = self.forward(*input, **kwargs)
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/zoo/signal_game/archs.py", line 31, in forward
    emb = self.return_embeddings(x)
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/zoo/signal_game/archs.py", line 59, in return_embeddings
    h = x[i]
IndexError: index 0 is out of bounds for dimension 0 with size 0
➜  EGG git:(master) ✗ sh start_signal_game.sh




----------------train
train data: <class 'egg.zoo.signal_game.sgdata.OneHotLoader'>
[90 39 35 91 37 27 92  5 44 12 60 63 19 61 80 42 82 20 93 70 40 46 49 76
 65 50 77 34 25 29 31 48 71  0 79 75 74 11 69 86 64 16 57 78 84 10 94 98
 55 67 88 81 15 41 68 62  4 22 85 33 51 38  6 95 58 83 72  8 26 47 45 59
 21 97 52 66 53  9 32 18 43 24  7  3 14 17 73 56  1 28 89 54 99 87  2 36
 30 96 13 23]
[67 24 12 71 42 87 60 86 51 37  4  3 10 70 14 84 15 54  2 23 25 82 52 83
 74 22 43 19 55 32 57 93 50 96 56 36 44 80 29 68 85 49 89 65 45 26 27 41
 73 77 13 40 88 53 31 72 69 18 66 94  6  0 34 92 81  9 47  5 33 79 75 30
 78 58 91 16 17 64 38 76 48  1 59 95 62 39 61  8 90 46 21 98  7 20 11 28
 99 97 35 63]
[16 37 84 41 79 72 44 76 83 31 73 97  8 61 22 45 71 25 95 59 19 92 94 14
  7 81 56 89 62 55 82 33  4 51 21  5 43 70 15 26 65  6 91 18 66 75 69 13
 68 10 67 12 39  1 63 11 86 20 53 35 24 77 54 50 57 88 46 85 29 52 30 36
  3 78 60 32 40  2 17 47 74 38 99 49 42 58 90 93 27 34 48 80  0 64 87 96
  9 23 28 98]
Traceback (most recent call last):
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/zoo/signal_game/train.py", line 167, in <module>
    trainer.train(n_epochs=opts.n_epochs)  # default is 10
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/core/trainers.py", line 158, in train
    train_loss, train_rest = self.train_epoch()
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/core/trainers.py", line 132, in train_epoch
    for batch in self.train_data:
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/zoo/signal_game/sgdata.py", line 71, in __next__
    print("batch shape:  " + batch_data.shape)
TypeError: can only concatenate str (not "tuple") to str
➜  EGG git:(master) ✗ sh start_signal_game.sh




----------------train
train data: <class 'egg.zoo.signal_game.sgdata.OneHotLoader'>
[37 74 32  1 90 75 77 89 38 88  5 39 45 18 97 96 86 27 57 91 73 63 72 28
 53 26 15 43 67 21 85 80 61 25 99 65 83 47 31 50 78 58 95 81 93 14 10  9
 84 23 64 68 36 40 19 49 56 24 59 30 66 87 60 41 12 76 48  8 71 69 51 16
 70 35 52 82 98 34 33 22 79 11  2 20 29  6 42  4 54  0 62 46 55 17 92 94
 44  3 13  7]
[86 16 90 77 61 42 15 66 65 31 78 63 91 70 69 52 71 99 46  8 24 68 82 55
 88 58 53 43 49 93 37 10 41 75  3 23 13 33 59 73 48 72  6 44 79  2 11 56
 64 25 12 47 81  9 94 14 67 27 18 96 62 50 22 83  0  5 57 17 28  4 51 40
 19 29 45 60 76 21  1 74 30 98 92 38 26 39 84 36 95 87  7 32 35 20 97 34
 80 54 85 89]
[64 68 23 85 45 89 63 91 12 39 88 79  4 90 78 82 33 67 37 18 19 41 44 48
 59 86 53 34 14 13 15 65 17 16  0 47 54 10 24 71 62 75 50 83 56 57 84 27
 74 73 76 49 52 87 94 93  9 30 32 77 97 46  2 40 96  8 43  5 66 28 98  7
 25 80 58 36 60 38 70 29 11  6 95 35 92 51 61 26 81  1 55  3 99 22 21 20
 31 69 72 42]
batch shape:  (0,)
batch: <class 'list'>
batch:  dim2
wrapper: tensor([])
game size: 2
Traceback (most recent call last):
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/zoo/signal_game/train.py", line 167, in <module>
    trainer.train(n_epochs=opts.n_epochs)  # default is 10
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/core/trainers.py", line 158, in train
    train_loss, train_rest = self.train_epoch()
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/core/trainers.py", line 138, in train_epoch
    optimized_loss, rest = self.game(*batch)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/torch/nn/modules/module.py", line 547, in __call__
    result = self.forward(*input, **kwargs)
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/core/reinforce_wrappers.py", line 113, in forward
    message, sender_log_prob, sender_entropy = self.sender(sender_input)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/torch/nn/modules/module.py", line 547, in __call__
    result = self.forward(*input, **kwargs)
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/core/reinforce_wrappers.py", line 42, in forward
    logits = self.agent(*args, **kwargs)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/torch/nn/modules/module.py", line 547, in __call__
    result = self.forward(*input, **kwargs)
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/zoo/signal_game/archs.py", line 31, in forward
    emb = self.return_embeddings(x)
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/zoo/signal_game/archs.py", line 59, in return_embeddings
    h = x[i]
IndexError: index 0 is out of bounds for dimension 0 with size 0
➜  EGG git:(master) ✗ sh start_signal_game.sh




----------------train
train data: <class 'egg.zoo.signal_game.sgdata.OneHotLoader'>
[43 46 78 64 83 48 81 12 30 86 94 29 37 27 77 95 33 16 53 68 70  3 58 11
 28 65 52  9 75 10 79 23 56 17  2 40 26 55 38 63  8 42 80 98 47 19 74 85
 92 45 15 67 97  4 13 71 90 66  6 57 41 73 20 61 72 22 18 44 32 31 21 49
 39 50 34 99  0 62 60  1 76 14 35 93 82  5 88 24 51 59 89 91 96 25 87 69
  7 36 84 54]
[23 73 56 69 30 40 54 91 52  3 19  7 18 99 78 24 59 61  1  6  8 22 33 42
  9 94 41 34 17 51  4 80 21 92 66 43 26 89 46 38 15 81 13 74 97 60 53 55
 62 20 12 86 75 49 63 28 67 57 48 58 96 95 65 71 25 88 39 68 84 72  2 32
 82 14 98 90 83 85 50 31  0 35 79 45 37 16 47 29 36 77 87 10 64 70 93 44
 27  5 76 11]
[11 51 19 78 83 82 13 99 44 36 45 26 33 65  3 48 25 24 72 53 64  7 74 15
 66 92 34 68 21 38 20 30 60  4 27 61 54 47  1 89  8 17 52 96 71 76 79 56
 14 62 37 41 28 63 57 10 86 42  2 31 80 50 49  6 18  9 35  5 88 58 69 81
 32 29 93 94 22 84 98 67 95 75 16 87 43 12 97 40 91 39 55 73 46 90 70 77
  0 85 59 23]
batch shape:  (900,)
batch: <class 'list'>
batch:  dim2
wrapper: tensor([ 0., 99., 78., 64., 83., 48., 81., 12., 30., 86., 94., 29., 37., 27.,
        77., 95., 33., 16., 53., 68., 70.,  3., 58., 11., 28., 65., 52.,  9.,
        75., 10., 79., 23., 56., 17.,  2., 40., 26., 55., 38., 63.,  8., 42.,
        80., 98., 47., 19., 74., 85., 92., 45., 15., 67., 97.,  4., 13., 71.,
        90., 66.,  6., 57., 41., 73., 20., 61., 72., 22., 18., 44., 32., 31.,
        21., 49., 39., 50., 34., 46., 43., 62., 60.,  1., 76., 14., 35., 93.,
        82.,  5., 88., 24., 51., 59., 89., 91., 96., 25., 87., 69.,  7., 36.,
        84., 54., 23., 73.,  0., 99., 30., 40., 54., 91., 52.,  3., 19.,  7.,
        18., 69., 78., 24., 59., 61.,  1.,  6.,  8., 22., 33., 42.,  9., 94.,
        41., 34., 17., 51.,  4., 80., 21., 92., 66., 43., 26., 89., 46., 38.,
        15., 81., 13., 74., 97., 60., 53., 55., 62., 20., 12., 86., 75., 49.,
        63., 28., 67., 57., 48., 58., 96., 95., 65., 71., 25., 88., 39., 68.,
        84., 72.,  2., 32., 82., 14., 98., 90., 83., 85., 50., 31., 56., 35.,
        79., 45., 37., 16., 47., 29., 36., 77., 87., 10., 64., 70., 93., 44.,
        27.,  5., 76., 11., 11., 51., 19., 78.,  0., 99., 13., 82., 44., 36.,
        45., 26., 33., 65.,  3., 48., 25., 24., 72., 53., 64.,  7., 74., 15.,
        66., 92., 34., 68., 21., 38., 20., 30., 60.,  4., 27., 61., 54., 47.,
         1., 89.,  8., 17., 52., 96., 71., 76., 79., 56., 14., 62., 37., 41.,
        28., 63., 57., 10., 86., 42.,  2., 31., 80., 50., 49.,  6., 18.,  9.,
        35.,  5., 88., 58., 69., 81., 32., 29., 93., 94., 22., 84., 98., 67.,
        95., 75., 16., 87., 43., 12., 97., 40., 91., 39., 55., 73., 46., 90.,
        70., 77., 83., 85., 59., 23.,  0., 99., 78., 64., 83., 48., 81., 12.,
        30., 86., 94., 29., 37., 27., 77., 95., 33., 16., 53., 68., 70.,  3.,
        58., 11., 28., 65., 52.,  9., 75., 10., 79., 23., 56., 17.,  2., 40.,
        26., 55., 38., 63.,  8., 42., 80., 98., 47., 19., 74., 85., 92., 45.,
        15., 67., 97.,  4., 13., 71., 90., 66.,  6., 57., 41., 73., 20., 61.,
        72., 22., 18., 44., 32., 31., 21., 49., 39., 50., 34., 46., 43., 62.,
        60.,  1., 76., 14., 35., 93., 82.,  5., 88., 24., 51., 59., 89., 91.,
        96., 25., 87., 69.,  7., 36., 84., 54., 23., 73.,  0., 99., 30., 40.,
        54., 91., 52.,  3., 19.,  7., 18., 69., 78., 24., 59., 61.,  1.,  6.,
         8., 22., 33., 42.,  9., 94., 41., 34., 17., 51.,  4., 80., 21., 92.,
        66., 43., 26., 89., 46., 38., 15., 81., 13., 74., 97., 60., 53., 55.,
        62., 20., 12., 86., 75., 49., 63., 28., 67., 57., 48., 58., 96., 95.,
        65., 71., 25., 88., 39., 68., 84., 72.,  2., 32., 82., 14., 98., 90.,
        83., 85., 50., 31., 56., 35., 79., 45., 37., 16., 47., 29., 36., 77.,
        87., 10., 64., 70., 93., 44., 27.,  5., 76., 11., 11., 51., 19., 78.,
         0., 99., 13., 82., 44., 36., 45., 26., 33., 65.,  3., 48., 25., 24.,
        72., 53., 64.,  7., 74., 15., 66., 92., 34., 68., 21., 38., 20., 30.,
        60.,  4., 27., 61., 54., 47.,  1., 89.,  8., 17., 52., 96., 71., 76.,
        79., 56., 14., 62., 37., 41., 28., 63., 57., 10., 86., 42.,  2., 31.,
        80., 50., 49.,  6., 18.,  9., 35.,  5., 88., 58., 69., 81., 32., 29.,
        93., 94., 22., 84., 98., 67., 95., 75., 16., 87., 43., 12., 97., 40.,
        91., 39., 55., 73., 46., 90., 70., 77., 83., 85., 59., 23.,  0., 99.,
        78., 64., 83., 48., 81., 12., 30., 86., 94., 29., 37., 27., 77., 95.,
        33., 16., 53., 68., 70.,  3., 58., 11., 28., 65., 52.,  9., 75., 10.,
        79., 23., 56., 17.,  2., 40., 26., 55., 38., 63.,  8., 42., 80., 98.,
        47., 19., 74., 85., 92., 45., 15., 67., 97.,  4., 13., 71., 90., 66.,
         6., 57., 41., 73., 20., 61., 72., 22., 18., 44., 32., 31., 21., 49.,
        39., 50., 34., 46., 43., 62., 60.,  1., 76., 14., 35., 93., 82.,  5.,
        88., 24., 51., 59., 89., 91., 96., 25., 87., 69.,  7., 36., 84., 54.,
        23., 73.,  0., 99., 30., 40., 54., 91., 52.,  3., 19.,  7., 18., 69.,
        78., 24., 59., 61.,  1.,  6.,  8., 22., 33., 42.,  9., 94., 41., 34.,
        17., 51.,  4., 80., 21., 92., 66., 43., 26., 89., 46., 38., 15., 81.,
        13., 74., 97., 60., 53., 55., 62., 20., 12., 86., 75., 49., 63., 28.,
        67., 57., 48., 58., 96., 95., 65., 71., 25., 88., 39., 68., 84., 72.,
         2., 32., 82., 14., 98., 90., 83., 85., 50., 31., 56., 35., 79., 45.,
        37., 16., 47., 29., 36., 77., 87., 10., 64., 70., 93., 44., 27.,  5.,
        76., 11., 11., 51., 19., 78.,  0., 99., 13., 82., 44., 36., 45., 26.,
        33., 65.,  3., 48., 25., 24., 72., 53., 64.,  7., 74., 15., 66., 92.,
        34., 68., 21., 38., 20., 30., 60.,  4., 27., 61., 54., 47.,  1., 89.,
         8., 17., 52., 96., 71., 76., 79., 56., 14., 62., 37., 41., 28., 63.,
        57., 10., 86., 42.,  2., 31., 80., 50., 49.,  6., 18.,  9., 35.,  5.,
        88., 58., 69., 81., 32., 29., 93., 94., 22., 84., 98., 67., 95., 75.,
        16., 87., 43., 12., 97., 40., 91., 39., 55., 73., 46., 90., 70., 77.,
        83., 85., 59., 23.])
game size: 2
shape of tensor  torch.Size([])
Tensor: tensor(0.)
Traceback (most recent call last):
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/zoo/signal_game/train.py", line 167, in <module>
    trainer.train(n_epochs=opts.n_epochs)  # default is 10
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/core/trainers.py", line 158, in train
    train_loss, train_rest = self.train_epoch()
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/core/trainers.py", line 138, in train_epoch
    optimized_loss, rest = self.game(*batch)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/torch/nn/modules/module.py", line 547, in __call__
    result = self.forward(*input, **kwargs)
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/core/reinforce_wrappers.py", line 113, in forward
    message, sender_log_prob, sender_entropy = self.sender(sender_input)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/torch/nn/modules/module.py", line 547, in __call__
    result = self.forward(*input, **kwargs)
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/core/reinforce_wrappers.py", line 42, in forward
    logits = self.agent(*args, **kwargs)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/torch/nn/modules/module.py", line 547, in __call__
    result = self.forward(*input, **kwargs)
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/zoo/signal_game/archs.py", line 31, in forward
    emb = self.return_embeddings(x)
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/zoo/signal_game/archs.py", line 65, in return_embeddings
    h_i = self.lin1(h)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/torch/nn/modules/module.py", line 547, in __call__
    result = self.forward(*input, **kwargs)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/torch/nn/modules/linear.py", line 87, in forward
    return F.linear(input, self.weight, self.bias)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/torch/nn/functional.py", line 1371, in linear
    output = input.matmul(weight.t())
RuntimeError: both arguments to matmul need to be at least 1D, but they are 0D and 2D
➜  EGG git:(master) ✗ sh start_signal_game.sh




----------------train
train data: <class 'egg.zoo.signal_game.sgdata.OneHotLoader'>
[53 54 83 93 87 67 58 17 75 52 81 62 91 10 13 69 30 23 66 99 92 84 18 94
 41 39 76 90 33 55 15  2 35 42 48 68 12 32  7 11 45 43 77 95 63 21 38 89
  1 65 50 26 71 97 34 64  4 88 36 73 40 60 74 37 47 46 19 51  9  0 79 96
 22 80 25 78  8 49 85 31 56  6  5 16 20 44 27 59 98 57 72 14  3 29 24 28
 86 82 70 61]
[46 97  1 56 44 10 88 29 25 22 90 34 61 14 79  0  3 32 23 18 28 60  9 84
  2 68 52 62 31 74 19 94 58 21 13 45 33 43 70 37 16 95 40 98 11 67 71 65
 63 76 55 26 85 78 66 93 77 81 27 36 91 41 96 64 39 82 86 75 73 50 30 38
 17 57 51 53 87 24 49 99  8 59  7 54 92 42 69 80 47 83  4 20 48 15 72  6
 35 89 12  5]
[54 90 42  4 11 79 63 66 23  3 19 58 78  8  1 43 77 50 82 26 59 68 86 74
 30 24  7 49 55 67 69 93 64 87 15 37  9 61 80 47  2 94 62 81 14  0 71 29
 27 39 53 89 21 92 38 72 88 70 45 98 76 13 22 36 96 73 97 46 20 35 41 10
 34 33 52 16 85 75 65 83 17 57 48 31 99 18 51 32 40 25 95 56 84 28  5 60
  6 44 91 12]
Traceback (most recent call last):
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/zoo/signal_game/train.py", line 167, in <module>
    trainer.train(n_epochs=opts.n_epochs)  # default is 10
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/core/trainers.py", line 158, in train
    train_loss, train_rest = self.train_epoch()
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/core/trainers.py", line 132, in train_epoch
    for batch in self.train_data:
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/zoo/signal_game/sgdata.py", line 71, in __next__
    np.stack(batch_data, np.array(dims).flatten(), axis = 0)
  File "<__array_function__ internals>", line 4, in stack
TypeError: _stack_dispatcher() got multiple values for argument 'axis'
➜  EGG git:(master) ✗ sh start_signal_game.sh




----------------train
train data: <class 'egg.zoo.signal_game.sgdata.OneHotLoader'>
[79 70 34 33 21 59 17 58 29 13 87 74 77 98 55 71 45 49 44 56 99  2 26  9
 35 52  4 41 37 92 69 48 75 72 76 18 46 78 25 93 91  8 82  1 16 63 81 28
 24 23 65 73 50 19 12 15 47 32 20 36 64 14 27 67 80 68 31 11 61 38 86 97
 89 10  6 53 60 62  5 85 30 94 51 39 40 95 88 90  3  0 22 83 54 43  7 57
 42 84 66 96]
[40 79 15 72 71 54 29 56 11 73 36  5 25 62 19 48  3 84 57 44  6 37 69 28
 64 95 83 55 33 43 78 35 51 97 42 92 88 89 41 13 10 96 66  8 20 99 26 75
  1  2 34 52  7 61 27 50 31 77 53 68 70 30  9 90  0 38 23 82 46 14 18 67
 58 98 16 24 17 63 59 65 45 87 93 32 80 39 49 91 12 76 60 86 94 21  4 47
 85 22 74 81]
[ 2 35 55 18 69 50 78 97 47 48 63 34 73  1 43 25 31  5 44 77 20 85 89 62
 21 95 86 64 96 38 65 17  3 29 87 14 92  9  8  4 27 53 32 24 16 30 40 36
 39 83 88 93 46 60 23 70 91 37 76 98 67 49 19 68 33 79 13 80 57  6 26 82
 99 12 59 61 42 72  0 28 94 10 84 81 56 71 58 51 54  7 90 66 74 45 15 22
 75 11 41 52]
Traceback (most recent call last):
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/zoo/signal_game/train.py", line 167, in <module>
    trainer.train(n_epochs=opts.n_epochs)  # default is 10
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/core/trainers.py", line 158, in train
    train_loss, train_rest = self.train_epoch()
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/core/trainers.py", line 132, in train_epoch
    for batch in self.train_data:
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/zoo/signal_game/sgdata.py", line 71, in __next__
    batch_data = np.stack(batch_data, np.array(dims).flatten(), axis = 0)
  File "<__array_function__ internals>", line 4, in stack
TypeError: _stack_dispatcher() got multiple values for argument 'axis'
➜  EGG git:(master) ✗ sh start_signal_game.sh




----------------train
train data: <class 'egg.zoo.signal_game.sgdata.OneHotLoader'>
[79 94  3  6 10 87  5 97 72 37 96 41 20 45 48 61 59 46 53 15 24 55 27  1
 50 63 40 76 22 12 98  2 75 66 52 65  9 71 33 88 90 29 34 78 32 93 74 81
 64 95 57 36  0 16 11 89 86 43 69 47 62 35 19 51 77  7 26 39 56 70 91 28
 18 80  8 67 58 17 99 85 30 84 73 68 44 92 13 49 82 21 38 83 60 14 25  4
 42 54 31 23]
[21 85 37 23 31 10  6 41 50 99 63 58 26 91 65 12 49 47 13 88 90 53 14 62
 74 32 67 87 38 20 18 15 28 44 46 17 16 79 89 96 29 51 69 98 25 52  0  4
 43 78 33  2 66 27 40 55 75  9 68 57 39 35 22 36 48 70 77  5 76 95  8 83
 80 71 73 84 45 11 82  3 24 56 59 81 93 34 30 97  7 94  1 64 60 72 86 92
 42 61 19 54]
[35 63 11 41 43 26 56  2 48 76 96 45  6 19 97 20 52 83  0 46 78 59 16 61
 71 14  4 60 81 70  9 54 23  1 28 18 79 62 47 34 69 75 17 57 87 89 85  5
 68 37 98 65 12 53  8 24 90 30 32 36 15 93  3 74 10 77 42 13 51 49 31 27
 21 88 64 67 82 22 95 38 29 40 84 72 25 39 94 99 58 33 91 44 73  7 50 92
 66 86 55 80]
batch shape:  (3, 300)
batch: <class 'list'>
batch:  dim2
wrapper: tensor([[ 0., 99.,  3.,  6., 10., 87.,  5., 97., 72., 37., 96., 41., 20., 45.,
         48., 61., 59., 46., 53., 15., 24., 55., 27.,  1., 50., 63., 40., 76.,
         22., 12., 98.,  2., 75., 66., 52., 65.,  9., 71., 33., 88., 90., 29.,
         34., 78., 32., 93., 74., 81., 64., 95., 57., 36., 79., 16., 11., 89.,
         86., 43., 69., 47., 62., 35., 19., 51., 77.,  7., 26., 39., 56., 70.,
         91., 28., 18., 80.,  8., 67., 58., 17., 94., 85., 30., 84., 73., 68.,
         44., 92., 13., 49., 82., 21., 38., 83., 60., 14., 25.,  4., 42., 54.,
         31., 23., 21., 85.,  0., 99., 31., 10.,  6., 41., 50., 23., 63., 58.,
         26., 91., 65., 12., 49., 47., 13., 88., 90., 53., 14., 62., 74., 32.,
         67., 87., 38., 20., 18., 15., 28., 44., 46., 17., 16., 79., 89., 96.,
         29., 51., 69., 98., 25., 52., 37.,  4., 43., 78., 33.,  2., 66., 27.,
         40., 55., 75.,  9., 68., 57., 39., 35., 22., 36., 48., 70., 77.,  5.,
         76., 95.,  8., 83., 80., 71., 73., 84., 45., 11., 82.,  3., 24., 56.,
         59., 81., 93., 34., 30., 97.,  7., 94.,  1., 64., 60., 72., 86., 92.,
         42., 61., 19., 54., 35., 63., 11., 41.,  0., 99., 56.,  2., 48., 76.,
         96., 45.,  6., 19., 97., 20., 52., 83., 43., 46., 78., 59., 16., 61.,
         71., 14.,  4., 60., 81., 70.,  9., 54., 23.,  1., 28., 18., 79., 62.,
         47., 34., 69., 75., 17., 57., 87., 89., 85.,  5., 68., 37., 98., 65.,
         12., 53.,  8., 24., 90., 30., 32., 36., 15., 93.,  3., 74., 10., 77.,
         42., 13., 51., 49., 31., 27., 21., 88., 64., 67., 82., 22., 95., 38.,
         29., 40., 84., 72., 25., 39., 94., 26., 58., 33., 91., 44., 73.,  7.,
         50., 92., 66., 86., 55., 80.],
        [ 0., 99.,  3.,  6., 10., 87.,  5., 97., 72., 37., 96., 41., 20., 45.,
         48., 61., 59., 46., 53., 15., 24., 55., 27.,  1., 50., 63., 40., 76.,
         22., 12., 98.,  2., 75., 66., 52., 65.,  9., 71., 33., 88., 90., 29.,
         34., 78., 32., 93., 74., 81., 64., 95., 57., 36., 79., 16., 11., 89.,
         86., 43., 69., 47., 62., 35., 19., 51., 77.,  7., 26., 39., 56., 70.,
         91., 28., 18., 80.,  8., 67., 58., 17., 94., 85., 30., 84., 73., 68.,
         44., 92., 13., 49., 82., 21., 38., 83., 60., 14., 25.,  4., 42., 54.,
         31., 23., 21., 85.,  0., 99., 31., 10.,  6., 41., 50., 23., 63., 58.,
         26., 91., 65., 12., 49., 47., 13., 88., 90., 53., 14., 62., 74., 32.,
         67., 87., 38., 20., 18., 15., 28., 44., 46., 17., 16., 79., 89., 96.,
         29., 51., 69., 98., 25., 52., 37.,  4., 43., 78., 33.,  2., 66., 27.,
         40., 55., 75.,  9., 68., 57., 39., 35., 22., 36., 48., 70., 77.,  5.,
         76., 95.,  8., 83., 80., 71., 73., 84., 45., 11., 82.,  3., 24., 56.,
         59., 81., 93., 34., 30., 97.,  7., 94.,  1., 64., 60., 72., 86., 92.,
         42., 61., 19., 54., 35., 63., 11., 41.,  0., 99., 56.,  2., 48., 76.,
         96., 45.,  6., 19., 97., 20., 52., 83., 43., 46., 78., 59., 16., 61.,
         71., 14.,  4., 60., 81., 70.,  9., 54., 23.,  1., 28., 18., 79., 62.,
         47., 34., 69., 75., 17., 57., 87., 89., 85.,  5., 68., 37., 98., 65.,
         12., 53.,  8., 24., 90., 30., 32., 36., 15., 93.,  3., 74., 10., 77.,
         42., 13., 51., 49., 31., 27., 21., 88., 64., 67., 82., 22., 95., 38.,
         29., 40., 84., 72., 25., 39., 94., 26., 58., 33., 91., 44., 73.,  7.,
         50., 92., 66., 86., 55., 80.],
        [ 0., 99.,  3.,  6., 10., 87.,  5., 97., 72., 37., 96., 41., 20., 45.,
         48., 61., 59., 46., 53., 15., 24., 55., 27.,  1., 50., 63., 40., 76.,
         22., 12., 98.,  2., 75., 66., 52., 65.,  9., 71., 33., 88., 90., 29.,
         34., 78., 32., 93., 74., 81., 64., 95., 57., 36., 79., 16., 11., 89.,
         86., 43., 69., 47., 62., 35., 19., 51., 77.,  7., 26., 39., 56., 70.,
         91., 28., 18., 80.,  8., 67., 58., 17., 94., 85., 30., 84., 73., 68.,
         44., 92., 13., 49., 82., 21., 38., 83., 60., 14., 25.,  4., 42., 54.,
         31., 23., 21., 85.,  0., 99., 31., 10.,  6., 41., 50., 23., 63., 58.,
         26., 91., 65., 12., 49., 47., 13., 88., 90., 53., 14., 62., 74., 32.,
         67., 87., 38., 20., 18., 15., 28., 44., 46., 17., 16., 79., 89., 96.,
         29., 51., 69., 98., 25., 52., 37.,  4., 43., 78., 33.,  2., 66., 27.,
         40., 55., 75.,  9., 68., 57., 39., 35., 22., 36., 48., 70., 77.,  5.,
         76., 95.,  8., 83., 80., 71., 73., 84., 45., 11., 82.,  3., 24., 56.,
         59., 81., 93., 34., 30., 97.,  7., 94.,  1., 64., 60., 72., 86., 92.,
         42., 61., 19., 54., 35., 63., 11., 41.,  0., 99., 56.,  2., 48., 76.,
         96., 45.,  6., 19., 97., 20., 52., 83., 43., 46., 78., 59., 16., 61.,
         71., 14.,  4., 60., 81., 70.,  9., 54., 23.,  1., 28., 18., 79., 62.,
         47., 34., 69., 75., 17., 57., 87., 89., 85.,  5., 68., 37., 98., 65.,
         12., 53.,  8., 24., 90., 30., 32., 36., 15., 93.,  3., 74., 10., 77.,
         42., 13., 51., 49., 31., 27., 21., 88., 64., 67., 82., 22., 95., 38.,
         29., 40., 84., 72., 25., 39., 94., 26., 58., 33., 91., 44., 73.,  7.,
         50., 92., 66., 86., 55., 80.]])
game size: 2
shape of tensor  torch.Size([300])
Tensor: tensor([ 0., 99.,  3.,  6., 10., 87.,  5., 97., 72., 37., 96., 41., 20., 45.,
        48., 61., 59., 46., 53., 15., 24., 55., 27.,  1., 50., 63., 40., 76.,
        22., 12., 98.,  2., 75., 66., 52., 65.,  9., 71., 33., 88., 90., 29.,
        34., 78., 32., 93., 74., 81., 64., 95., 57., 36., 79., 16., 11., 89.,
        86., 43., 69., 47., 62., 35., 19., 51., 77.,  7., 26., 39., 56., 70.,
        91., 28., 18., 80.,  8., 67., 58., 17., 94., 85., 30., 84., 73., 68.,
        44., 92., 13., 49., 82., 21., 38., 83., 60., 14., 25.,  4., 42., 54.,
        31., 23., 21., 85.,  0., 99., 31., 10.,  6., 41., 50., 23., 63., 58.,
        26., 91., 65., 12., 49., 47., 13., 88., 90., 53., 14., 62., 74., 32.,
        67., 87., 38., 20., 18., 15., 28., 44., 46., 17., 16., 79., 89., 96.,
        29., 51., 69., 98., 25., 52., 37.,  4., 43., 78., 33.,  2., 66., 27.,
        40., 55., 75.,  9., 68., 57., 39., 35., 22., 36., 48., 70., 77.,  5.,
        76., 95.,  8., 83., 80., 71., 73., 84., 45., 11., 82.,  3., 24., 56.,
        59., 81., 93., 34., 30., 97.,  7., 94.,  1., 64., 60., 72., 86., 92.,
        42., 61., 19., 54., 35., 63., 11., 41.,  0., 99., 56.,  2., 48., 76.,
        96., 45.,  6., 19., 97., 20., 52., 83., 43., 46., 78., 59., 16., 61.,
        71., 14.,  4., 60., 81., 70.,  9., 54., 23.,  1., 28., 18., 79., 62.,
        47., 34., 69., 75., 17., 57., 87., 89., 85.,  5., 68., 37., 98., 65.,
        12., 53.,  8., 24., 90., 30., 32., 36., 15., 93.,  3., 74., 10., 77.,
        42., 13., 51., 49., 31., 27., 21., 88., 64., 67., 82., 22., 95., 38.,
        29., 40., 84., 72., 25., 39., 94., 26., 58., 33., 91., 44., 73.,  7.,
        50., 92., 66., 86., 55., 80.])
Traceback (most recent call last):
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/zoo/signal_game/train.py", line 167, in <module>
    trainer.train(n_epochs=opts.n_epochs)  # default is 10
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/core/trainers.py", line 158, in train
    train_loss, train_rest = self.train_epoch()
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/core/trainers.py", line 138, in train_epoch
    optimized_loss, rest = self.game(*batch)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/torch/nn/modules/module.py", line 547, in __call__
    result = self.forward(*input, **kwargs)
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/core/reinforce_wrappers.py", line 113, in forward
    message, sender_log_prob, sender_entropy = self.sender(sender_input)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/torch/nn/modules/module.py", line 547, in __call__
    result = self.forward(*input, **kwargs)
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/core/reinforce_wrappers.py", line 42, in forward
    logits = self.agent(*args, **kwargs)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/torch/nn/modules/module.py", line 547, in __call__
    result = self.forward(*input, **kwargs)
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/zoo/signal_game/archs.py", line 31, in forward
    emb = self.return_embeddings(x)
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/zoo/signal_game/archs.py", line 65, in return_embeddings
    h_i = self.lin1(h)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/torch/nn/modules/module.py", line 547, in __call__
    result = self.forward(*input, **kwargs)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/torch/nn/modules/linear.py", line 87, in forward
    return F.linear(input, self.weight, self.bias)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/torch/nn/functional.py", line 1371, in linear
    output = input.matmul(weight.t())
RuntimeError: size mismatch, m1: [1 x 300], m2: [4096 x 50] at ../aten/src/TH/generic/THTensorMath.cpp:752
➜  EGG git:(master) ✗ sh start_signal_game.sh




----------------train
train data: <class 'egg.zoo.signal_game.sgdata.OneHotLoader'>
[41 44 86 49 66 52 48 26 73  2 74 21 85 79 23 58 35 46 53 36 80  8 92 72
 68 84 31 71 47 61 87 11 64 57  9 56 25 29  7 10 18 60 59 24 81 32 33  4
 63 14 20 51 78 97 28 94 67 69 30 45 65  3 34 95 83 55 19 77 13  1 91 93
 43  5 38 90 37 88 12 54 96 16 76  0 89 15 22 75 70  6 27 99 42 40 82 62
 50 98 39 17]
[ 6 94 70 26 17 90 78 82 73 76 12 62 30 19 49 59 83 58 67 47 23  9 96  4
 38  1 64 51 24 27 18 20 16 56 79 77 86 33 45 31 55 91 74 54 44 48 81 40
 22 32 43 85 35 66 87 95 39 57 89 61 60 28 63 29 75 53  8 97  7 71 65 41
 21 10  3 36 80 46 68 13 15 69  2 88 99 84 52 93  0 92 11 14  5 25 34 72
 50 98 42 37]
[75 98 16 59 80 57  5 89 35 71 24 73 33 79 68 37 64 60 31 96 27 87  0  8
 44 42 11 54 76 48 65 10 39 53 23 62 21 13 30 67 36 56 84 22 28 74 61 51
 49 82 66 99 83 94 12 85  7 95 69 34 86 93  9 72 90 50 91 18 41 63 45  6
 55 77 43 20 40 17 70  4 46 97 58 47 38 15  3 52 26 81 19 14 25  1 32 29
 92  2 88 78]
batch shape:  (3, 300)
batch: <class 'list'>
batch:  dim2
wrapper: tensor([[ 0., 99., 86., 49., 66., 52., 48., 26., 73.,  2., 74., 21., 85., 79.,
         23., 58., 35., 46., 53., 36., 80.,  8., 92., 72., 68., 84., 31., 71.,
         47., 61., 87., 11., 64., 57.,  9., 56., 25., 29.,  7., 10., 18., 60.,
         59., 24., 81., 32., 33.,  4., 63., 14., 20., 51., 78., 97., 28., 94.,
         67., 69., 30., 45., 65.,  3., 34., 95., 83., 55., 19., 77., 13.,  1.,
         91., 93., 43.,  5., 38., 90., 37., 88., 12., 54., 96., 16., 76., 41.,
         89., 15., 22., 75., 70.,  6., 27., 44., 42., 40., 82., 62., 50., 98.,
         39., 17.,  6., 94.,  0., 99., 17., 90., 78., 82., 73., 76., 12., 62.,
         30., 19., 49., 59., 83., 58., 67., 47., 23.,  9., 96.,  4., 38.,  1.,
         64., 51., 24., 27., 18., 20., 16., 56., 79., 77., 86., 33., 45., 31.,
         55., 91., 74., 54., 44., 48., 81., 40., 22., 32., 43., 85., 35., 66.,
         87., 95., 39., 57., 89., 61., 60., 28., 63., 29., 75., 53.,  8., 97.,
          7., 71., 65., 41., 21., 10.,  3., 36., 80., 46., 68., 13., 15., 69.,
          2., 88., 26., 84., 52., 93., 70., 92., 11., 14.,  5., 25., 34., 72.,
         50., 98., 42., 37., 75., 98., 16., 59.,  0., 99.,  5., 89., 35., 71.,
         24., 73., 33., 79., 68., 37., 64., 60., 31., 96., 27., 87., 80.,  8.,
         44., 42., 11., 54., 76., 48., 65., 10., 39., 53., 23., 62., 21., 13.,
         30., 67., 36., 56., 84., 22., 28., 74., 61., 51., 49., 82., 66., 57.,
         83., 94., 12., 85.,  7., 95., 69., 34., 86., 93.,  9., 72., 90., 50.,
         91., 18., 41., 63., 45.,  6., 55., 77., 43., 20., 40., 17., 70.,  4.,
         46., 97., 58., 47., 38., 15.,  3., 52., 26., 81., 19., 14., 25.,  1.,
         32., 29., 92.,  2., 88., 78.],
        [ 0., 99., 86., 49., 66., 52., 48., 26., 73.,  2., 74., 21., 85., 79.,
         23., 58., 35., 46., 53., 36., 80.,  8., 92., 72., 68., 84., 31., 71.,
         47., 61., 87., 11., 64., 57.,  9., 56., 25., 29.,  7., 10., 18., 60.,
         59., 24., 81., 32., 33.,  4., 63., 14., 20., 51., 78., 97., 28., 94.,
         67., 69., 30., 45., 65.,  3., 34., 95., 83., 55., 19., 77., 13.,  1.,
         91., 93., 43.,  5., 38., 90., 37., 88., 12., 54., 96., 16., 76., 41.,
         89., 15., 22., 75., 70.,  6., 27., 44., 42., 40., 82., 62., 50., 98.,
         39., 17.,  6., 94.,  0., 99., 17., 90., 78., 82., 73., 76., 12., 62.,
         30., 19., 49., 59., 83., 58., 67., 47., 23.,  9., 96.,  4., 38.,  1.,
         64., 51., 24., 27., 18., 20., 16., 56., 79., 77., 86., 33., 45., 31.,
         55., 91., 74., 54., 44., 48., 81., 40., 22., 32., 43., 85., 35., 66.,
         87., 95., 39., 57., 89., 61., 60., 28., 63., 29., 75., 53.,  8., 97.,
          7., 71., 65., 41., 21., 10.,  3., 36., 80., 46., 68., 13., 15., 69.,
          2., 88., 26., 84., 52., 93., 70., 92., 11., 14.,  5., 25., 34., 72.,
         50., 98., 42., 37., 75., 98., 16., 59.,  0., 99.,  5., 89., 35., 71.,
         24., 73., 33., 79., 68., 37., 64., 60., 31., 96., 27., 87., 80.,  8.,
         44., 42., 11., 54., 76., 48., 65., 10., 39., 53., 23., 62., 21., 13.,
         30., 67., 36., 56., 84., 22., 28., 74., 61., 51., 49., 82., 66., 57.,
         83., 94., 12., 85.,  7., 95., 69., 34., 86., 93.,  9., 72., 90., 50.,
         91., 18., 41., 63., 45.,  6., 55., 77., 43., 20., 40., 17., 70.,  4.,
         46., 97., 58., 47., 38., 15.,  3., 52., 26., 81., 19., 14., 25.,  1.,
         32., 29., 92.,  2., 88., 78.],
        [ 0., 99., 86., 49., 66., 52., 48., 26., 73.,  2., 74., 21., 85., 79.,
         23., 58., 35., 46., 53., 36., 80.,  8., 92., 72., 68., 84., 31., 71.,
         47., 61., 87., 11., 64., 57.,  9., 56., 25., 29.,  7., 10., 18., 60.,
         59., 24., 81., 32., 33.,  4., 63., 14., 20., 51., 78., 97., 28., 94.,
         67., 69., 30., 45., 65.,  3., 34., 95., 83., 55., 19., 77., 13.,  1.,
         91., 93., 43.,  5., 38., 90., 37., 88., 12., 54., 96., 16., 76., 41.,
         89., 15., 22., 75., 70.,  6., 27., 44., 42., 40., 82., 62., 50., 98.,
         39., 17.,  6., 94.,  0., 99., 17., 90., 78., 82., 73., 76., 12., 62.,
         30., 19., 49., 59., 83., 58., 67., 47., 23.,  9., 96.,  4., 38.,  1.,
         64., 51., 24., 27., 18., 20., 16., 56., 79., 77., 86., 33., 45., 31.,
         55., 91., 74., 54., 44., 48., 81., 40., 22., 32., 43., 85., 35., 66.,
         87., 95., 39., 57., 89., 61., 60., 28., 63., 29., 75., 53.,  8., 97.,
          7., 71., 65., 41., 21., 10.,  3., 36., 80., 46., 68., 13., 15., 69.,
          2., 88., 26., 84., 52., 93., 70., 92., 11., 14.,  5., 25., 34., 72.,
         50., 98., 42., 37., 75., 98., 16., 59.,  0., 99.,  5., 89., 35., 71.,
         24., 73., 33., 79., 68., 37., 64., 60., 31., 96., 27., 87., 80.,  8.,
         44., 42., 11., 54., 76., 48., 65., 10., 39., 53., 23., 62., 21., 13.,
         30., 67., 36., 56., 84., 22., 28., 74., 61., 51., 49., 82., 66., 57.,
         83., 94., 12., 85.,  7., 95., 69., 34., 86., 93.,  9., 72., 90., 50.,
         91., 18., 41., 63., 45.,  6., 55., 77., 43., 20., 40., 17., 70.,  4.,
         46., 97., 58., 47., 38., 15.,  3., 52., 26., 81., 19., 14., 25.,  1.,
         32., 29., 92.,  2., 88., 78.]])
game size: 2
shape of tensor  torch.Size([300])
Tensor: tensor([ 0., 99., 86., 49., 66., 52., 48., 26., 73.,  2., 74., 21., 85., 79.,
        23., 58., 35., 46., 53., 36., 80.,  8., 92., 72., 68., 84., 31., 71.,
        47., 61., 87., 11., 64., 57.,  9., 56., 25., 29.,  7., 10., 18., 60.,
        59., 24., 81., 32., 33.,  4., 63., 14., 20., 51., 78., 97., 28., 94.,
        67., 69., 30., 45., 65.,  3., 34., 95., 83., 55., 19., 77., 13.,  1.,
        91., 93., 43.,  5., 38., 90., 37., 88., 12., 54., 96., 16., 76., 41.,
        89., 15., 22., 75., 70.,  6., 27., 44., 42., 40., 82., 62., 50., 98.,
        39., 17.,  6., 94.,  0., 99., 17., 90., 78., 82., 73., 76., 12., 62.,
        30., 19., 49., 59., 83., 58., 67., 47., 23.,  9., 96.,  4., 38.,  1.,
        64., 51., 24., 27., 18., 20., 16., 56., 79., 77., 86., 33., 45., 31.,
        55., 91., 74., 54., 44., 48., 81., 40., 22., 32., 43., 85., 35., 66.,
        87., 95., 39., 57., 89., 61., 60., 28., 63., 29., 75., 53.,  8., 97.,
         7., 71., 65., 41., 21., 10.,  3., 36., 80., 46., 68., 13., 15., 69.,
         2., 88., 26., 84., 52., 93., 70., 92., 11., 14.,  5., 25., 34., 72.,
        50., 98., 42., 37., 75., 98., 16., 59.,  0., 99.,  5., 89., 35., 71.,
        24., 73., 33., 79., 68., 37., 64., 60., 31., 96., 27., 87., 80.,  8.,
        44., 42., 11., 54., 76., 48., 65., 10., 39., 53., 23., 62., 21., 13.,
        30., 67., 36., 56., 84., 22., 28., 74., 61., 51., 49., 82., 66., 57.,
        83., 94., 12., 85.,  7., 95., 69., 34., 86., 93.,  9., 72., 90., 50.,
        91., 18., 41., 63., 45.,  6., 55., 77., 43., 20., 40., 17., 70.,  4.,
        46., 97., 58., 47., 38., 15.,  3., 52., 26., 81., 19., 14., 25.,  1.,
        32., 29., 92.,  2., 88., 78.])
Traceback (most recent call last):
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/zoo/signal_game/train.py", line 167, in <module>
    trainer.train(n_epochs=opts.n_epochs)  # default is 10
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/core/trainers.py", line 158, in train
    train_loss, train_rest = self.train_epoch()
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/core/trainers.py", line 138, in train_epoch
    optimized_loss, rest = self.game(*batch)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/torch/nn/modules/module.py", line 547, in __call__
    result = self.forward(*input, **kwargs)
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/core/reinforce_wrappers.py", line 113, in forward
    message, sender_log_prob, sender_entropy = self.sender(sender_input)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/torch/nn/modules/module.py", line 547, in __call__
    result = self.forward(*input, **kwargs)
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/core/reinforce_wrappers.py", line 42, in forward
    logits = self.agent(*args, **kwargs)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/torch/nn/modules/module.py", line 547, in __call__
    result = self.forward(*input, **kwargs)
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/zoo/signal_game/archs.py", line 31, in forward
    emb = self.return_embeddings(x)
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/zoo/signal_game/archs.py", line 65, in return_embeddings
    h_i = self.lin1(h)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/torch/nn/modules/module.py", line 547, in __call__
    result = self.forward(*input, **kwargs)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/torch/nn/modules/linear.py", line 87, in forward
    return F.linear(input, self.weight, self.bias)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/torch/nn/functional.py", line 1371, in linear
    output = input.matmul(weight.t())
RuntimeError: size mismatch, m1: [1 x 300], m2: [4096 x 50] at ../aten/src/TH/generic/THTensorMath.cpp:752
➜  EGG git:(master) ✗ sh start_signal_game.sh




----------------train
train data: <class 'egg.zoo.signal_game.sgdata.OneHotLoader'>
[73 61 23 59 81 49 86 26 58 60 36 35 55 79 24 96 67 41 95 90 17  7 21 53
 32 50 98 63  3 10 62 92 52 80 25 68 74 77 31 88 70 20 19 44 76 66 51 84
 47  5 29 46 16 42  6 57 89 13 15  9 83 18 33 12  1 72 82 69 37 54 43 85
 71 34 30 56 65 45  4 93 87  2 99  8 27 39 40 64  0 22 28 91 94 75 11 48
 38 78 14 97]
[31 47 90 21 10 17 82 22 29 79 70 97 78 40 46 54 85 62 81 28 86 42 18 58
 27 14 37 39 77 94 89  1 30 75 43 57 88 25 35 32 63 33 66 68 48 19  8 49
  4 12 80 67 95 11 69  6  2 96 16 41  7 34 50  5  9 65 45  0 76 24 60 91
 64 26 55 13  3 56 61 83 99 73 52 23 93 87 59 72 74 92 84 20 15 36 51 44
 38 98 53 71]
[17  3 49 87  9 31 26 18 61 41 36 38 11 44 10  0 35 16 23 80 68 99 75 56
 77 30 90 91 85 98 57 43 92 63 45 71 69 42 12 28 60 72 15  6  4 67 27  7
 70 19 20 52 78 96 81 14 94 13 62 24 84 86 74 46 55 33 22 34 83 73 50 47
 95 59  5 88  1 54 37  8 82 39 51 48 21  2 40 76 65 66 25 32 29 64 53 58
 89 79 97 93]
batch shape:  (3, 300)
batch: <class 'list'>
batch:  dim2
wrapper: tensor([[ 0., 99., 23., 59., 81., 49., 86., 26., 58., 60., 36., 35., 55., 79.,
         24., 96., 67., 41., 95., 90., 17.,  7., 21., 53., 32., 50., 98., 63.,
          3., 10., 62., 92., 52., 80., 25., 68., 74., 77., 31., 88., 70., 20.,
         19., 44., 76., 66., 51., 84., 47.,  5., 29., 46., 16., 42.,  6., 57.,
         89., 13., 15.,  9., 83., 18., 33., 12.,  1., 72., 82., 69., 37., 54.,
         43., 85., 71., 34., 30., 56., 65., 45.,  4., 93., 87.,  2., 61.,  8.,
         27., 39., 40., 64., 73., 22., 28., 91., 94., 75., 11., 48., 38., 78.,
         14., 97., 31., 47.,  0., 99., 10., 17., 82., 22., 29., 79., 70., 97.,
         78., 40., 46., 54., 85., 62., 81., 28., 86., 42., 18., 58., 27., 14.,
         37., 39., 77., 94., 89.,  1., 30., 75., 43., 57., 88., 25., 35., 32.,
         63., 33., 66., 68., 48., 19.,  8., 49.,  4., 12., 80., 67., 95., 11.,
         69.,  6.,  2., 96., 16., 41.,  7., 34., 50.,  5.,  9., 65., 45., 90.,
         76., 24., 60., 91., 64., 26., 55., 13.,  3., 56., 61., 83., 21., 73.,
         52., 23., 93., 87., 59., 72., 74., 92., 84., 20., 15., 36., 51., 44.,
         38., 98., 53., 71., 17.,  3., 49., 87.,  0., 99., 26., 18., 61., 41.,
         36., 38., 11., 44., 10.,  9., 35., 16., 23., 80., 68., 31., 75., 56.,
         77., 30., 90., 91., 85., 98., 57., 43., 92., 63., 45., 71., 69., 42.,
         12., 28., 60., 72., 15.,  6.,  4., 67., 27.,  7., 70., 19., 20., 52.,
         78., 96., 81., 14., 94., 13., 62., 24., 84., 86., 74., 46., 55., 33.,
         22., 34., 83., 73., 50., 47., 95., 59.,  5., 88.,  1., 54., 37.,  8.,
         82., 39., 51., 48., 21.,  2., 40., 76., 65., 66., 25., 32., 29., 64.,
         53., 58., 89., 79., 97., 93.],
        [ 0., 99., 23., 59., 81., 49., 86., 26., 58., 60., 36., 35., 55., 79.,
         24., 96., 67., 41., 95., 90., 17.,  7., 21., 53., 32., 50., 98., 63.,
          3., 10., 62., 92., 52., 80., 25., 68., 74., 77., 31., 88., 70., 20.,
         19., 44., 76., 66., 51., 84., 47.,  5., 29., 46., 16., 42.,  6., 57.,
         89., 13., 15.,  9., 83., 18., 33., 12.,  1., 72., 82., 69., 37., 54.,
         43., 85., 71., 34., 30., 56., 65., 45.,  4., 93., 87.,  2., 61.,  8.,
         27., 39., 40., 64., 73., 22., 28., 91., 94., 75., 11., 48., 38., 78.,
         14., 97., 31., 47.,  0., 99., 10., 17., 82., 22., 29., 79., 70., 97.,
         78., 40., 46., 54., 85., 62., 81., 28., 86., 42., 18., 58., 27., 14.,
         37., 39., 77., 94., 89.,  1., 30., 75., 43., 57., 88., 25., 35., 32.,
         63., 33., 66., 68., 48., 19.,  8., 49.,  4., 12., 80., 67., 95., 11.,
         69.,  6.,  2., 96., 16., 41.,  7., 34., 50.,  5.,  9., 65., 45., 90.,
         76., 24., 60., 91., 64., 26., 55., 13.,  3., 56., 61., 83., 21., 73.,
         52., 23., 93., 87., 59., 72., 74., 92., 84., 20., 15., 36., 51., 44.,
         38., 98., 53., 71., 17.,  3., 49., 87.,  0., 99., 26., 18., 61., 41.,
         36., 38., 11., 44., 10.,  9., 35., 16., 23., 80., 68., 31., 75., 56.,
         77., 30., 90., 91., 85., 98., 57., 43., 92., 63., 45., 71., 69., 42.,
         12., 28., 60., 72., 15.,  6.,  4., 67., 27.,  7., 70., 19., 20., 52.,
         78., 96., 81., 14., 94., 13., 62., 24., 84., 86., 74., 46., 55., 33.,
         22., 34., 83., 73., 50., 47., 95., 59.,  5., 88.,  1., 54., 37.,  8.,
         82., 39., 51., 48., 21.,  2., 40., 76., 65., 66., 25., 32., 29., 64.,
         53., 58., 89., 79., 97., 93.],
        [ 0., 99., 23., 59., 81., 49., 86., 26., 58., 60., 36., 35., 55., 79.,
         24., 96., 67., 41., 95., 90., 17.,  7., 21., 53., 32., 50., 98., 63.,
          3., 10., 62., 92., 52., 80., 25., 68., 74., 77., 31., 88., 70., 20.,
         19., 44., 76., 66., 51., 84., 47.,  5., 29., 46., 16., 42.,  6., 57.,
         89., 13., 15.,  9., 83., 18., 33., 12.,  1., 72., 82., 69., 37., 54.,
         43., 85., 71., 34., 30., 56., 65., 45.,  4., 93., 87.,  2., 61.,  8.,
         27., 39., 40., 64., 73., 22., 28., 91., 94., 75., 11., 48., 38., 78.,
         14., 97., 31., 47.,  0., 99., 10., 17., 82., 22., 29., 79., 70., 97.,
         78., 40., 46., 54., 85., 62., 81., 28., 86., 42., 18., 58., 27., 14.,
         37., 39., 77., 94., 89.,  1., 30., 75., 43., 57., 88., 25., 35., 32.,
         63., 33., 66., 68., 48., 19.,  8., 49.,  4., 12., 80., 67., 95., 11.,
         69.,  6.,  2., 96., 16., 41.,  7., 34., 50.,  5.,  9., 65., 45., 90.,
         76., 24., 60., 91., 64., 26., 55., 13.,  3., 56., 61., 83., 21., 73.,
         52., 23., 93., 87., 59., 72., 74., 92., 84., 20., 15., 36., 51., 44.,
         38., 98., 53., 71., 17.,  3., 49., 87.,  0., 99., 26., 18., 61., 41.,
         36., 38., 11., 44., 10.,  9., 35., 16., 23., 80., 68., 31., 75., 56.,
         77., 30., 90., 91., 85., 98., 57., 43., 92., 63., 45., 71., 69., 42.,
         12., 28., 60., 72., 15.,  6.,  4., 67., 27.,  7., 70., 19., 20., 52.,
         78., 96., 81., 14., 94., 13., 62., 24., 84., 86., 74., 46., 55., 33.,
         22., 34., 83., 73., 50., 47., 95., 59.,  5., 88.,  1., 54., 37.,  8.,
         82., 39., 51., 48., 21.,  2., 40., 76., 65., 66., 25., 32., 29., 64.,
         53., 58., 89., 79., 97., 93.]])
game size: 2
shape of tensor  torch.Size([300])
Tensor: tensor([ 0., 99., 23., 59., 81., 49., 86., 26., 58., 60., 36., 35., 55., 79.,
        24., 96., 67., 41., 95., 90., 17.,  7., 21., 53., 32., 50., 98., 63.,
         3., 10., 62., 92., 52., 80., 25., 68., 74., 77., 31., 88., 70., 20.,
        19., 44., 76., 66., 51., 84., 47.,  5., 29., 46., 16., 42.,  6., 57.,
        89., 13., 15.,  9., 83., 18., 33., 12.,  1., 72., 82., 69., 37., 54.,
        43., 85., 71., 34., 30., 56., 65., 45.,  4., 93., 87.,  2., 61.,  8.,
        27., 39., 40., 64., 73., 22., 28., 91., 94., 75., 11., 48., 38., 78.,
        14., 97., 31., 47.,  0., 99., 10., 17., 82., 22., 29., 79., 70., 97.,
        78., 40., 46., 54., 85., 62., 81., 28., 86., 42., 18., 58., 27., 14.,
        37., 39., 77., 94., 89.,  1., 30., 75., 43., 57., 88., 25., 35., 32.,
        63., 33., 66., 68., 48., 19.,  8., 49.,  4., 12., 80., 67., 95., 11.,
        69.,  6.,  2., 96., 16., 41.,  7., 34., 50.,  5.,  9., 65., 45., 90.,
        76., 24., 60., 91., 64., 26., 55., 13.,  3., 56., 61., 83., 21., 73.,
        52., 23., 93., 87., 59., 72., 74., 92., 84., 20., 15., 36., 51., 44.,
        38., 98., 53., 71., 17.,  3., 49., 87.,  0., 99., 26., 18., 61., 41.,
        36., 38., 11., 44., 10.,  9., 35., 16., 23., 80., 68., 31., 75., 56.,
        77., 30., 90., 91., 85., 98., 57., 43., 92., 63., 45., 71., 69., 42.,
        12., 28., 60., 72., 15.,  6.,  4., 67., 27.,  7., 70., 19., 20., 52.,
        78., 96., 81., 14., 94., 13., 62., 24., 84., 86., 74., 46., 55., 33.,
        22., 34., 83., 73., 50., 47., 95., 59.,  5., 88.,  1., 54., 37.,  8.,
        82., 39., 51., 48., 21.,  2., 40., 76., 65., 66., 25., 32., 29., 64.,
        53., 58., 89., 79., 97., 93.])
Traceback (most recent call last):
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/zoo/signal_game/train.py", line 167, in <module>
    trainer.train(n_epochs=opts.n_epochs)  # default is 10
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/core/trainers.py", line 158, in train
    train_loss, train_rest = self.train_epoch()
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/core/trainers.py", line 138, in train_epoch
    optimized_loss, rest = self.game(*batch)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/torch/nn/modules/module.py", line 547, in __call__
    result = self.forward(*input, **kwargs)
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/core/reinforce_wrappers.py", line 113, in forward
    message, sender_log_prob, sender_entropy = self.sender(sender_input)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/torch/nn/modules/module.py", line 547, in __call__
    result = self.forward(*input, **kwargs)
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/core/reinforce_wrappers.py", line 42, in forward
    logits = self.agent(*args, **kwargs)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/torch/nn/modules/module.py", line 547, in __call__
    result = self.forward(*input, **kwargs)
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/zoo/signal_game/archs.py", line 31, in forward
    emb = self.return_embeddings(x)
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/zoo/signal_game/archs.py", line 65, in return_embeddings
    h_i = self.lin1(h)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/torch/nn/modules/module.py", line 547, in __call__
    result = self.forward(*input, **kwargs)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/torch/nn/modules/linear.py", line 87, in forward
    return F.linear(input, self.weight, self.bias)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/torch/nn/functional.py", line 1371, in linear
    output = input.matmul(weight.t())
RuntimeError: size mismatch, m1: [1 x 300], m2: [4096 x 50] at ../aten/src/TH/generic/THTensorMath.cpp:752
➜  EGG git:(master) ✗ sh start_signal_game.sh




----------------train
train data: <class 'egg.zoo.signal_game.sgdata.OneHotLoader'>
[67 89  9 81 88 41 99 18 12 51 80 50 74 97 95 17 39 73 42 63 57  7 56 76
 64 29 45  4 44 37  3 40 54 27 31 65  5 68 43  1 55 11 21 35 13 48 66 32
 38 70 15 72  2 52 69 79 36 62 34 23  0 19 53  6 61 47 96 16 84 60 58 20
 59 46 33 90 77 91 86 78 24 49 28 75 30 71 98 10 87 82 93 94 26 22  8 14
 92 85 25 83]
[19 52 34 41 93 83 30 32 43 15 86 78 49 16 36 25 95 55 54 84 75 80 72 14
  6 85 94 64  3 66 69 37 68 51 56 71 33 11  1  9 70 17 46 87 38 26 10  0
 77 89 20 60 97 88 50 74 61 44 58 57 59 45 21 27 99 24 63 92 18 12 73 53
 47  2 82  4 35 13 62 22 81 23 40 28 90 91 96 39 76  5 65 79 31 67 98  7
  8 42 29 48]
[65 87 79 91 46 73 68 61 94 81 74 11 44  6 92  9 22 89 18  1 66 13 24 82
 37 90 75 50  3 49  2 33 85 38  7 26 60 95 16 42 21 15 41  8 52 51 29 88
 43 84 99 77 58 25 45 56 54 70 71 86 59 47 30 35 97 40 93 69 36 10  0 14
 39 62 27 17 23 83 55 28 34 19 48 63 64 20 80 32 96  4 67 98  5 72 53 31
 12 78 76 57]
batch shape:  (3, 300)
batch: <class 'list'>
batch:  dim2
wrapper: tensor([[ 0., 99.,  9., 81., 88., 41., 89., 18., 12., 51., 80., 50., 74., 97.,
         95., 17., 39., 73., 42., 63., 57.,  7., 56., 76., 64., 29., 45.,  4.,
         44., 37.,  3., 40., 54., 27., 31., 65.,  5., 68., 43.,  1., 55., 11.,
         21., 35., 13., 48., 66., 32., 38., 70., 15., 72.,  2., 52., 69., 79.,
         36., 62., 34., 23., 67., 19., 53.,  6., 61., 47., 96., 16., 84., 60.,
         58., 20., 59., 46., 33., 90., 77., 91., 86., 78., 24., 49., 28., 75.,
         30., 71., 98., 10., 87., 82., 93., 94., 26., 22.,  8., 14., 92., 85.,
         25., 83., 19., 52.,  0., 99., 93., 83., 30., 32., 43., 15., 86., 78.,
         49., 16., 36., 25., 95., 55., 54., 84., 75., 80., 72., 14.,  6., 85.,
         94., 64.,  3., 66., 69., 37., 68., 51., 56., 71., 33., 11.,  1.,  9.,
         70., 17., 46., 87., 38., 26., 10., 34., 77., 89., 20., 60., 97., 88.,
         50., 74., 61., 44., 58., 57., 59., 45., 21., 27., 41., 24., 63., 92.,
         18., 12., 73., 53., 47.,  2., 82.,  4., 35., 13., 62., 22., 81., 23.,
         40., 28., 90., 91., 96., 39., 76.,  5., 65., 79., 31., 67., 98.,  7.,
          8., 42., 29., 48., 65., 87., 79., 91.,  0., 99., 68., 61., 94., 81.,
         74., 11., 44.,  6., 92.,  9., 22., 89., 18.,  1., 66., 13., 24., 82.,
         37., 90., 75., 50.,  3., 49.,  2., 33., 85., 38.,  7., 26., 60., 95.,
         16., 42., 21., 15., 41.,  8., 52., 51., 29., 88., 43., 84., 73., 77.,
         58., 25., 45., 56., 54., 70., 71., 86., 59., 47., 30., 35., 97., 40.,
         93., 69., 36., 10., 46., 14., 39., 62., 27., 17., 23., 83., 55., 28.,
         34., 19., 48., 63., 64., 20., 80., 32., 96.,  4., 67., 98.,  5., 72.,
         53., 31., 12., 78., 76., 57.],
        [ 0., 99.,  9., 81., 88., 41., 89., 18., 12., 51., 80., 50., 74., 97.,
         95., 17., 39., 73., 42., 63., 57.,  7., 56., 76., 64., 29., 45.,  4.,
         44., 37.,  3., 40., 54., 27., 31., 65.,  5., 68., 43.,  1., 55., 11.,
         21., 35., 13., 48., 66., 32., 38., 70., 15., 72.,  2., 52., 69., 79.,
         36., 62., 34., 23., 67., 19., 53.,  6., 61., 47., 96., 16., 84., 60.,
         58., 20., 59., 46., 33., 90., 77., 91., 86., 78., 24., 49., 28., 75.,
         30., 71., 98., 10., 87., 82., 93., 94., 26., 22.,  8., 14., 92., 85.,
         25., 83., 19., 52.,  0., 99., 93., 83., 30., 32., 43., 15., 86., 78.,
         49., 16., 36., 25., 95., 55., 54., 84., 75., 80., 72., 14.,  6., 85.,
         94., 64.,  3., 66., 69., 37., 68., 51., 56., 71., 33., 11.,  1.,  9.,
         70., 17., 46., 87., 38., 26., 10., 34., 77., 89., 20., 60., 97., 88.,
         50., 74., 61., 44., 58., 57., 59., 45., 21., 27., 41., 24., 63., 92.,
         18., 12., 73., 53., 47.,  2., 82.,  4., 35., 13., 62., 22., 81., 23.,
         40., 28., 90., 91., 96., 39., 76.,  5., 65., 79., 31., 67., 98.,  7.,
          8., 42., 29., 48., 65., 87., 79., 91.,  0., 99., 68., 61., 94., 81.,
         74., 11., 44.,  6., 92.,  9., 22., 89., 18.,  1., 66., 13., 24., 82.,
         37., 90., 75., 50.,  3., 49.,  2., 33., 85., 38.,  7., 26., 60., 95.,
         16., 42., 21., 15., 41.,  8., 52., 51., 29., 88., 43., 84., 73., 77.,
         58., 25., 45., 56., 54., 70., 71., 86., 59., 47., 30., 35., 97., 40.,
         93., 69., 36., 10., 46., 14., 39., 62., 27., 17., 23., 83., 55., 28.,
         34., 19., 48., 63., 64., 20., 80., 32., 96.,  4., 67., 98.,  5., 72.,
         53., 31., 12., 78., 76., 57.],
        [ 0., 99.,  9., 81., 88., 41., 89., 18., 12., 51., 80., 50., 74., 97.,
         95., 17., 39., 73., 42., 63., 57.,  7., 56., 76., 64., 29., 45.,  4.,
         44., 37.,  3., 40., 54., 27., 31., 65.,  5., 68., 43.,  1., 55., 11.,
         21., 35., 13., 48., 66., 32., 38., 70., 15., 72.,  2., 52., 69., 79.,
         36., 62., 34., 23., 67., 19., 53.,  6., 61., 47., 96., 16., 84., 60.,
         58., 20., 59., 46., 33., 90., 77., 91., 86., 78., 24., 49., 28., 75.,
         30., 71., 98., 10., 87., 82., 93., 94., 26., 22.,  8., 14., 92., 85.,
         25., 83., 19., 52.,  0., 99., 93., 83., 30., 32., 43., 15., 86., 78.,
         49., 16., 36., 25., 95., 55., 54., 84., 75., 80., 72., 14.,  6., 85.,
         94., 64.,  3., 66., 69., 37., 68., 51., 56., 71., 33., 11.,  1.,  9.,
         70., 17., 46., 87., 38., 26., 10., 34., 77., 89., 20., 60., 97., 88.,
         50., 74., 61., 44., 58., 57., 59., 45., 21., 27., 41., 24., 63., 92.,
         18., 12., 73., 53., 47.,  2., 82.,  4., 35., 13., 62., 22., 81., 23.,
         40., 28., 90., 91., 96., 39., 76.,  5., 65., 79., 31., 67., 98.,  7.,
          8., 42., 29., 48., 65., 87., 79., 91.,  0., 99., 68., 61., 94., 81.,
         74., 11., 44.,  6., 92.,  9., 22., 89., 18.,  1., 66., 13., 24., 82.,
         37., 90., 75., 50.,  3., 49.,  2., 33., 85., 38.,  7., 26., 60., 95.,
         16., 42., 21., 15., 41.,  8., 52., 51., 29., 88., 43., 84., 73., 77.,
         58., 25., 45., 56., 54., 70., 71., 86., 59., 47., 30., 35., 97., 40.,
         93., 69., 36., 10., 46., 14., 39., 62., 27., 17., 23., 83., 55., 28.,
         34., 19., 48., 63., 64., 20., 80., 32., 96.,  4., 67., 98.,  5., 72.,
         53., 31., 12., 78., 76., 57.]])
game size: 2
shape of tensor  torch.Size([300])
Tensor: tensor([ 0., 99.,  9., 81., 88., 41., 89., 18., 12., 51., 80., 50., 74., 97.,
        95., 17., 39., 73., 42., 63., 57.,  7., 56., 76., 64., 29., 45.,  4.,
        44., 37.,  3., 40., 54., 27., 31., 65.,  5., 68., 43.,  1., 55., 11.,
        21., 35., 13., 48., 66., 32., 38., 70., 15., 72.,  2., 52., 69., 79.,
        36., 62., 34., 23., 67., 19., 53.,  6., 61., 47., 96., 16., 84., 60.,
        58., 20., 59., 46., 33., 90., 77., 91., 86., 78., 24., 49., 28., 75.,
        30., 71., 98., 10., 87., 82., 93., 94., 26., 22.,  8., 14., 92., 85.,
        25., 83., 19., 52.,  0., 99., 93., 83., 30., 32., 43., 15., 86., 78.,
        49., 16., 36., 25., 95., 55., 54., 84., 75., 80., 72., 14.,  6., 85.,
        94., 64.,  3., 66., 69., 37., 68., 51., 56., 71., 33., 11.,  1.,  9.,
        70., 17., 46., 87., 38., 26., 10., 34., 77., 89., 20., 60., 97., 88.,
        50., 74., 61., 44., 58., 57., 59., 45., 21., 27., 41., 24., 63., 92.,
        18., 12., 73., 53., 47.,  2., 82.,  4., 35., 13., 62., 22., 81., 23.,
        40., 28., 90., 91., 96., 39., 76.,  5., 65., 79., 31., 67., 98.,  7.,
         8., 42., 29., 48., 65., 87., 79., 91.,  0., 99., 68., 61., 94., 81.,
        74., 11., 44.,  6., 92.,  9., 22., 89., 18.,  1., 66., 13., 24., 82.,
        37., 90., 75., 50.,  3., 49.,  2., 33., 85., 38.,  7., 26., 60., 95.,
        16., 42., 21., 15., 41.,  8., 52., 51., 29., 88., 43., 84., 73., 77.,
        58., 25., 45., 56., 54., 70., 71., 86., 59., 47., 30., 35., 97., 40.,
        93., 69., 36., 10., 46., 14., 39., 62., 27., 17., 23., 83., 55., 28.,
        34., 19., 48., 63., 64., 20., 80., 32., 96.,  4., 67., 98.,  5., 72.,
        53., 31., 12., 78., 76., 57.])
Traceback (most recent call last):
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/zoo/signal_game/train.py", line 167, in <module>
    trainer.train(n_epochs=opts.n_epochs)  # default is 10
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/core/trainers.py", line 158, in train
    train_loss, train_rest = self.train_epoch()
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/core/trainers.py", line 138, in train_epoch
    optimized_loss, rest = self.game(*batch)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/torch/nn/modules/module.py", line 547, in __call__
    result = self.forward(*input, **kwargs)
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/core/reinforce_wrappers.py", line 113, in forward
    message, sender_log_prob, sender_entropy = self.sender(sender_input)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/torch/nn/modules/module.py", line 547, in __call__
    result = self.forward(*input, **kwargs)
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/core/reinforce_wrappers.py", line 42, in forward
    logits = self.agent(*args, **kwargs)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/torch/nn/modules/module.py", line 547, in __call__
    result = self.forward(*input, **kwargs)
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/zoo/signal_game/archs.py", line 31, in forward
    emb = self.return_embeddings(x)
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/zoo/signal_game/archs.py", line 65, in return_embeddings
    h_i = self.lin1(h)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/torch/nn/modules/module.py", line 547, in __call__
    result = self.forward(*input, **kwargs)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/torch/nn/modules/linear.py", line 87, in forward
    return F.linear(input, self.weight, self.bias)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/torch/nn/functional.py", line 1371, in linear
    output = input.matmul(weight.t())
RuntimeError: size mismatch, m1: [1 x 300], m2: [4096 x 50] at ../aten/src/TH/generic/THTensorMath.cpp:752
➜  EGG git:(master) ✗ sh start_signal_game.sh




----------------train
train data: <class 'egg.zoo.signal_game.sgdata.OneHotLoader'>
[83 90  1 80  6 86 85 93 52 35 31 46 26 65 36 84 78 34 69 44 81  7 11 75
 19 66 98 49 55 24 23 79  8 48 76 94 89 56 60 37 87 29  9 82 53 40 88 14
 62 57 13 33 17 38 64 25 42 67 77 28 41 27 95  5 32 70 21 73 16 59 72 15
 91 54 96 30  4 50  0 99 58 18 22  3 39 97 71  2 20 68 10 45 47 63 51 74
 92 43 61 12]
[16 21 41 86 76  2 88 56  8 97 96 66 29 45 50 52 19 20 49 47 84 26 12 59
 63 70 33 85 55 39 77 24 64 32 79 10 48 78 23 74 72 98 27 60 25 87 58 62
 80  9  3 17 51 94 81 31 67 46 89  5  7 18 95 71 90 42 99 36 92 44  6 40
 54 15  1 83  4 68  0 82 65 43 69 37 73 53 57 30 91 35 22 28 75 14 38 93
 13 34 11 61]
[96 32 33 50 35 40  8 45 28 83 48 75 85 94 90 37  6 79 53  0 66 86 70 16
 15 26 81 95 69  4  1 68 49 42 11 17 84 25 64  5 10 12 82 39 99 52 58 27
 71 36 97 46 77 65 20 67 38 61 59 63 56 92 87 62 72 55 18 14 74 98 21 24
 89 76 88 29 47 93 44  2 13 43  3 22 91 73 34 19 41 57 54 23 51 31 78 60
 30  9 80  7]
batch shape:  (3, 300)
batch: <class 'list'>
batch:  dim2
wrapper: tensor([[ 0., 99.,  1., 80.,  6., 86., 85., 93., 52., 35., 31., 46., 26., 65.,
         36., 84., 78., 34., 69., 44., 81.,  7., 11., 75., 19., 66., 98., 49.,
         55., 24., 23., 79.,  8., 48., 76., 94., 89., 56., 60., 37., 87., 29.,
          9., 82., 53., 40., 88., 14., 62., 57., 13., 33., 17., 38., 64., 25.,
         42., 67., 77., 28., 41., 27., 95.,  5., 32., 70., 21., 73., 16., 59.,
         72., 15., 91., 54., 96., 30.,  4., 50., 83., 90., 58., 18., 22.,  3.,
         39., 97., 71.,  2., 20., 68., 10., 45., 47., 63., 51., 74., 92., 43.,
         61., 12., 16., 21.,  0., 99., 76.,  2., 88., 56.,  8., 97., 96., 66.,
         29., 45., 50., 52., 19., 20., 49., 47., 84., 26., 12., 59., 63., 70.,
         33., 85., 55., 39., 77., 24., 64., 32., 79., 10., 48., 78., 23., 74.,
         72., 98., 27., 60., 25., 87., 58., 62., 80.,  9.,  3., 17., 51., 94.,
         81., 31., 67., 46., 89.,  5.,  7., 18., 95., 71., 90., 42., 86., 36.,
         92., 44.,  6., 40., 54., 15.,  1., 83.,  4., 68., 41., 82., 65., 43.,
         69., 37., 73., 53., 57., 30., 91., 35., 22., 28., 75., 14., 38., 93.,
         13., 34., 11., 61., 96., 32., 33., 50.,  0., 99.,  8., 45., 28., 83.,
         48., 75., 85., 94., 90., 37.,  6., 79., 53., 35., 66., 86., 70., 16.,
         15., 26., 81., 95., 69.,  4.,  1., 68., 49., 42., 11., 17., 84., 25.,
         64.,  5., 10., 12., 82., 39., 40., 52., 58., 27., 71., 36., 97., 46.,
         77., 65., 20., 67., 38., 61., 59., 63., 56., 92., 87., 62., 72., 55.,
         18., 14., 74., 98., 21., 24., 89., 76., 88., 29., 47., 93., 44.,  2.,
         13., 43.,  3., 22., 91., 73., 34., 19., 41., 57., 54., 23., 51., 31.,
         78., 60., 30.,  9., 80.,  7.],
        [ 0., 99.,  1., 80.,  6., 86., 85., 93., 52., 35., 31., 46., 26., 65.,
         36., 84., 78., 34., 69., 44., 81.,  7., 11., 75., 19., 66., 98., 49.,
         55., 24., 23., 79.,  8., 48., 76., 94., 89., 56., 60., 37., 87., 29.,
          9., 82., 53., 40., 88., 14., 62., 57., 13., 33., 17., 38., 64., 25.,
         42., 67., 77., 28., 41., 27., 95.,  5., 32., 70., 21., 73., 16., 59.,
         72., 15., 91., 54., 96., 30.,  4., 50., 83., 90., 58., 18., 22.,  3.,
         39., 97., 71.,  2., 20., 68., 10., 45., 47., 63., 51., 74., 92., 43.,
         61., 12., 16., 21.,  0., 99., 76.,  2., 88., 56.,  8., 97., 96., 66.,
         29., 45., 50., 52., 19., 20., 49., 47., 84., 26., 12., 59., 63., 70.,
         33., 85., 55., 39., 77., 24., 64., 32., 79., 10., 48., 78., 23., 74.,
         72., 98., 27., 60., 25., 87., 58., 62., 80.,  9.,  3., 17., 51., 94.,
         81., 31., 67., 46., 89.,  5.,  7., 18., 95., 71., 90., 42., 86., 36.,
         92., 44.,  6., 40., 54., 15.,  1., 83.,  4., 68., 41., 82., 65., 43.,
         69., 37., 73., 53., 57., 30., 91., 35., 22., 28., 75., 14., 38., 93.,
         13., 34., 11., 61., 96., 32., 33., 50.,  0., 99.,  8., 45., 28., 83.,
         48., 75., 85., 94., 90., 37.,  6., 79., 53., 35., 66., 86., 70., 16.,
         15., 26., 81., 95., 69.,  4.,  1., 68., 49., 42., 11., 17., 84., 25.,
         64.,  5., 10., 12., 82., 39., 40., 52., 58., 27., 71., 36., 97., 46.,
         77., 65., 20., 67., 38., 61., 59., 63., 56., 92., 87., 62., 72., 55.,
         18., 14., 74., 98., 21., 24., 89., 76., 88., 29., 47., 93., 44.,  2.,
         13., 43.,  3., 22., 91., 73., 34., 19., 41., 57., 54., 23., 51., 31.,
         78., 60., 30.,  9., 80.,  7.],
        [ 0., 99.,  1., 80.,  6., 86., 85., 93., 52., 35., 31., 46., 26., 65.,
         36., 84., 78., 34., 69., 44., 81.,  7., 11., 75., 19., 66., 98., 49.,
         55., 24., 23., 79.,  8., 48., 76., 94., 89., 56., 60., 37., 87., 29.,
          9., 82., 53., 40., 88., 14., 62., 57., 13., 33., 17., 38., 64., 25.,
         42., 67., 77., 28., 41., 27., 95.,  5., 32., 70., 21., 73., 16., 59.,
         72., 15., 91., 54., 96., 30.,  4., 50., 83., 90., 58., 18., 22.,  3.,
         39., 97., 71.,  2., 20., 68., 10., 45., 47., 63., 51., 74., 92., 43.,
         61., 12., 16., 21.,  0., 99., 76.,  2., 88., 56.,  8., 97., 96., 66.,
         29., 45., 50., 52., 19., 20., 49., 47., 84., 26., 12., 59., 63., 70.,
         33., 85., 55., 39., 77., 24., 64., 32., 79., 10., 48., 78., 23., 74.,
         72., 98., 27., 60., 25., 87., 58., 62., 80.,  9.,  3., 17., 51., 94.,
         81., 31., 67., 46., 89.,  5.,  7., 18., 95., 71., 90., 42., 86., 36.,
         92., 44.,  6., 40., 54., 15.,  1., 83.,  4., 68., 41., 82., 65., 43.,
         69., 37., 73., 53., 57., 30., 91., 35., 22., 28., 75., 14., 38., 93.,
         13., 34., 11., 61., 96., 32., 33., 50.,  0., 99.,  8., 45., 28., 83.,
         48., 75., 85., 94., 90., 37.,  6., 79., 53., 35., 66., 86., 70., 16.,
         15., 26., 81., 95., 69.,  4.,  1., 68., 49., 42., 11., 17., 84., 25.,
         64.,  5., 10., 12., 82., 39., 40., 52., 58., 27., 71., 36., 97., 46.,
         77., 65., 20., 67., 38., 61., 59., 63., 56., 92., 87., 62., 72., 55.,
         18., 14., 74., 98., 21., 24., 89., 76., 88., 29., 47., 93., 44.,  2.,
         13., 43.,  3., 22., 91., 73., 34., 19., 41., 57., 54., 23., 51., 31.,
         78., 60., 30.,  9., 80.,  7.]])
game size: 2
shape of tensor  torch.Size([300])
Tensor: tensor([ 0., 99.,  1., 80.,  6., 86., 85., 93., 52., 35., 31., 46., 26., 65.,
        36., 84., 78., 34., 69., 44., 81.,  7., 11., 75., 19., 66., 98., 49.,
        55., 24., 23., 79.,  8., 48., 76., 94., 89., 56., 60., 37., 87., 29.,
         9., 82., 53., 40., 88., 14., 62., 57., 13., 33., 17., 38., 64., 25.,
        42., 67., 77., 28., 41., 27., 95.,  5., 32., 70., 21., 73., 16., 59.,
        72., 15., 91., 54., 96., 30.,  4., 50., 83., 90., 58., 18., 22.,  3.,
        39., 97., 71.,  2., 20., 68., 10., 45., 47., 63., 51., 74., 92., 43.,
        61., 12., 16., 21.,  0., 99., 76.,  2., 88., 56.,  8., 97., 96., 66.,
        29., 45., 50., 52., 19., 20., 49., 47., 84., 26., 12., 59., 63., 70.,
        33., 85., 55., 39., 77., 24., 64., 32., 79., 10., 48., 78., 23., 74.,
        72., 98., 27., 60., 25., 87., 58., 62., 80.,  9.,  3., 17., 51., 94.,
        81., 31., 67., 46., 89.,  5.,  7., 18., 95., 71., 90., 42., 86., 36.,
        92., 44.,  6., 40., 54., 15.,  1., 83.,  4., 68., 41., 82., 65., 43.,
        69., 37., 73., 53., 57., 30., 91., 35., 22., 28., 75., 14., 38., 93.,
        13., 34., 11., 61., 96., 32., 33., 50.,  0., 99.,  8., 45., 28., 83.,
        48., 75., 85., 94., 90., 37.,  6., 79., 53., 35., 66., 86., 70., 16.,
        15., 26., 81., 95., 69.,  4.,  1., 68., 49., 42., 11., 17., 84., 25.,
        64.,  5., 10., 12., 82., 39., 40., 52., 58., 27., 71., 36., 97., 46.,
        77., 65., 20., 67., 38., 61., 59., 63., 56., 92., 87., 62., 72., 55.,
        18., 14., 74., 98., 21., 24., 89., 76., 88., 29., 47., 93., 44.,  2.,
        13., 43.,  3., 22., 91., 73., 34., 19., 41., 57., 54., 23., 51., 31.,
        78., 60., 30.,  9., 80.,  7.])
Traceback (most recent call last):
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/zoo/signal_game/train.py", line 167, in <module>
    trainer.train(n_epochs=opts.n_epochs)  # default is 10
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/core/trainers.py", line 158, in train
    train_loss, train_rest = self.train_epoch()
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/core/trainers.py", line 138, in train_epoch
    optimized_loss, rest = self.game(*batch)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/torch/nn/modules/module.py", line 547, in __call__
    result = self.forward(*input, **kwargs)
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/core/reinforce_wrappers.py", line 113, in forward
    message, sender_log_prob, sender_entropy = self.sender(sender_input)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/torch/nn/modules/module.py", line 547, in __call__
    result = self.forward(*input, **kwargs)
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/core/reinforce_wrappers.py", line 42, in forward
    logits = self.agent(*args, **kwargs)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/torch/nn/modules/module.py", line 547, in __call__
    result = self.forward(*input, **kwargs)
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/zoo/signal_game/archs.py", line 31, in forward
    emb = self.return_embeddings(x)
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/zoo/signal_game/archs.py", line 65, in return_embeddings
    h_i = self.lin1(h)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/torch/nn/modules/module.py", line 547, in __call__
    result = self.forward(*input, **kwargs)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/torch/nn/modules/linear.py", line 87, in forward
    return F.linear(input, self.weight, self.bias)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/torch/nn/functional.py", line 1371, in linear
    output = input.matmul(weight.t())
RuntimeError: size mismatch, m1: [1 x 300], m2: [4096 x 50] at ../aten/src/TH/generic/THTensorMath.cpp:752
➜  EGG git:(master) ✗ sh start_signal_game.sh




----------------train
train data: <class 'egg.zoo.signal_game.sgdata.OneHotLoader'>
[3140 2960 2911 ... 3369 1705 1605]
[1133 2479 2932 ... 1343 3324 1797]
[2327 2349  204 ... 2785  682 1229]
batch shape:  (3, 12288)
batch: <class 'list'>
batch:  dim2
wrapper: tensor([[   0., 4095., 2911.,  ..., 2785.,  682., 1229.],
        [   0., 4095., 2911.,  ..., 2785.,  682., 1229.],
        [   0., 4095., 2911.,  ..., 2785.,  682., 1229.]])
game size: 2
shape of tensor  torch.Size([12288])
Tensor: tensor([   0., 4095., 2911.,  ..., 2785.,  682., 1229.])
Traceback (most recent call last):
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/zoo/signal_game/train.py", line 167, in <module>
    trainer.train(n_epochs=opts.n_epochs)  # default is 10
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/core/trainers.py", line 158, in train
    train_loss, train_rest = self.train_epoch()
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/core/trainers.py", line 138, in train_epoch
    optimized_loss, rest = self.game(*batch)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/torch/nn/modules/module.py", line 547, in __call__
    result = self.forward(*input, **kwargs)
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/core/reinforce_wrappers.py", line 113, in forward
    message, sender_log_prob, sender_entropy = self.sender(sender_input)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/torch/nn/modules/module.py", line 547, in __call__
    result = self.forward(*input, **kwargs)
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/core/reinforce_wrappers.py", line 42, in forward
    logits = self.agent(*args, **kwargs)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/torch/nn/modules/module.py", line 547, in __call__
    result = self.forward(*input, **kwargs)
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/zoo/signal_game/archs.py", line 31, in forward
    emb = self.return_embeddings(x)
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/zoo/signal_game/archs.py", line 65, in return_embeddings
    h_i = self.lin1(h)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/torch/nn/modules/module.py", line 547, in __call__
    result = self.forward(*input, **kwargs)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/torch/nn/modules/linear.py", line 87, in forward
    return F.linear(input, self.weight, self.bias)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/torch/nn/functional.py", line 1371, in linear
    output = input.matmul(weight.t())
RuntimeError: size mismatch, m1: [1 x 12288], m2: [4096 x 50] at ../aten/src/TH/generic/THTensorMath.cpp:752
➜  EGG git:(master) ✗ sh start_signal_game.sh




----------------train
train data: <class 'egg.zoo.signal_game.sgdata.OneHotLoader'>
[ 399 1297  240 ... 1180 1326  953]
[ 484 1349  939 ...  450 1335  988]
[ 156  282  114 ... 1310   71  977]
batch shape:  (3, 4095)
batch: <class 'list'>
batch:  dim2
wrapper: tensor([[   0., 1364.,  240.,  ..., 1310.,   71.,  977.],
        [   0., 1364.,  240.,  ..., 1310.,   71.,  977.],
        [   0., 1364.,  240.,  ..., 1310.,   71.,  977.]])
game size: 2
shape of tensor  torch.Size([4095])
Tensor: tensor([   0., 1364.,  240.,  ..., 1310.,   71.,  977.])
Traceback (most recent call last):
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/zoo/signal_game/train.py", line 167, in <module>
    trainer.train(n_epochs=opts.n_epochs)  # default is 10
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/core/trainers.py", line 158, in train
    train_loss, train_rest = self.train_epoch()
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/core/trainers.py", line 138, in train_epoch
    optimized_loss, rest = self.game(*batch)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/torch/nn/modules/module.py", line 547, in __call__
    result = self.forward(*input, **kwargs)
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/core/reinforce_wrappers.py", line 113, in forward
    message, sender_log_prob, sender_entropy = self.sender(sender_input)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/torch/nn/modules/module.py", line 547, in __call__
    result = self.forward(*input, **kwargs)
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/core/reinforce_wrappers.py", line 42, in forward
    logits = self.agent(*args, **kwargs)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/torch/nn/modules/module.py", line 547, in __call__
    result = self.forward(*input, **kwargs)
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/zoo/signal_game/archs.py", line 31, in forward
    emb = self.return_embeddings(x)
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/zoo/signal_game/archs.py", line 65, in return_embeddings
    h_i = self.lin1(h)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/torch/nn/modules/module.py", line 547, in __call__
    result = self.forward(*input, **kwargs)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/torch/nn/modules/linear.py", line 87, in forward
    return F.linear(input, self.weight, self.bias)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/torch/nn/functional.py", line 1371, in linear
    output = input.matmul(weight.t())
RuntimeError: size mismatch, m1: [1 x 4095], m2: [4096 x 50] at ../aten/src/TH/generic/THTensorMath.cpp:752
➜  EGG git:(master) ✗ sh start_signal_game.sh




----------------train
train data: <class 'egg.zoo.signal_game.sgdata.OneHotLoader'>
[1389  129  667 ... 1518  141 1764]
[1202  465 1618 ... 1654 1576  506]
batch shape:  (3, 4096)
batch: <class 'list'>
batch:  dim2
wrapper: tensor([[   0., 2047.,  667.,  ..., 1654., 1576.,  506.],
        [   0., 2047.,  667.,  ..., 1654., 1576.,  506.],
        [   0., 2047.,  667.,  ..., 1654., 1576.,  506.]])
game size: 2
shape of tensor  torch.Size([4096])
Tensor: tensor([   0., 2047.,  667.,  ..., 1654., 1576.,  506.])
game size: 2
shape of tensor  torch.Size([4096])
Tensor: tensor([   0., 2047.,  667.,  ..., 1654., 1576.,  506.])
Traceback (most recent call last):
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/zoo/signal_game/train.py", line 167, in <module>
    trainer.train(n_epochs=opts.n_epochs)  # default is 10
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/core/trainers.py", line 158, in train
    train_loss, train_rest = self.train_epoch()
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/core/trainers.py", line 138, in train_epoch
    optimized_loss, rest = self.game(*batch)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/torch/nn/modules/module.py", line 547, in __call__
    result = self.forward(*input, **kwargs)
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/core/reinforce_wrappers.py", line 113, in forward
    message, sender_log_prob, sender_entropy = self.sender(sender_input)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/torch/nn/modules/module.py", line 547, in __call__
    result = self.forward(*input, **kwargs)
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/core/reinforce_wrappers.py", line 42, in forward
    logits = self.agent(*args, **kwargs)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/torch/nn/modules/module.py", line 547, in __call__
    result = self.forward(*input, **kwargs)
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/zoo/signal_game/archs.py", line 35, in forward
    h = self.conv2(emb)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/torch/nn/modules/module.py", line 547, in __call__
    result = self.forward(*input, **kwargs)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/torch/nn/modules/conv.py", line 343, in forward
    return self.conv2d_forward(input, self.weight)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/torch/nn/modules/conv.py", line 340, in conv2d_forward
    self.padding, self.dilation, self.groups)
RuntimeError: Expected 4-dimensional input for 4-dimensional weight 20 1 2, but got 3-dimensional input of size [50, 1, 2] instead
➜  EGG git:(master) ✗ sh start_signal_game.sh




----------------train
train data: <class 'egg.zoo.signal_game.sgdata.OneHotLoader'>
[ 927 1543 1065 ...  252 1688  821]
[556 194 626 ... 235 203 935]
batch shape:  (1, 3, 4096)
batch: <class 'list'>
batch:  dim2
wrapper: tensor([[[   0., 2047., 1065.,  ...,  235.,  203.,  935.],
         [   0., 2047., 1065.,  ...,  235.,  203.,  935.],
         [   0., 2047., 1065.,  ...,  235.,  203.,  935.]]])
game size: 2
shape of tensor  torch.Size([3, 4096])
Tensor: tensor([[   0., 2047., 1065.,  ...,  235.,  203.,  935.],
        [   0., 2047., 1065.,  ...,  235.,  203.,  935.],
        [   0., 2047., 1065.,  ...,  235.,  203.,  935.]])
game size: 2
Traceback (most recent call last):
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/zoo/signal_game/train.py", line 167, in <module>
    trainer.train(n_epochs=opts.n_epochs)  # default is 10
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/core/trainers.py", line 158, in train
    train_loss, train_rest = self.train_epoch()
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/core/trainers.py", line 138, in train_epoch
    optimized_loss, rest = self.game(*batch)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/torch/nn/modules/module.py", line 547, in __call__
    result = self.forward(*input, **kwargs)
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/core/reinforce_wrappers.py", line 113, in forward
    message, sender_log_prob, sender_entropy = self.sender(sender_input)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/torch/nn/modules/module.py", line 547, in __call__
    result = self.forward(*input, **kwargs)
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/core/reinforce_wrappers.py", line 42, in forward
    logits = self.agent(*args, **kwargs)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/torch/nn/modules/module.py", line 547, in __call__
    result = self.forward(*input, **kwargs)
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/zoo/signal_game/archs.py", line 31, in forward
    emb = self.return_embeddings(x)
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/zoo/signal_game/archs.py", line 59, in return_embeddings
    h = x[i]
IndexError: index 1 is out of bounds for dimension 0 with size 1
➜  EGG git:(master) ✗ sh start_signal_game.sh




----------------train
train data: <class 'egg.zoo.signal_game.sgdata.OneHotLoader'>
[ 135  784  847 ... 1259  935  309]
[ 123  181  262 ...  941 1822  486]
batch shape:  (3, 4096)
batch: <class 'list'>
batch:  dim2
wrapper: tensor([[   0., 2047.,  847.,  ...,  941., 1822.,  486.],
        [   0., 2047.,  847.,  ...,  941., 1822.,  486.],
        [   0., 2047.,  847.,  ...,  941., 1822.,  486.]])
game size: 2
shape of tensor  torch.Size([4096])
Tensor: tensor([   0., 2047.,  847.,  ...,  941., 1822.,  486.])
game size: 2
shape of tensor  torch.Size([4096])
Tensor: tensor([   0., 2047.,  847.,  ...,  941., 1822.,  486.])
Traceback (most recent call last):
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/zoo/signal_game/train.py", line 167, in <module>
    trainer.train(n_epochs=opts.n_epochs)  # default is 10
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/core/trainers.py", line 158, in train
    train_loss, train_rest = self.train_epoch()
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/core/trainers.py", line 138, in train_epoch
    optimized_loss, rest = self.game(*batch)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/torch/nn/modules/module.py", line 547, in __call__
    result = self.forward(*input, **kwargs)
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/core/reinforce_wrappers.py", line 113, in forward
    message, sender_log_prob, sender_entropy = self.sender(sender_input)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/torch/nn/modules/module.py", line 547, in __call__
    result = self.forward(*input, **kwargs)
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/core/reinforce_wrappers.py", line 42, in forward
    logits = self.agent(*args, **kwargs)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/torch/nn/modules/module.py", line 547, in __call__
    result = self.forward(*input, **kwargs)
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/zoo/signal_game/archs.py", line 35, in forward
    h = self.conv2(emb)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/torch/nn/modules/module.py", line 547, in __call__
    result = self.forward(*input, **kwargs)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/torch/nn/modules/conv.py", line 343, in forward
    return self.conv2d_forward(input, self.weight)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/torch/nn/modules/conv.py", line 340, in conv2d_forward
    self.padding, self.dilation, self.groups)
RuntimeError: Expected 4-dimensional input for 4-dimensional weight 20 1 2, but got 3-dimensional input of size [50, 1, 2] instead
➜  EGG git:(master) ✗ sh start_signal_game.sh




----------------train
train data: <class 'egg.zoo.signal_game.sgdata.OneHotLoader'>
[ 696  402  767 ...  347  886 2022]
[  35  691 1976 ...  871  112 1316]
batch shape:  (3, 1, 4096)
batch: <class 'list'>
batch:  dim2
wrapper: tensor([[[   0., 2047.,  767.,  ...,  871.,  112., 1316.]],

        [[   0., 2047.,  767.,  ...,  871.,  112., 1316.]],

        [[   0., 2047.,  767.,  ...,  871.,  112., 1316.]]])
game size: 2
shape of tensor  torch.Size([1, 4096])
Tensor: tensor([[   0., 2047.,  767.,  ...,  871.,  112., 1316.]])
game size: 2
shape of tensor  torch.Size([1, 4096])
Tensor: tensor([[   0., 2047.,  767.,  ...,  871.,  112., 1316.]])
tensor([[[   0., 2047.,  767.,  ...,  871.,  112., 1316.]],

        [[   0., 2047.,  767.,  ...,  871.,  112., 1316.]],

        [[   0., 2047.,  767.,  ...,  871.,  112., 1316.]]])
Traceback (most recent call last):
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/zoo/signal_game/train.py", line 167, in <module>
    trainer.train(n_epochs=opts.n_epochs)  # default is 10
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/core/trainers.py", line 158, in train
    train_loss, train_rest = self.train_epoch()
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/core/trainers.py", line 138, in train_epoch
    optimized_loss, rest = self.game(*batch)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/torch/nn/modules/module.py", line 547, in __call__
    result = self.forward(*input, **kwargs)
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/core/reinforce_wrappers.py", line 115, in forward
    receiver_output, receiver_log_prob, receiver_entropy = self.receiver(message, receiver_input)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/torch/nn/modules/module.py", line 547, in __call__
    result = self.forward(*input, **kwargs)
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/core/reinforce_wrappers.py", line 42, in forward
    logits = self.agent(*args, **kwargs)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/torch/nn/modules/module.py", line 547, in __call__
    result = self.forward(*input, **kwargs)
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/zoo/signal_game/archs.py", line 92, in forward
    emb = self.return_embeddings(x)
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/zoo/signal_game/archs.py", line 113, in return_embeddings
    h = x[i]
TypeError: 'NoneType' object is not subscriptable
➜  EGG git:(master) ✗ sh start_signal_game.sh




----------------train
train data: <class 'egg.zoo.signal_game.sgdata.OneHotLoader'>
[1294  242  962 ...  909 1331 1404]
[2031 1002 1934 ...  117 1263 1810]
batch shape:  (3, 4096)
batch: <class 'list'>
batch:  dim2
wrapper: tensor([[   0., 2047.,  962.,  ...,  117., 1263., 1810.],
        [   0., 2047.,  962.,  ...,  117., 1263., 1810.],
        [   0., 2047.,  962.,  ...,  117., 1263., 1810.]])
game size: 2
shape of tensor  torch.Size([4096])
Tensor: tensor([   0., 2047.,  962.,  ...,  117., 1263., 1810.])
game size: 2
shape of tensor  torch.Size([4096])
Tensor: tensor([   0., 2047.,  962.,  ...,  117., 1263., 1810.])
Traceback (most recent call last):
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/zoo/signal_game/train.py", line 167, in <module>
    trainer.train(n_epochs=opts.n_epochs)  # default is 10
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/core/trainers.py", line 158, in train
    train_loss, train_rest = self.train_epoch()
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/core/trainers.py", line 138, in train_epoch
    optimized_loss, rest = self.game(*batch)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/torch/nn/modules/module.py", line 547, in __call__
    result = self.forward(*input, **kwargs)
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/core/reinforce_wrappers.py", line 113, in forward
    message, sender_log_prob, sender_entropy = self.sender(sender_input)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/torch/nn/modules/module.py", line 547, in __call__
    result = self.forward(*input, **kwargs)
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/core/reinforce_wrappers.py", line 42, in forward
    logits = self.agent(*args, **kwargs)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/torch/nn/modules/module.py", line 547, in __call__
    result = self.forward(*input, **kwargs)
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/zoo/signal_game/archs.py", line 35, in forward
    h = self.conv2(emb)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/torch/nn/modules/module.py", line 547, in __call__
    result = self.forward(*input, **kwargs)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/torch/nn/modules/conv.py", line 343, in forward
    return self.conv2d_forward(input, self.weight)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/torch/nn/modules/conv.py", line 340, in conv2d_forward
    self.padding, self.dilation, self.groups)
RuntimeError: Expected 4-dimensional input for 4-dimensional weight 20 1 2, but got 3-dimensional input of size [50, 1, 2] instead
➜  EGG git:(master) ✗ sh start_signal_game.sh




----------------train
train data: <class 'egg.zoo.signal_game.sgdata.OneHotLoader'>
[1496  714 1877 ...  444 1209 1597]
[1435  214 1219 ...  585 1752 1209]
batch shape:  (3, 4096)
batch: <class 'list'>
batch:  dim2
wrapper: tensor([[   0., 2047., 1877.,  ...,  585., 1752., 1209.],
        [   0., 2047., 1877.,  ...,  585., 1752., 1209.],
        [   0., 2047., 1877.,  ...,  585., 1752., 1209.]])
game size: 3
shape of tensor  torch.Size([4096])
Tensor: tensor([   0., 2047., 1877.,  ...,  585., 1752., 1209.])
game size: 3
shape of tensor  torch.Size([4096])
Tensor: tensor([   0., 2047., 1877.,  ...,  585., 1752., 1209.])
game size: 3
shape of tensor  torch.Size([4096])
Tensor: tensor([   0., 2047., 1877.,  ...,  585., 1752., 1209.])
Traceback (most recent call last):
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/zoo/signal_game/train.py", line 167, in <module>
    trainer.train(n_epochs=opts.n_epochs)  # default is 10
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/core/trainers.py", line 158, in train
    train_loss, train_rest = self.train_epoch()
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/core/trainers.py", line 138, in train_epoch
    optimized_loss, rest = self.game(*batch)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/torch/nn/modules/module.py", line 547, in __call__
    result = self.forward(*input, **kwargs)
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/core/reinforce_wrappers.py", line 113, in forward
    message, sender_log_prob, sender_entropy = self.sender(sender_input)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/torch/nn/modules/module.py", line 547, in __call__
    result = self.forward(*input, **kwargs)
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/core/reinforce_wrappers.py", line 42, in forward
    logits = self.agent(*args, **kwargs)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/torch/nn/modules/module.py", line 547, in __call__
    result = self.forward(*input, **kwargs)
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/zoo/signal_game/archs.py", line 35, in forward
    h = self.conv2(emb)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/torch/nn/modules/module.py", line 547, in __call__
    result = self.forward(*input, **kwargs)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/torch/nn/modules/conv.py", line 343, in forward
    return self.conv2d_forward(input, self.weight)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/torch/nn/modules/conv.py", line 340, in conv2d_forward
    self.padding, self.dilation, self.groups)
RuntimeError: Expected 4-dimensional input for 4-dimensional weight 20 1 3, but got 3-dimensional input of size [50, 1, 3] instead
➜  EGG git:(master) ✗ sh start_signal_game.sh




----------------train
train data: <class 'egg.zoo.signal_game.sgdata.OneHotLoader'>
[1497 1179 1992 ... 1114  347 1742]
[ 482 1868  389 ... 1985  429  345]
batch shape:  (3, 4096)
batch: <class 'list'>
batch:  dim2
wrapper: tensor([[   0., 2047., 1992.,  ..., 1985.,  429.,  345.],
        [   0., 2047., 1992.,  ..., 1985.,  429.,  345.],
        [   0., 2047., 1992.,  ..., 1985.,  429.,  345.]])
game size: 2
shape of tensor  torch.Size([4096])
Tensor: tensor([   0., 2047., 1992.,  ..., 1985.,  429.,  345.])
game size: 2
shape of tensor  torch.Size([4096])
Tensor: tensor([   0., 2047., 1992.,  ..., 1985.,  429.,  345.])
Traceback (most recent call last):
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/zoo/signal_game/train.py", line 167, in <module>
    trainer.train(n_epochs=opts.n_epochs)  # default is 10
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/core/trainers.py", line 158, in train
    train_loss, train_rest = self.train_epoch()
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/core/trainers.py", line 138, in train_epoch
    optimized_loss, rest = self.game(*batch)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/torch/nn/modules/module.py", line 547, in __call__
    result = self.forward(*input, **kwargs)
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/core/reinforce_wrappers.py", line 113, in forward
    message, sender_log_prob, sender_entropy = self.sender(sender_input)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/torch/nn/modules/module.py", line 547, in __call__
    result = self.forward(*input, **kwargs)
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/core/reinforce_wrappers.py", line 42, in forward
    logits = self.agent(*args, **kwargs)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/torch/nn/modules/module.py", line 547, in __call__
    result = self.forward(*input, **kwargs)
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/zoo/signal_game/archs.py", line 35, in forward
    h = self.conv2(emb)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/torch/nn/modules/module.py", line 547, in __call__
    result = self.forward(*input, **kwargs)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/torch/nn/modules/conv.py", line 343, in forward
    return self.conv2d_forward(input, self.weight)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/torch/nn/modules/conv.py", line 340, in conv2d_forward
    self.padding, self.dilation, self.groups)
RuntimeError: Expected 4-dimensional input for 4-dimensional weight 20 1 2, but got 3-dimensional input of size [20, 1, 2] instead
➜  EGG git:(master) ✗ sh start_signal_game.sh




----------------train
train data: <class 'egg.zoo.signal_game.sgdata.OneHotLoader'>
[ 746 1405 1434 ...  176 1879 1408]
[ 256 1633  839 ...  666  914 1215]
batch shape:  (1, 3, 4096)
batch: <class 'list'>
batch:  dim2
wrapper: tensor([[[   0., 2047., 1434.,  ...,  666.,  914., 1215.],
         [   0., 2047., 1434.,  ...,  666.,  914., 1215.],
         [   0., 2047., 1434.,  ...,  666.,  914., 1215.]]])
game size: 2
shape of tensor  torch.Size([3, 4096])
Tensor: tensor([[   0., 2047., 1434.,  ...,  666.,  914., 1215.],
        [   0., 2047., 1434.,  ...,  666.,  914., 1215.],
        [   0., 2047., 1434.,  ...,  666.,  914., 1215.]])
game size: 2
Traceback (most recent call last):
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/zoo/signal_game/train.py", line 167, in <module>
    trainer.train(n_epochs=opts.n_epochs)  # default is 10
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/core/trainers.py", line 158, in train
    train_loss, train_rest = self.train_epoch()
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/core/trainers.py", line 138, in train_epoch
    optimized_loss, rest = self.game(*batch)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/torch/nn/modules/module.py", line 547, in __call__
    result = self.forward(*input, **kwargs)
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/core/reinforce_wrappers.py", line 113, in forward
    message, sender_log_prob, sender_entropy = self.sender(sender_input)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/torch/nn/modules/module.py", line 547, in __call__
    result = self.forward(*input, **kwargs)
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/core/reinforce_wrappers.py", line 42, in forward
    logits = self.agent(*args, **kwargs)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/torch/nn/modules/module.py", line 547, in __call__
    result = self.forward(*input, **kwargs)
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/zoo/signal_game/archs.py", line 31, in forward
    emb = self.return_embeddings(x)
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/zoo/signal_game/archs.py", line 59, in return_embeddings
    h = x[i]
IndexError: index 1 is out of bounds for dimension 0 with size 1
➜  EGG git:(master) ✗ sh start_signal_game.sh




----------------train
train data: <class 'egg.zoo.signal_game.sgdata.OneHotLoader'>
[ 347 1943  985 ... 1533  104  723]
[1017  765  710 ... 1101 1894  423]
batch shape:  (3, 4096, 1)
batch: <class 'list'>
batch:  dim2
wrapper: tensor([[[   0.],
         [2047.],
         [ 985.],
         ...,
         [1101.],
         [1894.],
         [ 423.]],

        [[   0.],
         [2047.],
         [ 985.],
         ...,
         [1101.],
         [1894.],
         [ 423.]],

        [[   0.],
         [2047.],
         [ 985.],
         ...,
         [1101.],
         [1894.],
         [ 423.]]])
game size: 2
shape of tensor  torch.Size([4096, 1])
Tensor: tensor([[   0.],
        [2047.],
        [ 985.],
        ...,
        [1101.],
        [1894.],
        [ 423.]])
Traceback (most recent call last):
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/zoo/signal_game/train.py", line 167, in <module>
    trainer.train(n_epochs=opts.n_epochs)  # default is 10
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/core/trainers.py", line 158, in train
    train_loss, train_rest = self.train_epoch()
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/core/trainers.py", line 138, in train_epoch
    optimized_loss, rest = self.game(*batch)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/torch/nn/modules/module.py", line 547, in __call__
    result = self.forward(*input, **kwargs)
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/core/reinforce_wrappers.py", line 113, in forward
    message, sender_log_prob, sender_entropy = self.sender(sender_input)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/torch/nn/modules/module.py", line 547, in __call__
    result = self.forward(*input, **kwargs)
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/core/reinforce_wrappers.py", line 42, in forward
    logits = self.agent(*args, **kwargs)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/torch/nn/modules/module.py", line 547, in __call__
    result = self.forward(*input, **kwargs)
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/zoo/signal_game/archs.py", line 31, in forward
    emb = self.return_embeddings(x)
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/zoo/signal_game/archs.py", line 65, in return_embeddings
    h_i = self.lin1(h)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/torch/nn/modules/module.py", line 547, in __call__
    result = self.forward(*input, **kwargs)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/torch/nn/modules/linear.py", line 87, in forward
    return F.linear(input, self.weight, self.bias)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/torch/nn/functional.py", line 1371, in linear
    output = input.matmul(weight.t())
RuntimeError: size mismatch, m1: [4096 x 1], m2: [4096 x 50] at ../aten/src/TH/generic/THTensorMath.cpp:752
➜  EGG git:(master) ✗ sh start_signal_game.sh




----------------train
train data: <class 'egg.zoo.signal_game.sgdata.OneHotLoader'>
[1634 1831  896 ... 1364 1178  664]
[ 577 1059 1433 ... 1997 1581  423]
batch shape:  (3, 1, 4096)
batch: <class 'list'>
batch:  dim2
wrapper: tensor([[[   0., 2047.,  896.,  ..., 1997., 1581.,  423.]],

        [[   0., 2047.,  896.,  ..., 1997., 1581.,  423.]],

        [[   0., 2047.,  896.,  ..., 1997., 1581.,  423.]]])
game size: 2
shape of tensor  torch.Size([1, 4096])
Tensor: tensor([[   0., 2047.,  896.,  ..., 1997., 1581.,  423.]])
game size: 2
shape of tensor  torch.Size([1, 4096])
Tensor: tensor([[   0., 2047.,  896.,  ..., 1997., 1581.,  423.]])
tensor([[[   0., 2047.,  896.,  ..., 1997., 1581.,  423.]],

        [[   0., 2047.,  896.,  ..., 1997., 1581.,  423.]],

        [[   0., 2047.,  896.,  ..., 1997., 1581.,  423.]]])
Traceback (most recent call last):
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/zoo/signal_game/train.py", line 167, in <module>
    trainer.train(n_epochs=opts.n_epochs)  # default is 10
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/core/trainers.py", line 158, in train
    train_loss, train_rest = self.train_epoch()
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/core/trainers.py", line 138, in train_epoch
    optimized_loss, rest = self.game(*batch)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/torch/nn/modules/module.py", line 547, in __call__
    result = self.forward(*input, **kwargs)
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/core/reinforce_wrappers.py", line 115, in forward
    receiver_output, receiver_log_prob, receiver_entropy = self.receiver(message, receiver_input)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/torch/nn/modules/module.py", line 547, in __call__
    result = self.forward(*input, **kwargs)
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/core/reinforce_wrappers.py", line 42, in forward
    logits = self.agent(*args, **kwargs)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/torch/nn/modules/module.py", line 547, in __call__
    result = self.forward(*input, **kwargs)
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/zoo/signal_game/archs.py", line 92, in forward
    emb = self.return_embeddings(x)
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/zoo/signal_game/archs.py", line 113, in return_embeddings
    h = x[i]
TypeError: 'NoneType' object is not subscriptable
➜  EGG git:(master) ✗ sh start_signal_game.sh




----------------train
train data: <class 'egg.zoo.signal_game.sgdata.OneHotLoader'>
[1349   81  701 ... 1855 1049  792]
[  81  312 2029 ...  966 1702 1486]
batch shape:  (1, 3, 4096)
batch: <class 'list'>
batch:  dim2
wrapper: tensor([[[   0., 2047.,  701.,  ...,  966., 1702., 1486.],
         [   0., 2047.,  701.,  ...,  966., 1702., 1486.],
         [   0., 2047.,  701.,  ...,  966., 1702., 1486.]]])
game size: 2
shape of tensor  torch.Size([3, 4096])
Tensor: tensor([[   0., 2047.,  701.,  ...,  966., 1702., 1486.],
        [   0., 2047.,  701.,  ...,  966., 1702., 1486.],
        [   0., 2047.,  701.,  ...,  966., 1702., 1486.]])
game size: 2
Traceback (most recent call last):
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/zoo/signal_game/train.py", line 167, in <module>
    trainer.train(n_epochs=opts.n_epochs)  # default is 10
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/core/trainers.py", line 158, in train
    train_loss, train_rest = self.train_epoch()
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/core/trainers.py", line 138, in train_epoch
    optimized_loss, rest = self.game(*batch)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/torch/nn/modules/module.py", line 547, in __call__
    result = self.forward(*input, **kwargs)
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/core/reinforce_wrappers.py", line 113, in forward
    message, sender_log_prob, sender_entropy = self.sender(sender_input)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/torch/nn/modules/module.py", line 547, in __call__
    result = self.forward(*input, **kwargs)
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/core/reinforce_wrappers.py", line 42, in forward
    logits = self.agent(*args, **kwargs)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/torch/nn/modules/module.py", line 547, in __call__
    result = self.forward(*input, **kwargs)
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/zoo/signal_game/archs.py", line 31, in forward
    emb = self.return_embeddings(x)
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/zoo/signal_game/archs.py", line 59, in return_embeddings
    h = x[i]
IndexError: index 1 is out of bounds for dimension 0 with size 1
➜  EGG git:(master) ✗ sh start_signal_game.sh




----------------train
train data: <class 'egg.zoo.signal_game.sgdata.OneHotLoader'>
[ 493 1874 1333 ... 1525 1664 1855]
[1153 1752  958 ... 1414  387 1563]
batch shape:  (3, 4096)
batch: <class 'list'>
batch:  dim2
wrapper: tensor([[   0., 2047., 1333.,  ..., 1414.,  387., 1563.],
        [   0., 2047., 1333.,  ..., 1414.,  387., 1563.],
        [   0., 2047., 1333.,  ..., 1414.,  387., 1563.]])
game size: 2
shape of tensor  torch.Size([4096])
Tensor: tensor([   0., 2047., 1333.,  ..., 1414.,  387., 1563.])
game size: 2
shape of tensor  torch.Size([4096])
Tensor: tensor([   0., 2047., 1333.,  ..., 1414.,  387., 1563.])
Traceback (most recent call last):
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/zoo/signal_game/train.py", line 167, in <module>
    trainer.train(n_epochs=opts.n_epochs)  # default is 10
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/core/trainers.py", line 158, in train
    train_loss, train_rest = self.train_epoch()
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/core/trainers.py", line 138, in train_epoch
    optimized_loss, rest = self.game(*batch)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/torch/nn/modules/module.py", line 547, in __call__
    result = self.forward(*input, **kwargs)
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/core/reinforce_wrappers.py", line 113, in forward
    message, sender_log_prob, sender_entropy = self.sender(sender_input)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/torch/nn/modules/module.py", line 547, in __call__
    result = self.forward(*input, **kwargs)
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/core/reinforce_wrappers.py", line 42, in forward
    logits = self.agent(*args, **kwargs)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/torch/nn/modules/module.py", line 547, in __call__
    result = self.forward(*input, **kwargs)
  File "/Users/pengfeihe/Documents/Programming Language/Python/Github/EGG/egg/zoo/signal_game/archs.py", line 35, in forward
    h = self.conv2(emb)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/torch/nn/modules/module.py", line 547, in __call__
    result = self.forward(*input, **kwargs)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/torch/nn/modules/conv.py", line 343, in forward
    return self.conv2d_forward(input, self.weight)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/torch/nn/modules/conv.py", line 340, in conv2d_forward
    self.padding, self.dilation, self.groups)
RuntimeError: Expected 4-dimensional input for 4-dimensional weight 20 1 2, but got 3-dimensional input of size [50, 1, 2] instead
➜  EGG git:(master) ✗ 
